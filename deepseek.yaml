openapi: 3.0.0
info:
  title: DeepSeek API Collection Overview
  description: >-
    The DeepSeek API collection provides a set of endpoints for interacting with
    DeepSeek's AI-powered services. This collection includes endpoints for
    creating chat completions and fill-in-the-middle (FIM) completions, allowing
    users to generate AI-driven responses and text completions based on provided
    prompts.


    **Endpoints:**


    1. **Create Chat Completion:** Generate chat completions with specified
    parameters, including message history, model selection, and token limits.
        
    2. **Create FIM Completion (Beta):** Generate fill-in-the-middle completions
    using the FIM model, allowing for text completion with specified prompts and
    parameters.
        

    **Usage:**


    - Each request requires an `Authorization` header with a valid API key.
        
    - The request body should be formatted in JSON and include the necessary
    parameters as outlined in the API documentation.
        
    - The collection is designed for easy testing and integration with the
    DeepSeek API.
        

    **Note:** Replace in the `Authorization` header with your actual API key
    before sending requests.


    **Reference docs:**


    - API Docs: [https://api-docs.deepseek.com/](https://api-docs.deepseek.com/)
        
    - API Keys:
    [https://platform.deepseek.com/api_keys](https://platform.deepseek.com/api_keys)
  version: 1.0.0
servers:
  - url: https://api.deepseek.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
paths:
  /chat/completions:
    post:
      tags:
        - default
      summary: Create Chat Completion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: |-
                {
                  "messages": [
                    {
                      "role": "system",
                      "content": "You are a helpful assistant."
                    },
                    {
                      "role": "user",
                      "content": "Hello!"
                    }
                  ],
                  "model": "deepseek-chat", //can be "deepseek-chat" or "deepseek-reasoner"
                  "frequency_penalty": 0,
                  "max_tokens": 100
                }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <YOUR_API_KEY>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /models:
    get:
      tags:
        - default
      summary: Get Models
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /beta/completions:
    post:
      tags:
        - default
      summary: Create FIM Completion (Beta)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                model: deepseek-chat
                prompt: 'Once upon a time, '
                echo: false
                frequency_penalty: 0
                logprobs: 0
                max_tokens: 1024
                presence_penalty: 0
                stop: null
                stream: false
                stream_options: null
                suffix: null
                temperature: 1
                top_p: 1
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <TOKEN>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
