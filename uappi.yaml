openapi: 3.0.0
info:
  title: API v2 wap.store
  version: 1.0.0
servers:
  - url: http://{{api.wapstore}}
tags:
  - name: V2
  - name: Attributes
  - name: Auth
  - name: Ping
  - name: Documentation
  - name: Collection
  - name: Batch
  - name: Bi
  - name: Bi > Orders
  - name: Brands
  - name: Categories
  - name: Characteristics
  - name: Characteristics > Values
  - name: Customers
  - name: Customers > Credit-transactions-batch
  - name: Customers > Login
  - name: Customers > Recover-password
  - name: Customers > Queue
  - name: Freights
  - name: Freights > Carriers
paths:
  /v2:
    get:
      tags:
        - V2
      summary: GET
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/attributes:
    get:
      tags:
        - Attributes
      summary: GET Attributes
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Attributes
      summary: POST Attributes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                nome: Nome do atributo
                unico: false
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/attributes/{idAtributo}/values:
    post:
      tags:
        - Attributes
      summary: POST Attributes  values
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                label: Label do valor
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: idAtributo
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/attributes/{idAtributo}:
    get:
      tags:
        - Attributes
      summary: GET Attributes
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: idAtributo
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/auth:
    post:
      tags:
        - Auth
      summary: POST Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                apiKey: Chave pública da API de integração do Seller
                secretKey: Chave privada da API de integração do Seller
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/ping:
    get:
      tags:
        - Ping
      summary: GET Ping
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/documentation:
    get:
      tags:
        - Documentation
      summary: GET Documentation
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/collection/{api}:
    get:
      tags:
        - Collection
      summary: GET Collection
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: api
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/batch/{id}:
    get:
      tags:
        - Batch
      summary: GET Batch
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/bi/orders:
    get:
      tags:
        - Bi > Orders
      summary: GET Bi orders
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/bi/orders/queue:
    get:
      tags:
        - Bi > Orders
      summary: GET Bi orders queue
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Bi > Orders
      summary: DELETE Bi orders queue
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/bi/orders/{idPedido}:
    get:
      tags:
        - Bi > Orders
      summary: GET Bi orders
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: idPedido
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/brands:
    get:
      tags:
        - Brands
      summary: GET Brands
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Brands
      summary: POST Brands
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                nome: Nome da marca
                titulo: Título da marca
                descricao: Descrição da marca
                ativo: true
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/brands/{idMarca}:
    get:
      tags:
        - Brands
      summary: GET Brands
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: idMarca
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/categories:
    get:
      tags:
        - Categories
      summary: GET Categories
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Categories
      summary: POST Categories
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                nome: Nome da categoria
                titulo: Título da categoria
                descricao: Descrição da categoria
                ativo: false
                idCategoriaPai: 12
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/categories/{idCategoria}:
    get:
      tags:
        - Categories
      summary: GET Categories
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: idCategoria
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/characteristics/values/{id}:
    get:
      tags:
        - Characteristics > Values
      summary: GET Characteristics values
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/characteristics:
    get:
      tags:
        - Characteristics
      summary: GET Characteristics
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/characteristics/{id}:
    get:
      tags:
        - Characteristics
      summary: GET Characteristics
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/characteristics/{id}/values:
    get:
      tags:
        - Characteristics
      summary: GET Characteristics  values
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/customers/credit-transactions-batch:
    post:
      tags:
        - Customers > Credit-transactions-batch
      summary: POST Customers credit-transactions-batch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                transacoes:
                  - idCliente: 70
                    cpfCnpj: CPF/CNPJ do cliente (apenas dígitos) (opcional)
                    email: E-mail do cliente (opcional)
                    operacao: Operação da transação[credito, debito]
                    valor: 63
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/customers/login:
    post:
      tags:
        - Customers > Login
      summary: POST Customers login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: E-mail do cliente
                senha: Senha do cliente (opcional)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/customers/recover-password:
    post:
      tags:
        - Customers > Recover-password
      summary: POST Customers recover-password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: E-mail do cliente
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/customers/queue:
    get:
      tags:
        - Customers > Queue
      summary: GET Customers queue
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/customers/queue/{idCliente}:
    delete:
      tags:
        - Customers > Queue
      summary: DELETE Customers queue
      parameters:
        - name: idCliente
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/customers:
    get:
      tags:
        - Customers
      summary: GET Customers
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Customers
      summary: POST Customers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cliNome: Nome do cliente
                cliEmail: E-mail do cliente
                cliSenha: Senha do cliente (opcional)
                cliNascimento: Data de nascimento do cliente (DD/MM/YYYY)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/customers/{idCliente}:
    get:
      tags:
        - Customers
      summary: GET Customers
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
        - name: idCliente
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Customers
      summary: PUT Customers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cliNome: Nome do cliente
                cliEmail: E-mail do cliente
                cliSenha: Senha do cliente (opcional)
                cliNascimento: Data de nascimento do cliente (DD/MM/YYYY)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
        - name: idCliente
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/freights/carriers:
    get:
      tags:
        - Freights > Carriers
      summary: GET Freights carriers
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/freights:
    get:
      tags:
        - Freights
      summary: GET Freights
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/freights/{id}:
    get:
      tags:
        - Freights
      summary: GET Freights
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Cache-Control
          in: header
          schema:
            type: string
          example: no-cache
        - name: App-Token
          in: header
          schema:
            type: string
          example: '{{api.wapstore.v2.appToken}}'
        - name: Session
          in: header
          schema:
            type: string
          example: '{{sessionId}}'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{api.wapstore.v2.authorization}}
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  
