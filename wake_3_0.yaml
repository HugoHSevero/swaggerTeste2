openapi: 3.0.1
info:
  title: Fbits.API
  version: v1
servers:
- url: https://api.fbits.net/
paths:
  /assinaturas:
    get:
      tags:
      - Assinatura
      summary: Retorna uma lista com os dados das assinaturas
      operationId: Assinatura_GetBysituacaoAssinaturaperiodoRecorrenciapaginaquantidadeRegistrosdataInicialProximaRecorrenciadataFinalProximaRecorrenciadataInicialCancelamentodataFinalCancelamentodataAssinaturaInicialdataAssinaturaFinal
      parameters:
      - name: situacaoAssinatura
        in: query
        description: Situação da assinatura
        schema:
          type: string
          enum:
          - Ativa
          - Pausada
          - Cancelada
      - name: periodoRecorrencia
        in: query
        description: Período de recorrência
        schema:
          type: string
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: dataInicialProximaRecorrencia
        in: query
        description: Data inicial da próxima recorrencia
        schema:
          type: string
          format: date-time
      - name: dataFinalProximaRecorrencia
        in: query
        description: Data final da próxima recorrencia
        schema:
          type: string
          format: date-time
      - name: dataInicialCancelamento
        in: query
        description: Data inicial de cancelamento
        schema:
          type: string
          format: date-time
      - name: dataFinalCancelamento
        in: query
        description: Data final de cancelamento
        schema:
          type: string
          format: date-time
      - name: dataAssinaturaInicial
        in: query
        schema:
          type: string
          format: date-time
      - name: dataAssinaturaFinal
        in: query
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Lista com assinaturas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaSimples'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaSimples'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaSimples'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaSimples'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaSimples'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /assinaturas/{assinaturaId}:
    get:
      tags:
      - Assinatura
      summary: Retorna os dados de uma assinatura específica
      operationId: Assinatura_GetByassinaturaId
      parameters:
      - name: assinaturaId
        in: path
        description: Id da assinatura
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Detalhes de uma assinatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assinatura'
            text/json:
              schema:
                $ref: '#/components/schemas/Assinatura'
            text/html:
              schema:
                $ref: '#/components/schemas/Assinatura'
            application/xml:
              schema:
                $ref: '#/components/schemas/Assinatura'
            text/xml:
              schema:
                $ref: '#/components/schemas/Assinatura'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Assinatura
      summary: Atualiza a situação de uma assinatura específica
      operationId: Assinatura_PutByassinaturaIdassinaturaAtualizar
      parameters:
      - name: assinaturaId
        in: path
        description: Id da assinatura
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados da assinatura a serem atualizados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssinaturaAtualizar'
          text/json:
            schema:
              $ref: '#/components/schemas/AssinaturaAtualizar'
          text/html:
            schema:
              $ref: '#/components/schemas/AssinaturaAtualizar'
          application/xml:
            schema:
              $ref: '#/components/schemas/AssinaturaAtualizar'
          text/xml:
            schema:
              $ref: '#/components/schemas/AssinaturaAtualizar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssinaturaAtualizar'
        required: true
      responses:
        "200":
          description: Situação da assinatura atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: assinaturaAtualizar
  /assinaturas1/{email}:
    get:
      tags:
      - Assinatura
      summary: Retorna as assinaturas de um determinado usuário
      operationId: Assinatura_GetAssinaturasUsuarioByemail
      parameters:
      - name: email
        in: path
        description: email do usuário
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Produtos de uma assinatura
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assinatura'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assinatura'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assinatura'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assinatura'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assinatura'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /assinaturas/{assinaturaId}/produtos:
    get:
      tags:
      - Assinatura
      summary: Retorna os produtos de uma assinatura específica
      operationId: Assinatura_GetProdutoAssinaturaByassinaturaId
      parameters:
      - name: assinaturaId
        in: path
        description: Id da assinatura
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Produtos de uma assinatura
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaProduto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaProduto'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaProduto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaProduto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaProduto'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Assinatura
      summary: Insere um novo produto na assinatura
      operationId: Assinatura_AssinaturaProdutoPostByassinaturaIdassinaturaProdutoPost
      parameters:
      - name: assinaturaId
        in: path
        description: Id de uma assinatura
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: JSON representando todos os dados de um novo produto para a assinatura
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Produto foi adicionado na assinatura
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: assinaturaProdutoPost
  /assinaturas/recorrencias:
    get:
      tags:
      - Assinatura
      summary: Retorna as recorrências cadastradas na loja
      operationId: Assinatura_GetRecorrencia
      responses:
        "200":
          description: Recorrências cadastradas na loja
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssinaturaRecorrencia'
            text/json:
              schema:
                $ref: '#/components/schemas/AssinaturaRecorrencia'
            text/html:
              schema:
                $ref: '#/components/schemas/AssinaturaRecorrencia'
            application/xml:
              schema:
                $ref: '#/components/schemas/AssinaturaRecorrencia'
            text/xml:
              schema:
                $ref: '#/components/schemas/AssinaturaRecorrencia'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /assinaturas/{assinaturaId}/pedido:
    post:
      tags:
      - Assinatura
      summary: Gera um novo pedido para a assinatura
      operationId: Assinatura_AssinaturaPedidoPostByassinaturaId
      parameters:
      - name: assinaturaId
        in: path
        description: Identificador da assinatura
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /assinaturas/produtos/{assinaturaProdutoId}/Alterar:
    put:
      tags:
      - Assinatura
      summary: Atualiza um produto em uma assinatura
      operationId: Assinatura_AssinaturaProdutoPutByassinaturaProdutoIdassinaturaProdutoPut
      parameters:
      - name: assinaturaProdutoId
        in: path
        description: Id do Produto dentro de uma assinatura
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: JSON representando todos os novos dados de um produto para a
          assinatura
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPut'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPut'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaProdutoPut'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Produto foi alterado na assinatura
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: assinaturaProdutoPut
  /assinaturas/erros:
    get:
      tags:
      - Assinatura
      summary: Retorna as assinaturas com erros
      operationId: Assinatura_GetErrosAsyncBydataInicialdataFinalresolvidos
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial para buscas por periodo de tempo (aaaa-mm-dd hh:mm:ss)
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final para buscas por periodo de tempo (aaaa-mm-dd hh:mm:ss)
        schema:
          type: string
          format: date-time
      - name: resolvidos
        in: query
        description: Erros já resolvidos ou não
        schema:
          type: boolean
      responses:
        "200":
          description: Assinaturas com Erro na loja
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /assinaturas/erros/{assinaturaId}:
    get:
      tags:
      - Assinatura
      summary: Retorna os erros de uma assinatura especifica
      operationId: Assinatura_GetErrosbyIdAsyncByassinaturaId
      parameters:
      - name: assinaturaId
        in: path
        description: id da Assinatura
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Assinaturas com Erro na loja
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaErro'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /assinaturas/pedido/{pedidoId}:
    get:
      tags:
      - Assinatura
      summary: Retorna os dados de uma assinatura a partir do id do Pedido
      operationId: Assinatura_GetAssinaturaPedidoBypedidoId
      parameters:
      - name: pedidoId
        in: path
        description: id do pedido
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Assinatura de um determinado pedido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaByPedido'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaByPedido'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaByPedido'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaByPedido'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssinaturaByPedido'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /assinaturas/{assinaturaId}/proximaRecorrencia:
    put:
      tags:
      - Assinatura
      summary: Altera a data de recorrencia de uma assinatura
      operationId: Assinatura_AlterarDataRecorrenciaByassinaturaIdassinaturaDataRecorrencia
      parameters:
      - name: assinaturaId
        in: path
        description: Identificador da assinatura
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaDataRecorrencia'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaDataRecorrencia'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaDataRecorrencia'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaDataRecorrencia'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaDataRecorrencia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Assinatura.AssinaturaDataRecorrencia'
        required: true
      responses:
        "200":
          description: Data proxima recorrencia foi alterada
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: assinaturaDataRecorrencia
  /assinaturas/grupoassinatura:
    get:
      tags:
      - Assinatura
      summary: Retorna os dados de um grupo de assinatura de uma loja
      operationId: Assinatura_SelecionarGrupoAssinaturaLoja
      responses:
        "200":
          description: Grupo de assinatura
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoAssinatura'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoAssinatura'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoAssinatura'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoAssinatura'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoAssinatura'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /assinaturas/grupoassinatura/assinatura:
    post:
      tags:
      - Assinatura
      summary: Cria assinatura com base em uma lista de pedidos
      operationId: Assinatura_PostAssinaturaPorPedidoBygrupoAssinaturaCriar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.GrupoAssinaturaPostAssinatura'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.GrupoAssinaturaPostAssinatura'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.GrupoAssinaturaPostAssinatura'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.GrupoAssinaturaPostAssinatura'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.GrupoAssinaturaPostAssinatura'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.GrupoAssinaturaPostAssinatura'
        required: true
      responses:
        "200":
          description: Pedidos que terão vínculo com o grupo de assinatura informado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrupoAssinaturaAssinatura'
            text/json:
              schema:
                $ref: '#/components/schemas/GrupoAssinaturaAssinatura'
            text/html:
              schema:
                $ref: '#/components/schemas/GrupoAssinaturaAssinatura'
            application/xml:
              schema:
                $ref: '#/components/schemas/GrupoAssinaturaAssinatura'
            text/xml:
              schema:
                $ref: '#/components/schemas/GrupoAssinaturaAssinatura'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: grupoAssinaturaCriar
  /atributos:
    get:
      tags:
      - Atributo
      summary: Retorna todos os atributos
      operationId: Atributo_Get
      responses:
        "200":
          description: Lista de atributos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atributo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atributo'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atributo'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atributo'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atributo'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Atributo
      summary: Insere um novo atributo
      operationId: Atributo_PostByatributo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atributo'
          text/json:
            schema:
              $ref: '#/components/schemas/Atributo'
          text/html:
            schema:
              $ref: '#/components/schemas/Atributo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Atributo'
          text/xml:
            schema:
              $ref: '#/components/schemas/Atributo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Atributo'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do atributo gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: atributo
  /atributos/{nome}:
    get:
      tags:
      - Atributo
      summary: Retorna um atributo específico
      operationId: Atributo_GetBynome
      parameters:
      - name: nome
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Atributo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atributo'
            text/json:
              schema:
                $ref: '#/components/schemas/Atributo'
            text/html:
              schema:
                $ref: '#/components/schemas/Atributo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Atributo'
            text/xml:
              schema:
                $ref: '#/components/schemas/Atributo'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Atributo
      summary: Atualiza um atributo
      operationId: Atributo_PutBynomeatributo
      parameters:
      - name: nome
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atributo'
          text/json:
            schema:
              $ref: '#/components/schemas/Atributo'
          text/html:
            schema:
              $ref: '#/components/schemas/Atributo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Atributo'
          text/xml:
            schema:
              $ref: '#/components/schemas/Atributo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Atributo'
        required: true
      responses:
        "200":
          description: Atributo atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: atributo
    delete:
      tags:
      - Atributo
      summary: Atualiza um atributo
      operationId: Atributo_DeleteBynome
      parameters:
      - name: nome
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Atributo excluído com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /autenticacao/login:
    post:
      tags:
      - Autenticacao
      summary: Realiza a autenticação de usuário no IDM (Identity Manager).
      operationId: Autenticacao_LoginBydadosLogin
      requestBody:
        description: Login e Senha.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autenticacao'
          text/json:
            schema:
              $ref: '#/components/schemas/Autenticacao'
          text/html:
            schema:
              $ref: '#/components/schemas/Autenticacao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Autenticacao'
          text/xml:
            schema:
              $ref: '#/components/schemas/Autenticacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Autenticacao'
        required: true
      responses:
        "200":
          description: Autenticação realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/json:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/html:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            application/xml:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/xml:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
        "401":
          description: Usuário não autorizado.
          content: {}
        "500":
          description: Erro no processamento da operação.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: dadosLogin
  /autenticacao/refresh:
    post:
      tags:
      - Autenticacao
      summary: Gera um novo access token baseado em um access token expirado por data.
      operationId: Autenticacao_Refresh
      responses:
        "200":
          description: Access token atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/json:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/html:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            application/xml:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/xml:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
        "500":
          description: Erro no processamento da operação.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /autenticacao/trocarLoja/{novaLoja}:
    post:
      tags:
      - Autenticacao
      summary: Troca o usuário de loja e gera um novo access_token para acesso a nova
        loja.
      operationId: Autenticacao_TrocarLojaBynovaLoja
      parameters:
      - name: novaLoja
        in: path
        description: Loja para qual o usuário deseja autenticar.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Novo token gerado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/json:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/html:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            application/xml:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
            text/xml:
              schema:
                $ref: '#/components/schemas/UsuarioIdentificadoAPI'
        "500":
          description: Erro no processamento da operação.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /autores:
    get:
      tags:
      - Autor
      summary: Buscar todos os autores.
      operationId: Autor_Get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
    post:
      tags:
      - Autor
      summary: Inserir autor.
      operationId: Autor_PostByrequest
      requestBody:
        description: Dados do autor.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
      x-codegen-request-body-name: request
  /autores/{autorId}:
    get:
      tags:
      - Autor
      summary: Buscar autor por id.
      operationId: Autor_GetbyIdByautorId
      parameters:
      - name: autorId
        in: path
        description: Identificador do autor.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
    put:
      tags:
      - Autor
      summary: Atualizar autor.
      operationId: Autor_PutByautorIdrequest
      parameters:
      - name: autorId
        in: path
        description: Identificador do autor.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados atualizados.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Autor.AutorPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
      x-codegen-request-body-name: request
    delete:
      tags:
      - Autor
      summary: Deletar autor.
      operationId: Autor_DeleteByautorId
      parameters:
      - name: autorId
        in: path
        description: Identificador do autor
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /autores1/{nomeAutor}:
    get:
      tags:
      - Autor
      summary: Buscar autor pelo nome.
      operationId: Autor_GetbyNameBynomeAutor
      parameters:
      - name: nomeAutor
        in: path
        description: Nome do autor
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /banners/{bannerId}:
    get:
      tags:
      - Banner
      summary: Buscar banner por Id
      operationId: Banner_GetBybannerId
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve ser buscado.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Objeto do banner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
            text/json:
              schema:
                $ref: '#/components/schemas/Banner'
            text/html:
              schema:
                $ref: '#/components/schemas/Banner'
            application/xml:
              schema:
                $ref: '#/components/schemas/Banner'
            text/xml:
              schema:
                $ref: '#/components/schemas/Banner'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Banner
      summary: Atualiza um banner existente.
      operationId: Banner_PutBybannerIdmodel
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve acontecer a atualização.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto de banner com os valores a serem atualizado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
    delete:
      tags:
      - Banner
      summary: Deleta um banner existente.
      operationId: Banner_DeleteBybannerId
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve ser deletado.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /banners:
    get:
      tags:
      - Banner
      summary: Busca todos banners.
      operationId: Banner_GetBypaginaquantidadePorPagina
      parameters:
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadePorPagina
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de banners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Banner'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Banner'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Banner'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Banner'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Banner'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Banner
      summary: Insere um novo banner.
      operationId: Banner_PostBymodel
      requestBody:
        description: O objeto do banner a ser inserido.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerPost'
        required: true
      responses:
        "200":
          description: Identificador do banner que foi inserido
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
  /banners/{bannerId}/status:
    put:
      tags:
      - Banner
      summary: Atualiza o status do banner pelo id.
      operationId: Banner_PutStatusBybannerIdmodel
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve acontecer a atualização.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: "Status para qual deve ir o baner: Ativo (true) ou Inativo (false)."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutStatusBanner'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutStatusBanner'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutStatusBanner'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutStatusBanner'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutStatusBanner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutStatusBanner'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
  /banners/{bannerId}/hotsites:
    get:
      tags:
      - Banner
      summary: Busca os hotsites vinculados de um banner específico.
      operationId: Banner_GetHotsitesVinculadosBybannerId
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve buscar os hotsites vinculados.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de hotsites vinculados ao banner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BannerListaHotsites'
            text/json:
              schema:
                $ref: '#/components/schemas/BannerListaHotsites'
            text/html:
              schema:
                $ref: '#/components/schemas/BannerListaHotsites'
            application/xml:
              schema:
                $ref: '#/components/schemas/BannerListaHotsites'
            text/xml:
              schema:
                $ref: '#/components/schemas/BannerListaHotsites'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Banner
      summary: "Atualiza a exibição do banner nos hotsites, se deve ser em todos ou\
        \ não."
      operationId: Banner_PutExibicaoHotsitesBybannerIdmodel
      parameters:
      - name: bannerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoHotsite'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoHotsite'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoHotsite'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoHotsite'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoHotsite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoHotsite'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
    post:
      tags:
      - Banner
      summary: Vincula hotsites com um banner específico.
      operationId: Banner_PostVincularHotsitesBybannerIdlistaHotsites
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve vincular os hotsites.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: lista de identificadores de hotsites a serem vinculados ao banner.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerHotsite'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerHotsite'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerHotsite'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerHotsite'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerHotsite'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerHotsite'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaHotsites
  /banners/{bannerId}/parceiros:
    get:
      tags:
      - Banner
      summary: Busca os parceiros vinculados de um banner específico.
      operationId: Banner_GetParceirosVinculadosBybannerId
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve buscar os parceiros vinculados.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de parceiros vinculados ao banner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BannerListaParceiros'
            text/json:
              schema:
                $ref: '#/components/schemas/BannerListaParceiros'
            text/html:
              schema:
                $ref: '#/components/schemas/BannerListaParceiros'
            application/xml:
              schema:
                $ref: '#/components/schemas/BannerListaParceiros'
            text/xml:
              schema:
                $ref: '#/components/schemas/BannerListaParceiros'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Banner
      summary: Vincula parceiros com um banner específico.
      operationId: Banner_PostVincularParceirosBybannerIdlistaParceiros
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve vincular os parceiros.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: lista de identificadores de parceiros a serem vinculados ao banner.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerParceiro'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerParceiro'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerParceiro'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerParceiro'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerParceiro'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerParceiro'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaParceiros
  /banners/posicionamentos:
    get:
      tags:
      - Banner
      summary: Busca os possíveis posicionamentos para o banner.
      operationId: Banner_GetPosicionamentos
      responses:
        "200":
          description: Lista de posicionamentos do banner
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerPosicionamento'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerPosicionamento'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerPosicionamento'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerPosicionamento'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerPosicionamento'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /banners/{bannerId}/Parceiros:
    put:
      tags:
      - Banner
      summary: "Atualiza a exibição do banner em parceiros, se deve ser em todos ou\
        \ não."
      operationId: Banner_PutExibicaoParceirosBybannerIdmodel
      parameters:
      - name: bannerId
        in: path
        description: Identificador do banner que deve acontecer a atualização.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoParceiro'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoParceiro'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoParceiro'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoParceiro'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoParceiro'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ExibicaoParceiro'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
  /banners/{bannerId}/Imagem:
    put:
      tags:
      - Banner
      summary: Atualiza a imagem do banner
      operationId: Banner_PutImagemBannerBybannerIdmodel
      parameters:
      - name: bannerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutImagemBanner'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutImagemBanner'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutImagemBanner'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutImagemBanner'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutImagemBanner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Banner.PutImagemBanner'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
  /categorias:
    get:
      tags:
      - Categoria
      summary: Retorna todos as categorias
      operationId: Categoria_GetByhierarquiaapenasResellerapenasUltimoNivelsomenteFilhos
      parameters:
      - name: hierarquia
        in: query
        schema:
          type: boolean
      - name: apenasReseller
        in: query
        schema:
          type: boolean
      - name: apenasUltimoNivel
        in: query
        schema:
          type: boolean
      - name: somenteFilhos
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Categoria
      summary: Insere uma nova categoria.
      operationId: Categoria_PostBycategoria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/html:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          application/xml:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/xml:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id da categoria gerada
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: categoria
  /categorias/{id}:
    get:
      tags:
      - Categoria
      summary: Retorna uma categoria específica
      operationId: Categoria_GetByidhierarquiasomenteFilhos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: hierarquia
        in: query
        schema:
          type: boolean
      - name: somenteFilhos
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Categoria encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
            text/json:
              schema:
                $ref: '#/components/schemas/Categoria'
            text/html:
              schema:
                $ref: '#/components/schemas/Categoria'
            application/xml:
              schema:
                $ref: '#/components/schemas/Categoria'
            text/xml:
              schema:
                $ref: '#/components/schemas/Categoria'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Categoria
      summary: Atualiza uma categoria.
      operationId: Categoria_PutByidcategoria
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/html:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          application/xml:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/xml:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
        required: true
      responses:
        "200":
          description: Categoria atualizada com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: categoria
    delete:
      tags:
      - Categoria
      summary: Exclui uma categoria.
      operationId: Categoria_DeleteByid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Categoria excluída com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /categorias/{categoriaId}/produtos:
    get:
      tags:
      - Categoria
      summary: Retorna lista de produtos vinculados à categoria de forma ordenada
      operationId: Categoria_GetProdutosCategoriaBycategoriaIdpaginaquantidadeRegistrosdirecaoOrdenacao
      parameters:
      - name: categoriaId
        in: path
        description: Id da categoria na qual os produtos devem ser consultados
        required: true
        schema:
          type: integer
          format: int32
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: direcaoOrdenacao
        in: query
        description: Define se a ordenação deverá ser feita de forma Ascendente ou
          Descendente. Caso não seja informado o comportamento padrão é Ascendente
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Produto(s) vinculado(s) a categoria com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Categoria
      summary: Atualiza a ordem de exibição de um ou mais produtos de uma categoria
      operationId: Categoria_OrdenarProdutosCategoriaBycategoriaIdprodutos
      parameters:
      - name: categoriaId
        in: path
        description: Id da categoria a qual os produtos deverão ser ordenados.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Lista de identificadores dos produtos e sua respectiva ordenação
          na categoria.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
        required: true
      responses:
        "200":
          description: Ordem do(s) produto(s) atualizado(s) na categoria com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtos
    post:
      tags:
      - Categoria
      summary: Vincula um ou mais produtos em uma categoria
      operationId: Categoria_InserirProdutosCategoriaBycategoriaIdprodutos
      parameters:
      - name: categoriaId
        in: path
        description: Id da categoria a qual os produtos deverão ser vinculados.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Lista de identificadores dos produtos e sua respectiva ordenação
          na categoria.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoriaProduto'
        required: true
      responses:
        "200":
          description: Produto(s) vinculado(s) a categoria com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtos
  /categorias/erp/{id}:
    get:
      tags:
      - Categoria
      summary: Retorna uma categoria específica utilizando o id do erp como identificador
      operationId: Categoria_SelecionaCategoriaErpByidhierarquiasomenteFilhos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: hierarquia
        in: query
        schema:
          type: boolean
      - name: somenteFilhos
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Categoria encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
            text/json:
              schema:
                $ref: '#/components/schemas/Categoria'
            text/html:
              schema:
                $ref: '#/components/schemas/Categoria'
            application/xml:
              schema:
                $ref: '#/components/schemas/Categoria'
            text/xml:
              schema:
                $ref: '#/components/schemas/Categoria'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Categoria
      summary: Atualiza uma categoria utilizando o id do erp como identificador.
      operationId: Categoria_AtualizaCategoriaErpByidcategoria
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/html:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          application/xml:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          text/xml:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoriaEnvio'
        required: true
      responses:
        "200":
          description: Categoria atualizada com sucesso.
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: categoria
    delete:
      tags:
      - Categoria
      summary: Exclui uma categoria utilizando o id do erp como identificador.
      operationId: Categoria_DeletaCategoriaErpByid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Categoria excluída com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /centrosdistribuicao:
    get:
      tags:
      - CentroDistribuicao
      summary: Retorna todos os centros de distribuição
      operationId: CentroDistribuicao_Get
      responses:
        "200":
          description: Lista de centros de distribuição
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /centrosdistribuicao/{centroDistribuicaoId}/prioridade:
    put:
      tags:
      - CentroDistribuicao
      summary: Executa uma atualização da prioridade do centro de distribuição
      operationId: CentroDistribuicao_AtualizarPrioridadeBycentroDistribuicaoIdcentroDistribuicaoPrioridade
      parameters:
      - name: centroDistribuicaoId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CentroDistribuicaoPrioridade'
          text/json:
            schema:
              $ref: '#/components/schemas/CentroDistribuicaoPrioridade'
          text/html:
            schema:
              $ref: '#/components/schemas/CentroDistribuicaoPrioridade'
          application/xml:
            schema:
              $ref: '#/components/schemas/CentroDistribuicaoPrioridade'
          text/xml:
            schema:
              $ref: '#/components/schemas/CentroDistribuicaoPrioridade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CentroDistribuicaoPrioridade'
        required: true
      responses:
        "200":
          description: Atualiza a prioridade de um centro de distribuição
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CentroDistribuicao'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: centroDistribuicaoPrioridade
  /contascorrentes/{email}:
    get:
      tags:
      - ContaCorrente
      summary: Retorna o saldo de um usuário.
      operationId: ContaCorrente_GetByemail
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Lista de emails e saldos de conta corrente
          content:
            application/json:
              schema:
                type: number
                format: double
            text/json:
              schema:
                type: number
                format: double
            text/html:
              schema:
                type: number
                format: double
            application/xml:
              schema:
                type: number
                format: double
            text/xml:
              schema:
                type: number
                format: double
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - ContaCorrente
      summary: Realiza um novo lançamento na conta corrente do cliente.
      operationId: ContaCorrente_PostByemailcontaCorrente
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContaCorrente'
          text/json:
            schema:
              $ref: '#/components/schemas/ContaCorrente'
          text/html:
            schema:
              $ref: '#/components/schemas/ContaCorrente'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContaCorrente'
          text/xml:
            schema:
              $ref: '#/components/schemas/ContaCorrente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContaCorrente'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id da conta corrente gerada
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: contaCorrente
  /contascorrentes/{email}/extrato:
    get:
      tags:
      - ContaCorrente
      summary: Busca todas as movimentações de conta corrente de um usuário.
      operationId: ContaCorrente_ExtratoByemaildataInicialdataFinal
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      - name: dataInicial
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Extrato retornado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContaCorrenteCompleta'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContaCorrenteCompleta'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContaCorrenteCompleta'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContaCorrenteCompleta'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContaCorrenteCompleta'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /conteudos:
    get:
      tags:
      - Conteudo
      summary: Busca todos os  conteúdos
      operationId: Conteudo_GetConteudoBypaginaquantidadePorPagina
      parameters:
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        required: true
        schema:
          type: integer
          format: int32
      - name: quantidadePorPagina
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Produto encontrado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conteudo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conteudo'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conteudo'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conteudo'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conteudo'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Conteudo
      summary: Insere um novo conteúdo na loja.
      operationId: Conteudo_ConteudoPostByconteudoPost
      requestBody:
        description: JSON representando todos os dados de um conteúdo.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do conteúdo gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: conteudoPost
  /conteudos/{conteudoId}:
    get:
      tags:
      - Conteudo
      summary: Busca o  conteúdo pelo seu id
      operationId: Conteudo_GetConteudoByIdByconteudoId
      parameters:
      - name: conteudoId
        in: path
        description: Identificador do conteúdo.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conteudo'
            text/json:
              schema:
                $ref: '#/components/schemas/Conteudo'
            text/html:
              schema:
                $ref: '#/components/schemas/Conteudo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Conteudo'
            text/xml:
              schema:
                $ref: '#/components/schemas/Conteudo'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Conteudo
      summary: Atualiza um  conteúdo.
      operationId: Conteudo_ConteudoPutByconteudoIdconteudoPut
      parameters:
      - name: conteudoId
        in: path
        description: Identificador do conteúdo.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: JSON representando todos os dados de um conteúdo.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Conteudo.ConteudoPost'
        required: true
      responses:
        "200":
          description: Conteúdo atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: conteudoPut
  /dashboard/faturamento:
    get:
      tags:
      - Dashboard
      summary: "Retorna indicadores de faturamento (receita, ticket médio e número\
        \ de pedidos) da loja"
      operationId: Dashboard_RetornarIndicadoresFaturamentoBydataInicialdataFinaldataInicialComparativodataFinalComparativo
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos indicadores que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos indicadores que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataInicialComparativo
        in: query
        description: Data inicial do comparativo dos indicadores que deverão retonar
          (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinalComparativo
        in: query
        description: Data final do comparativo dos indicadores que deverão retonar
          (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Indicadores de Faturamento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faturamento'
            text/json:
              schema:
                $ref: '#/components/schemas/Faturamento'
            text/html:
              schema:
                $ref: '#/components/schemas/Faturamento'
            application/xml:
              schema:
                $ref: '#/components/schemas/Faturamento'
            text/xml:
              schema:
                $ref: '#/components/schemas/Faturamento'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/graficofaturamento:
    get:
      tags:
      - Dashboard
      summary: Retorna dados para carregar o gráfico do faturamento.
      operationId: Dashboard_RetornarGraficoFaturamentoBydataInicialdataFinalisLojaparceiroId
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial do faturamento que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final do faturamento que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: isLoja
        in: query
        description: Se o faturamento é somente da loja
        schema:
          type: integer
          format: int32
      - name: parceiroId
        in: query
        description: Id do parceiro
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Gráfico do Faturamento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFaturamento'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFaturamento'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFaturamento'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFaturamento'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFaturamento'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/pedidos:
    get:
      tags:
      - Dashboard
      summary: Retorna uma listagem com os últimos dez pedidos da loja.
      operationId: Dashboard_RetornarUltimosPedidos
      responses:
        "200":
          description: Últimos Pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UltimosPedidos'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UltimosPedidos'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UltimosPedidos'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UltimosPedidos'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UltimosPedidos'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/produtos:
    get:
      tags:
      - Dashboard
      summary: Retorna uma listagem com dados dos produtos mais vendidos pela loja
        ou parceiro.
      operationId: Dashboard_RetornarProdutosMaisVendidosBydataInicialdataFinalparceiroId
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos produtos mais vendidos que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos produtos mais vendidos que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: parceiroId
        in: query
        description: Id do parceiro
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Produtos Mais Vendidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosMaisVendidos'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosMaisVendidos'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosMaisVendidos'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosMaisVendidos'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosMaisVendidos'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/novoscompradores:
    get:
      tags:
      - Dashboard
      summary: Indicador dos Novos Compradores.
      operationId: Dashboard_RetornarIndicadorNovosCompradoresBydataInicialdataFinal
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos novos compradores que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos novos compradores que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Indicador dos Novos Compradores
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicadorCompradores'
            text/json:
              schema:
                $ref: '#/components/schemas/IndicadorCompradores'
            text/html:
              schema:
                $ref: '#/components/schemas/IndicadorCompradores'
            application/xml:
              schema:
                $ref: '#/components/schemas/IndicadorCompradores'
            text/xml:
              schema:
                $ref: '#/components/schemas/IndicadorCompradores'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/produtoestoque:
    get:
      tags:
      - Dashboard
      summary: Indicadores dos Produtos no Estoque.
      operationId: Dashboard_RetornarIndicadorProdutosEstoqueBydataInicialdataFinal
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos produtos no estoque que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos produtos no estoque que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Indicadores dos Produtos no Estoque
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicadorProdutoEstoque'
            text/json:
              schema:
                $ref: '#/components/schemas/IndicadorProdutoEstoque'
            text/html:
              schema:
                $ref: '#/components/schemas/IndicadorProdutoEstoque'
            application/xml:
              schema:
                $ref: '#/components/schemas/IndicadorProdutoEstoque'
            text/xml:
              schema:
                $ref: '#/components/schemas/IndicadorProdutoEstoque'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/carrinhoabandonado:
    get:
      tags:
      - Dashboard
      summary: Indicador do Carrinho Abandonado.
      operationId: Dashboard_RetornarIndicadorCarrinhoAbandonadoBydataInicialdataFinal
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos carrinhos abandonados que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos carrinhos abandonados que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Indicador do Carrinho Abandonado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicadorCarrinhosAbandonado'
            text/json:
              schema:
                $ref: '#/components/schemas/IndicadorCarrinhosAbandonado'
            text/html:
              schema:
                $ref: '#/components/schemas/IndicadorCarrinhosAbandonado'
            application/xml:
              schema:
                $ref: '#/components/schemas/IndicadorCarrinhosAbandonado'
            text/xml:
              schema:
                $ref: '#/components/schemas/IndicadorCarrinhosAbandonado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/graficoformapagamento:
    get:
      tags:
      - Dashboard
      summary: Retorna dados para alimentar o gráfico forma de pagamento.
      operationId: Dashboard_RetornarGraficoFormaPagamentoBydataInicialdataFinalparceiroId
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos pedidos com as formas de pagamento que deverão
          retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos pedidos com as formas de pagamento que deverão
          retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: parceiroId
        in: query
        description: Id do parceiro
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Gráfico Forma de Pagamento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFormaPagamento'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFormaPagamento'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFormaPagamento'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFormaPagamento'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraficoFormaPagamento'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/receita:
    get:
      tags:
      - Dashboard
      summary: Retorna o relatório de receitas de um determindado período
      operationId: Dashboard_RetornarRelatorioPedidoReceitaBydataInicialdataFinaltipoAgrupamento
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos pedidos que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos pedidos que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: tipoAgrupamento
        in: query
        description: "tipo de agrupamento dos pedidos (hora, dia, mes, ano)"
        schema:
          type: string
          enum:
          - Hora
          - Dia
          - Semana
          - Mes
          - Ano
      responses:
        "200":
          description: Relatório de receitas de um determindado período
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/json:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/ticketMedio:
    get:
      tags:
      - Dashboard
      summary: Retorna o relatório de ticket médio de um determindado período
      operationId: Dashboard_RetornarRelatorioPedidoTicketMedioBydataInicialdataFinaltipoAgrupamento
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos pedidos que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos pedidos que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: tipoAgrupamento
        in: query
        description: "tipo de agrupamento dos pedidos (hora, dia, mes, ano)"
        schema:
          type: string
          enum:
          - Hora
          - Dia
          - Semana
          - Mes
          - Ano
      responses:
        "200":
          description: Relatório de ticket médio de um determindado período
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/json:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /dashboard/transacoes:
    get:
      tags:
      - Dashboard
      summary: Retorna o relatório de transações de um determindado período
      operationId: Dashboard_RetornarRelatorioPedidoTransacoesBydataInicialdataFinaltipoAgrupamento
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos pedidos que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos pedidos que deverão retonar (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: tipoAgrupamento
        in: query
        description: "tipo de agrupamento dos pedidos (hora, dia, mes, ano)"
        schema:
          type: string
          enum:
          - Hora
          - Dia
          - Semana
          - Mes
          - Ano
      responses:
        "200":
          description: Relatório de transações de um determindado período
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/json:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatorioDadosReceita'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /eventos:
    get:
      tags:
      - Evento
      summary: Retorna lista de eventos
      operationId: Evento_GetEventosBydataInicialdataFinaldisponiveltitulousuarioEmailtipoEventoId
      parameters:
      - name: dataInicial
        in: query
        description: Data de inicio do evento.
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data do termino do evento.
        schema:
          type: string
          format: date-time
      - name: disponivel
        in: query
        description: Status do evento.
        schema:
          type: boolean
      - name: titulo
        in: query
        schema:
          type: string
      - name: usuarioEmail
        in: query
        description: Email do Usuário
        schema:
          type: string
      - name: tipoEventoId
        in: query
        description: Identificador do Tipo de Evento
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Evento
      summary: Cria um Novo Evento
      operationId: Evento_PostEventoByevento
      requestBody:
        description: JSON representando todos os dados de um evento. Para saber mais
          acesse a <a href="#">documentação</a>
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EventoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EventoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EventoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EventoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EventoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EventoPost'
        required: true
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: evento
  /eventos/{eventoId}:
    get:
      tags:
      - Evento
      summary: Retorna um evento especifico
      operationId: Evento_GetEventosByIdByeventoId
      parameters:
      - name: eventoId
        in: path
        description: Identifiador do evento.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Evento
      summary: Atualiza um evento
      operationId: Evento_PutEventoByeventoIdevento
      parameters:
      - name: eventoId
        in: path
        description: Identificador do evento.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados atualizados do evento.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.EventoPut'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.EventoPut'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.EventoPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.EventoPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.EventoPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.EventoPut'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
      x-codegen-request-body-name: evento
  /eventos/{eventoId}/produtos:
    get:
      tags:
      - Evento
      summary: Busca produtos vinculados a um evento.
      operationId: Evento_GetProdutosByEventoIdByeventoId
      parameters:
      - name: eventoId
        in: path
        description: Identificador do evento.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventoProdutoSelecionadoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventoProdutoSelecionadoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventoProdutoSelecionadoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventoProdutoSelecionadoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventoProdutoSelecionadoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Evento
      summary: Atauliza lista de produtos vinculados a um evento removendo os itens
        vinculados anteriormente e mantendo apenas os enviados pelo request
      operationId: Evento_PutVincularProdutosByEventoByeventoIdprodutos
      parameters:
      - name: eventoId
        in: path
        description: Identificador do evento.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Identificadores dos produtos variantes a serem vinculados ao
          evento desejado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
        required: true
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtos
    post:
      tags:
      - Evento
      summary: Vincula um ou mais produtos a um evento sem remover os produtos vinculados
        anteriormente.
      operationId: Evento_PostVincularProdutosByEventoByeventoIdprodutos
      parameters:
      - name: eventoId
        in: path
        description: Identificador do evento.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Identificadores dos produtos variantes a serem vinculados ao
          evento desejado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento'
        required: true
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtos
  /eventos/{eventoId}/produto/{produtoVarianteId}:
    delete:
      tags:
      - Evento
      summary: Deleta o vinculo de um produto a um evento.
      operationId: Evento_DeleteProdutoDeVinculoByEventoByeventoIdprodutoVarianteId
      parameters:
      - name: eventoId
        in: path
        description: Identificador do tipo de evento.
        required: true
        schema:
          type: integer
          format: int64
      - name: produtoVarianteId
        in: path
        description: Identificador do variante do produto.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /eventos/{eventoId}/produtos/recebido:
    put:
      tags:
      - Evento
      summary: Atualiza o campo Recebido de um produto vinculado a um evento
      operationId: Evento_PutVincularProdutosRecebidoByEventoByeventoIdprodutos
      parameters:
      - name: eventoId
        in: path
        description: Identificador do evento.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Identificadores dos produtos variantes a serem vinculados ao
          evento desejado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.EventoProdutoRecebido'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.EventoProdutoRecebido'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.EventoProdutoRecebido'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.EventoProdutoRecebido'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.EventoProdutoRecebido'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoEvento.EventoProdutoRecebido'
        required: true
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtos
  /fabricantes:
    get:
      tags:
      - Fabricante
      summary: Retorna todos os fabricantes
      operationId: Fabricante_Get
      responses:
        "200":
          description: Lista de fabricantes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fabricante'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fabricante'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fabricante'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fabricante'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fabricante'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Fabricante
      summary: Insere um novo fabricante.
      operationId: Fabricante_PostByfabricante
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          text/json:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          text/html:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          application/xml:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          text/xml:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FabricantePost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do fabricante gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: fabricante
  /fabricantes/{fabricanteId}:
    get:
      tags:
      - Fabricante
      summary: Retorna um fabricante específico pelo id.
      operationId: Fabricante_GetByfabricanteId
      parameters:
      - name: fabricanteId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Fabricante encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fabricante'
            text/json:
              schema:
                $ref: '#/components/schemas/Fabricante'
            text/html:
              schema:
                $ref: '#/components/schemas/Fabricante'
            application/xml:
              schema:
                $ref: '#/components/schemas/Fabricante'
            text/xml:
              schema:
                $ref: '#/components/schemas/Fabricante'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Fabricante
      summary: Atualiza um fabricante
      operationId: Fabricante_PutByfabricanteIdfabricante
      parameters:
      - name: fabricanteId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          text/json:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          text/html:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          application/xml:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          text/xml:
            schema:
              $ref: '#/components/schemas/FabricantePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FabricantePost'
        required: true
      responses:
        "200":
          description: Fabricante atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: fabricante
    delete:
      tags:
      - Fabricante
      summary: Exclui um fabricante
      operationId: Fabricante_DeleteByfabricanteId
      parameters:
      - name: fabricanteId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Fabricante excluído com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /fabricante1/{nome}:
    get:
      tags:
      - Fabricante
      summary: Retorna um fabricante específico pelo nome.
      operationId: Fabricante_GetBynome
      parameters:
      - name: nome
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Fabricante encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fabricante'
            text/json:
              schema:
                $ref: '#/components/schemas/Fabricante'
            text/html:
              schema:
                $ref: '#/components/schemas/Fabricante'
            application/xml:
              schema:
                $ref: '#/components/schemas/Fabricante'
            text/xml:
              schema:
                $ref: '#/components/schemas/Fabricante'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /formasPagamento:
    get:
      tags:
      - FormaPagamento
      summary: Retorna todas as formas de pagamento da loja
      operationId: FormaPagamento_Get
      responses:
        "200":
          description: Lista de formas de pagamento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormaPagamento'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormaPagamento'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormaPagamento'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormaPagamento'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormaPagamento'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /fretes:
    get:
      tags:
      - Frete
      summary: Retorna uma lista de fretes
      operationId: Frete_Get
      responses:
        "200":
          description: Lista de fretes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteCompleto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteCompleto'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteCompleto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteCompleto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteCompleto'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Frete
      summary: Insere um novo contrato de frete.
      operationId: Frete_PostByfrete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frete'
          text/json:
            schema:
              $ref: '#/components/schemas/Frete'
          text/html:
            schema:
              $ref: '#/components/schemas/Frete'
          application/xml:
            schema:
              $ref: '#/components/schemas/Frete'
          text/xml:
            schema:
              $ref: '#/components/schemas/Frete'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Frete'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do frete gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: frete
  /fretes/{freteId}:
    get:
      tags:
      - Frete
      summary: Retorna um contrato de frete
      operationId: Frete_GetByfreteId
      parameters:
      - name: freteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Frete encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreteCompleto'
            text/json:
              schema:
                $ref: '#/components/schemas/FreteCompleto'
            text/html:
              schema:
                $ref: '#/components/schemas/FreteCompleto'
            application/xml:
              schema:
                $ref: '#/components/schemas/FreteCompleto'
            text/xml:
              schema:
                $ref: '#/components/schemas/FreteCompleto'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Frete
      summary: Atualiza um contrato de frete.
      operationId: Frete_PutByfreteIdfrete
      parameters:
      - name: freteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frete'
          text/json:
            schema:
              $ref: '#/components/schemas/Frete'
          text/html:
            schema:
              $ref: '#/components/schemas/Frete'
          application/xml:
            schema:
              $ref: '#/components/schemas/Frete'
          text/xml:
            schema:
              $ref: '#/components/schemas/Frete'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Frete'
        required: true
      responses:
        "200":
          description: Frete atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: frete
    delete:
      tags:
      - Frete
      summary: Atualiza um contrato de frete.
      operationId: Frete_DeleteByfreteId
      parameters:
      - name: freteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Frete excluído com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      deprecated: true
  /fretes/{freteId}/Ativo:
    put:
      tags:
      - Frete
      summary: Ativa ou Desativa um frete
      operationId: Frete_AtivoByfreteIdfreteAtivo
      parameters:
      - name: freteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreteAtivo'
          text/json:
            schema:
              $ref: '#/components/schemas/FreteAtivo'
          text/html:
            schema:
              $ref: '#/components/schemas/FreteAtivo'
          application/xml:
            schema:
              $ref: '#/components/schemas/FreteAtivo'
          text/xml:
            schema:
              $ref: '#/components/schemas/FreteAtivo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreteAtivo'
        required: true
      responses:
        "200":
          description: Frete atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: freteAtivo
  /fretes/{freteId}/detalhes:
    get:
      tags:
      - Frete
      summary: Retorna uma lista de detalhes de um contrato de frete
      operationId: Frete_GetDetalhesByfreteId
      parameters:
      - name: freteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de detalhes de frente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteDetalhe'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteDetalhe'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteDetalhe'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteDetalhe'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreteDetalhe'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Frete
      summary: Insere um novo detalhe de frete vinculado a um contrato de frete
      operationId: Frete_PostDetalhesByfreteIdfreteDetalhe
      parameters:
      - name: freteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreteDetalhePost'
          text/json:
            schema:
              $ref: '#/components/schemas/FreteDetalhePost'
          text/html:
            schema:
              $ref: '#/components/schemas/FreteDetalhePost'
          application/xml:
            schema:
              $ref: '#/components/schemas/FreteDetalhePost'
          text/xml:
            schema:
              $ref: '#/components/schemas/FreteDetalhePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreteDetalhePost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Detalhes de frete inserido com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: freteDetalhe
    delete:
      tags:
      - Frete
      summary: Exclui os detalhes de um contrato de frete
      operationId: Frete_DeleteDetalhesByfreteId
      parameters:
      - name: freteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Detalhes excluídos com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /fretes/cotacoes:
    post:
      tags:
      - Frete
      summary: Realiza uma cotação de frete
      description: Método que realiza uma cotação de frete via Fstore
      operationId: Frete_PostCotacoesByceptipoIdentificadorcotacaoretiradaLoja
      parameters:
      - name: cep
        in: query
        description: Cep de entrega
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: retiradaLoja
        in: query
        description: Define se deve retornar as opções de retirada em loja ("False"
          por padrão).
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Cotacao.CotacaoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Cotacao.CotacaoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Cotacao.CotacaoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Cotacao.CotacaoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Cotacao.CotacaoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Cotacao.CotacaoPost'
        required: true
      responses:
        "200":
          description: Objeto com as cotações de frete
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoResponse'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoResponse'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: cotacao
  /fretes/pedidos/{pedidoId}/cotacoes:
    get:
      tags:
      - Frete
      summary: Realiza uma cotação de frete para o carrinho do pedido
      operationId: Frete_GetCotacoesPedidoBypedidoIdforcarCotacaoTodosCDs
      parameters:
      - name: pedidoId
        in: path
        description: Id do pedido
        required: true
        schema:
          type: integer
          format: int64
      - name: forcarCotacaoTodosCDs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Objeto com as cotações de frete
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoApiResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoApiResponse'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoApiResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoApiResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoApiResponse'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /fretes/criteriosscore/ativos:
    get:
      tags:
      - Frete
      summary: Busca os critérios score da loja
      operationId: Frete_GetCriteriosScore
      responses:
        "200":
          description: Busca de critérios realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoCriterioScore'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoCriterioScore'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoCriterioScore'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoCriterioScore'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JaimitoCriterioScore'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /fretes/criteriosscore/valor:
    post:
      tags:
      - Frete
      summary: Cria um critério de score para um centro de distribução
      operationId: Frete_PostCriteriosScoreBycdScore
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JaimitoCentroDistribuicaoScore'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JaimitoCentroDistribuicaoScore'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JaimitoCentroDistribuicaoScore'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JaimitoCentroDistribuicaoScore'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JaimitoCentroDistribuicaoScore'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JaimitoCentroDistribuicaoScore'
        required: true
      responses:
        "200":
          description: Critério criado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: cdScore
  /gestorscripts/scripts:
    get:
      tags:
      - GestorScripts
      summary: Busca todas os scripts inseridos.
      operationId: GestorScripts_Get
      responses:
        "200":
          description: Lista de scripts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GestorScriptsGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GestorScriptsGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GestorScriptsGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GestorScriptsGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GestorScriptsGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - GestorScripts
      summary: Insere um novo script.
      operationId: GestorScripts_PostByrequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostScript'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostScript'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostScript'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostScript'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostScript'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostScript'
        required: true
      responses:
        "200":
          description: Identificador do script
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: request
  /gestorscripts/scripts/{scriptId}:
    put:
      tags:
      - GestorScripts
      summary: Atualiza um script existente
      operationId: GestorScripts_PutScriptByscriptIdrequest
      parameters:
      - name: scriptId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PutScript'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PutScript'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PutScript'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PutScript'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PutScript'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PutScript'
        required: true
      responses:
        "200":
          description: Operação foi bem sucedida
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: request
    delete:
      tags:
      - GestorScripts
      summary: Exclui um Script
      operationId: GestorScripts_GetConteudoVersaoByscriptId
      parameters:
      - name: scriptId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Exclui um script
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /gestorscripts/scripts/{scriptId}/versao/{versaoId}/conteudo:
    get:
      tags:
      - GestorScripts
      summary: Busca o conteúdo de uma versão.
      operationId: GestorScripts_GetConteudoVersaoByscriptIdversaoId
      parameters:
      - name: scriptId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: versaoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista o conteudo de uma versão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoVersaoScript'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoVersaoScript'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoVersaoScript'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoVersaoScript'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoVersaoScript'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /gestorscripts/scripts/{scriptId}/versoes:
    get:
      tags:
      - GestorScripts
      summary: Busca todas as versões de um script.
      operationId: GestorScripts_GetVersoesScriptByscriptId
      parameters:
      - name: scriptId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de versões
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersaoGestorScript'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersaoGestorScript'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersaoGestorScript'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersaoGestorScript'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersaoGestorScript'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - GestorScripts
      summary: Insere uma versão para um script existente.
      operationId: GestorScripts_PostVersaoByscriptIdrequest
      parameters:
      - name: scriptId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostVersao'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostVersao'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostVersao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostVersao'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostVersao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.GestorScripts.PostVersao'
        required: true
      responses:
        "200":
          description: Identificador da versao
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: request
  /grupoListaCompras:
    get:
      tags:
      - GrupoListaCompras
      summary: Retorna todos os grupos de listas de compras
      operationId: GrupoListaCompras_GetBypaginaquantidadeRegistrosnomedescricaoaliasHotSite
      parameters:
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: nome
        in: query
        description: Nome do grupo de lista de compras
        schema:
          type: string
      - name: descricao
        in: query
        description: Descrição do grupo de lista de compras
        schema:
          type: string
      - name: aliasHotSite
        in: query
        description: Alias do hotsite do grupo de lista de compras
        schema:
          type: string
      responses:
        "200":
          description: Lista de grupos de listas de compras
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoListaCompra'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoListaCompra'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoListaCompra'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoListaCompra'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoListaCompra'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - GrupoListaCompras
      summary: Atualiza dados de um ou mais grupos de lista de compras
      description: Atualiza dados de um ou mais grupos de lista de compras
      operationId: GrupoListaCompras_PutBygruposListaCompras
      requestBody:
        description: Objeto que representa o(s) grupo(s) de lista(s) de compras
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPut'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPut'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPut'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPut'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPut'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPut'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Grupo(s) de lista(s) de compras atualizado(s) com sucesso
          content:
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
            text/html:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/xml:
              schema:
                type: integer
                format: int32
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: gruposListaCompras
    post:
      tags:
      - GrupoListaCompras
      summary: Insere dados de um ou mais grupos de lista de compras
      description: Insere dados de um ou mais grupos de lista de compras
      operationId: GrupoListaCompras_PostBygruposListaCompras
      requestBody:
        description: Objeto que representa o(s) grupo(s) de lista(s) de compras
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoListaComprasPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Grupo(s) de lista(s) de compras inserido(s) com sucesso
          content:
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
            text/html:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/xml:
              schema:
                type: integer
                format: int32
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: gruposListaCompras
  /grupoListaCompras/{grupoListaCompraId}:
    get:
      tags:
      - GrupoListaCompras
      summary: Retorna dados de um grupo de lista de compras
      operationId: GrupoListaCompras_GetPorIdBygrupoListaCompraId
      parameters:
      - name: grupoListaCompraId
        in: path
        description: Identificador do grupo de lista de compras
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Grupo de lista de compras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrupoListaCompra'
            text/json:
              schema:
                $ref: '#/components/schemas/GrupoListaCompra'
            text/html:
              schema:
                $ref: '#/components/schemas/GrupoListaCompra'
            application/xml:
              schema:
                $ref: '#/components/schemas/GrupoListaCompra'
            text/xml:
              schema:
                $ref: '#/components/schemas/GrupoListaCompra'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /grupospersonalizacao:
    get:
      tags:
      - GrupoPersonalizacao
      summary: Retorna uma lista de Grupos de Personalização
      operationId: GrupoPersonalizacao_Get
      responses:
        "200":
          description: Lista de Grupos de Personalização
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /grupospersonalizacao/{grupoPersonalizacaoId}/produtos:
    get:
      tags:
      - GrupoPersonalizacao
      summary: Retorna uma lista de produtos vinculados a um Grupo de Personalização
      operationId: GrupoPersonalizacao_GetProdutosBygrupoPersonalizacaoId
      parameters:
      - name: grupoPersonalizacaoId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de produtos de um Grupo de Personalização
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoProdutosGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoProdutosGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoProdutosGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoProdutosGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrupoPersonalizacaoProdutosGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - GrupoPersonalizacao
      summary: Vincula produtos a um Grupo de Personalização
      operationId: GrupoPersonalizacao_PostProdutosBygrupoPersonalizacaoIdprodutos
      parameters:
      - name: grupoPersonalizacaoId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoPersonalizacaoProdutosPost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoPersonalizacaoProdutosPost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoPersonalizacaoProdutosPost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoPersonalizacaoProdutosPost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoPersonalizacaoProdutosPost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrupoPersonalizacaoProdutosPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Vincula de produto com um Grupo de Personalização
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtos
  /hotsites:
    get:
      tags:
      - Hotsite
      summary: Busca todos os hotsites inseridos.
      operationId: Hotsite_GetHotsiteBypaginaquantidadePorPagina
      parameters:
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadePorPagina
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de hotsites.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotsite'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotsite'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotsite'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotsite'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotsite'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Hotsite
      summary: Insere um novo hotsite.
      description: "A lista de produtos para serem exibidos no hotsite está limitada\
        \ a <strong>1024 itens</strong>, tanto por expressão como por produtos."
      operationId: Hotsite_PostHotsiteBypost
      requestBody:
        description: Objeto do hotsite a ser inserido.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
        required: true
      responses:
        "200":
          description: Identificador do banner inserido.
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: post
  /hotsites/{hotsiteId}:
    get:
      tags:
      - Hotsite
      summary: Busca um hotsite específico.
      operationId: Hotsite_GetHotsiteByhotsiteId
      parameters:
      - name: hotsiteId
        in: path
        description: Identificador do hotsite a ser buscado.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: objeto do hotsite
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotsite'
            text/json:
              schema:
                $ref: '#/components/schemas/Hotsite'
            text/html:
              schema:
                $ref: '#/components/schemas/Hotsite'
            application/xml:
              schema:
                $ref: '#/components/schemas/Hotsite'
            text/xml:
              schema:
                $ref: '#/components/schemas/Hotsite'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Hotsite
      summary: Atualiza os dados de um hotsite existente.
      operationId: Hotsite_PutHotsiteByhotsiteIdput
      parameters:
      - name: hotsiteId
        in: path
        description: Identificador do hotsite a ser atualizado.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto do hotsite com as informações a serem atualizadas.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsitePost'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: put
    delete:
      tags:
      - Hotsite
      summary: "Deleta um hotsite que foi inserido manualmente, hotsites gerados automaticamente\
        \ não podem ser deletados."
      operationId: Hotsite_DeleteHotsiteByhotsiteId
      parameters:
      - name: hotsiteId
        in: path
        description: Identificador do hotsite a ser deletado.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /hotsites/{hotsiteId}/status:
    put:
      tags:
      - Hotsite
      summary: "Atualiza o status do hotsite, sendo ativo (true) ou inativo (false)."
      operationId: Hotsite_PutHotsiteByhotsiteIdmodel
      parameters:
      - name: hotsiteId
        in: path
        description: Identificador do hotsite a ser atualizado.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Status para qual o hotsite indicado deve ir.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.AtualizarStatusHotsite'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.AtualizarStatusHotsite'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.AtualizarStatusHotsite'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.AtualizarStatusHotsite'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.AtualizarStatusHotsite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.AtualizarStatusHotsite'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
  /hotsites/{hotsiteId}/banners:
    get:
      tags:
      - Hotsite
      summary: Busca os banners vinculados a um hotsite específico.
      operationId: Hotsite_GetBannersVinculadosByhotsiteId
      parameters:
      - name: hotsiteId
        in: path
        description: Identificador do hotsite a ser buscado os banners.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: LIsta de identificadores de banners vinculados ao hotsite
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteBanner'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteBanner'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteBanner'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteBanner'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteBanner'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Hotsite
      summary: Vincula um ou mais banners a um hotsite específico
      operationId: Hotsite_PostVincularBannerByhotsiteIdbanners
      parameters:
      - name: hotsiteId
        in: path
        description: Identificador do hotsite a ser vinculado os banners.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Lista de identificadores de banners para vincular ao hotsite.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsiteBannerPost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsiteBannerPost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsiteBannerPost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsiteBannerPost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsiteBannerPost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsiteBannerPost'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: banners
  /hotsites/{hotsiteId}/conteudos:
    get:
      tags:
      - Hotsite
      summary: Busca os conteúdos vinculados a um hotsite específico.
      operationId: Hotsite_GetConteudosVinculadosByhotsiteId
      parameters:
      - name: hotsiteId
        in: path
        description: Identificador do hotsite a ser buscados os conteúdos.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de identificadores de conteúdos vinculados ao hotsite.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteConteudo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteConteudo'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteConteudo'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteConteudo'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotsiteConteudo'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Hotsite
      summary: Vincula um ou mais conteúdos a um hotsite específico.
      operationId: Hotsite_PostVincularConteudoByhotsiteIdconteudos
      parameters:
      - name: hotsiteId
        in: path
        description: Identificador do hotsite a ser vinculado os conteúdos.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Lista de identificadores de conteúdos a serem vinculados.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.ConteudoHotsite'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.ConteudoHotsite'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.ConteudoHotsite'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.ConteudoHotsite'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.ConteudoHotsite'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.ConteudoHotsite'
        required: true
      responses:
        "200":
          description: "Status da ação, se executou devidamente (true) ou não (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: conteudos
  /listacompras:
    get:
      tags:
      - ListaCompras
      summary: Retorna as listas de compras
      operationId: ListaCompras_GetBydataCadastropaginaquantidadeRegistrosativo
      parameters:
      - name: dataCadastro
        in: query
        description: Data inicial das listas que deverão retonar (aaaa-mm-dd hh:mm:ss)
        schema:
          type: string
          format: date-time
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: ativo
        in: query
        description: "Deverá retornar apenas listas ativa, inativas ou todas (caso\
          \ não seja informado)"
        schema:
          type: boolean
      responses:
        "200":
          description: Lista de lista de compras
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListaComprasSelecionar'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListaComprasSelecionar'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListaComprasSelecionar'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListaComprasSelecionar'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListaComprasSelecionar'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - ListaCompras
      summary: Insere dados básicos de uma nova lista de compras
      description: Insere dados básicos de uma nova lista de compras
      operationId: ListaCompras_PostBylistaComprasDadosBasicos
      requestBody:
        description: Objeto que representa a lista de compras
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          text/json:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          text/html:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          text/xml:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Lista de compras inserida com sucesso.
          content:
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
            text/html:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/xml:
              schema:
                type: integer
                format: int32
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaComprasDadosBasicos
  /listacompras/{listaComprasId}:
    get:
      tags:
      - ListaCompras
      summary: Retorna as listas de compras
      operationId: ListaCompras_GetPorIdBylistaComprasId
      parameters:
      - name: listaComprasId
        in: path
        description: Id da lista de compras desejada
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de compras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaComprasSelecionar'
            text/json:
              schema:
                $ref: '#/components/schemas/ListaComprasSelecionar'
            text/html:
              schema:
                $ref: '#/components/schemas/ListaComprasSelecionar'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListaComprasSelecionar'
            text/xml:
              schema:
                $ref: '#/components/schemas/ListaComprasSelecionar'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - ListaCompras
      summary: Atualiza dados básicos de uma lista de compras
      description: Atualiza dados básicos de uma lista de compras
      operationId: ListaCompras_PutBylistaComprasIdlistaComprasDadosBasicos
      parameters:
      - name: listaComprasId
        in: path
        description: Identificador da lista de compras
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Objeto que representa a lista de compras
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          text/json:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          text/html:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          text/xml:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListaComprasDadosBasicos'
        required: true
      responses:
        "200":
          description: Lista de compras atualizada com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Lista de compras não encontrada
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaComprasDadosBasicos
    delete:
      tags:
      - ListaCompras
      summary: Excluir uma lista de compras
      operationId: ListaCompras_DeleteBylistaComprasId
      parameters:
      - name: listaComprasId
        in: path
        description: Id da lista de compras desejada
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de compras excluída com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /listacompras/{listaComprasId}/produtos:
    post:
      tags:
      - ListaCompras
      summary: Vincula produto(s) a uma lista de compras
      description: <strong>Limite de 150 produto(s) por requisição</strong>
      operationId: ListaCompras_PostListaComprasProdutoBylistaComprasIdlistaComprasProdutos
      parameters:
      - name: listaComprasId
        in: path
        description: Identificador da lista de compras
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Objeto que representa o(s) produtos(s) que devem ser vinculado(s)
          a uma lista de compras
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasProdutosPost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasProdutosPost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasProdutosPost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasProdutosPost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasProdutosPost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasProdutosPost'
        required: true
      responses:
        "200":
          description: Produto(s) vinculado(s) com sucesso a lista de compras
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaComprasProdutos
  /listacompras/{listaComprasId}/grupoListaCompras:
    post:
      tags:
      - ListaCompras
      summary: Vincula grupo(s) de lista a uma lista de compras
      description: <strong>Limite de 150 grupo(s) de lista(s) por requisição</strong>
      operationId: ListaCompras_PostGrupoListaComprasBylistaComprasIdgrupoListaCompraIds
      parameters:
      - name: listaComprasId
        in: path
        description: Identificador da lista de compras
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Objeto que representa o(s) grupos(s) de lista(s) que devem ser
          vinculado(s) a uma lista de compras
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
          text/html:
            schema:
              type: array
              items:
                type: integer
                format: int32
          application/xml:
            schema:
              type: array
              items:
                type: integer
                format: int32
          text/xml:
            schema:
              type: array
              items:
                type: integer
                format: int32
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
      responses:
        "200":
          description: Grupo(s) de lista(s) vinculado(s) a lista de compras com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: grupoListaCompraIds
  /listacompras/{listaComprasId}/seo/{listaCompraSEOId}:
    delete:
      tags:
      - ListaCompras
      summary: Exclui vínculo de SEO de uma lista de compras
      operationId: ListaCompras_DeleteListaComprasSEOMetatagBylistaComprasIdlistaCompraSEOId
      parameters:
      - name: listaComprasId
        in: path
        description: Identificador da lista de compras
        required: true
        schema:
          type: integer
          format: int32
      - name: listaCompraSEOId
        in: path
        description: Identificador do SEO que deve ser excluido de uma lista de compras
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: SEO excluído da lista de compras com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /listacompras/{listaComprasId}/seo:
    post:
      tags:
      - ListaCompras
      summary: Insere dados de SEO em uma lista de compras
      description: Insere dados de SEO em uma lista de compras
      operationId: ListaCompras_PostListaComprasSEOBylistaComprasIdlistaComprasSeo
      parameters:
      - name: listaComprasId
        in: path
        description: Identificador da lista de compras
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Objeto que SEOs de uma lista de compras
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListaComprasSEOPost'
          text/json:
            schema:
              $ref: '#/components/schemas/ListaComprasSEOPost'
          text/html:
            schema:
              $ref: '#/components/schemas/ListaComprasSEOPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListaComprasSEOPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/ListaComprasSEOPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListaComprasSEOPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: 'SEO vinculado a lista de compras com sucesso '
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaComprasSeo
  /listacompras/{listaComprasId}/seo/title:
    put:
      tags:
      - ListaCompras
      summary: Atualiza o title do SEO de uma lista de compras
      description: Atualiza o title do SEO de uma lista de compras
      operationId: ListaCompras_PutListaComprasSEOTitleBylistaComprasIdlistaComprasSeoTitle
      parameters:
      - name: listaComprasId
        in: path
        description: Identificador da lista de compras
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Objeto que representa o title do SEO da lista de compras
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListaComprasSeoTitle'
          text/json:
            schema:
              $ref: '#/components/schemas/ListaComprasSeoTitle'
          text/html:
            schema:
              $ref: '#/components/schemas/ListaComprasSeoTitle'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListaComprasSeoTitle'
          text/xml:
            schema:
              $ref: '#/components/schemas/ListaComprasSeoTitle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListaComprasSeoTitle'
        required: true
      responses:
        "200":
          description: Title do SEO atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Lista de compras não encontrada
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaComprasSeoTitle
  /listacompras/{listaComprasId}/imagens:
    post:
      tags:
      - ListaCompras
      summary: Vincula imagens a uma lista de compras
      description: <strong>Limite de 20 imagens por requisição.</strong>
      operationId: ListaCompras_PostListaComprasFotoBylistaComprasIdlistaComprasFotos
      parameters:
      - name: listaComprasId
        in: path
        description: Identificador da lista de compras
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Objeto que representa as imagens que devem ser vinculadas a uma
          lista de compras
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasFotoPost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasFotoPost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasFotoPost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasFotoPost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasFotoPost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasFotoPost'
        required: true
      responses:
        "200":
          description: Imagem vinculada a lista de compras com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Lista de compras não encontrada
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaComprasFotos
  /listacompras/{listaComprasId}/imagens/ordem:
    put:
      tags:
      - ListaCompras
      summary: Atualiza a ordem das imagens de uma lista de compras
      operationId: ListaCompras_AtualizaOrdemImagensBylistaComprasIdlistaCompraFotos
      parameters:
      - name: listaComprasId
        in: path
        description: Identificador da lista de compras
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Objeto que representa as imagens que devem ser ordenadas de uma
          lista de compras
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasImagemOrdem'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasImagemOrdem'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasImagemOrdem'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasImagemOrdem'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasImagemOrdem'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ListaComprasImagemOrdem'
        required: true
      responses:
        "200":
          description: rdem das Imagens atualizada com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Lista de compras não encontrada
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaCompraFotos
  /loja:
    get:
      tags:
      - Loja
      summary: Retorna dados da loja
      operationId: Loja_Get
      responses:
        "200":
          description: Dados da loja
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loja'
            text/json:
              schema:
                $ref: '#/components/schemas/Loja'
            text/html:
              schema:
                $ref: '#/components/schemas/Loja'
            application/xml:
              schema:
                $ref: '#/components/schemas/Loja'
            text/xml:
              schema:
                $ref: '#/components/schemas/Loja'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /lojasFisicas:
    get:
      tags:
      - LojaFisica
      summary: Retorna todas as Lojas Físicas
      operationId: LojaFisica_GetBypaginaquantidadeRegistros
      parameters:
      - name: pagina
        in: query
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de Lojas Físicas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LojaFisica'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LojaFisica'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LojaFisica'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LojaFisica'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LojaFisica'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - LojaFisica
      summary: Insere uma Loja Física
      operationId: LojaFisica_PostBylojaFisica
      requestBody:
        description: Loja Física
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
        required: true
      responses:
        "200":
          description: Resultado da Inserção da Loja Física
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: lojaFisica
  /lojasFisicas/{lojaFisicaId}:
    get:
      tags:
      - LojaFisica
      summary: Retorna Loja Física pelo Id
      operationId: LojaFisica_GetBylojaFisicaId
      parameters:
      - name: lojaFisicaId
        in: path
        description: Id da Loja Física
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Loja Física
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LojaFisica'
            text/json:
              schema:
                $ref: '#/components/schemas/LojaFisica'
            text/html:
              schema:
                $ref: '#/components/schemas/LojaFisica'
            application/xml:
              schema:
                $ref: '#/components/schemas/LojaFisica'
            text/xml:
              schema:
                $ref: '#/components/schemas/LojaFisica'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - LojaFisica
      summary: Atualiza uma Loja Física
      operationId: LojaFisica_PutBylojaFisicaIdlojaFisica
      parameters:
      - name: lojaFisicaId
        in: path
        description: Id da Loja Física
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Loja Física
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPost'
        required: true
      responses:
        "200":
          description: Resultado da Atualização da Loja Física
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: lojaFisica
    delete:
      tags:
      - LojaFisica
      summary: Remove uma Loja Física
      operationId: LojaFisica_DeleteBylojaFisicaId
      parameters:
      - name: lojaFisicaId
        in: path
        description: Id da Loja Física
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Resultado da Remoção da Loja Física
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /lojasFisicas/{lojaFisicaId}/rangeCep:
    get:
      tags:
      - LojaFisica
      summary: Retorna todos ranges de cep que essa loja atende
      operationId: LojaFisica_GetRangeCepBylojaFisicaId
      parameters:
      - name: lojaFisicaId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de Ranges de Ceps de uma Loja Física
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaGetRangeCep'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaGetRangeCep'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaGetRangeCep'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaGetRangeCep'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaGetRangeCep'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - LojaFisica
      summary: Insere um range de cep em uma Loja Física
      operationId: LojaFisica_PostRangeCepBylojaFisicaIdrangeCep
      parameters:
      - name: lojaFisicaId
        in: path
        description: Id da Loja Física
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Range de Cep
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPostRangeCep'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPostRangeCep'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPostRangeCep'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPostRangeCep'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPostRangeCep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.LojaFisica.LojaFisicaPostRangeCep'
        required: true
      responses:
        "200":
          description: Resultado da Inserção de Range de Cep
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: rangeCep
  /lojasFisicas/estados:
    get:
      tags:
      - LojaFisica
      summary: Busca os estados.
      operationId: LojaFisica_GetEstados
      responses:
        "200":
          description: Lista dos estados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Estado'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Estado'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Estado'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Estado'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Estado'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /midias:
    get:
      tags:
      - Midia
      summary: Retorna o xml com os dados de todas as midias entre duas datas
      operationId: Midia_MidiaBydataInicialdataFinal
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Xml com os dados das midias entre duas datas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MidiaInvestimentoApiModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MidiaInvestimentoApiModel'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MidiaInvestimentoApiModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MidiaInvestimentoApiModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MidiaInvestimentoApiModel'
  /midias/{identificador}:
    get:
      tags:
      - Midia
      summary: Retorna o xml com os dados de uma mídia específicas entre duas datas
      operationId: Midia_MidiaPorIdByidentificadordataInicialdataFinal
      parameters:
      - name: identificador
        in: path
        description: "Identificar da mídia (ex.: 7-CPA)"
        required: true
        schema:
          type: string
      - name: dataInicial
        in: query
        description: Data inicial (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final (aaaa-mm-dd)
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Xml com os dados de uma mídia específicas entre duas datas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidiaApiModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MidiaApiModel'
            text/html:
              schema:
                $ref: '#/components/schemas/MidiaApiModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/MidiaApiModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/MidiaApiModel'
  /parceiros:
    get:
      tags:
      - Parceiro
      summary: Retorna todos os parceiros
      operationId: Parceiro_Get
      responses:
        "200":
          description: Lista de parceiros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Parceiro
      summary: Insere um novo parceiro.
      operationId: Parceiro_PostByparceiro
      requestBody:
        description: JSON representando todos os dados de um parceiro
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          text/json:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          text/html:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do parceiro gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: parceiro
  /parceiros/comPedidos:
    get:
      tags:
      - Parceiro
      summary: Retorna todos os parceiros com pedidos
      operationId: Parceiro_GetBydataInicialdataFinal
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos pedidos (aaaa-mm-dd hh:mm:ss)
        required: true
        schema:
          type: string
      - name: dataFinal
        in: query
        description: Data final dos pedidos (aaaa-mm-dd hh:mm:ss)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Lista de parceiros com pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parceiro'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /parceiros/{parceiroId}:
    get:
      tags:
      - Parceiro
      summary: Retorna o parceiro pelo id
      operationId: Parceiro_GetByparceiroId
      parameters:
      - name: parceiroId
        in: path
        description: Id do parceiro
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Parceiro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parceiro'
            text/json:
              schema:
                $ref: '#/components/schemas/Parceiro'
            text/html:
              schema:
                $ref: '#/components/schemas/Parceiro'
            application/xml:
              schema:
                $ref: '#/components/schemas/Parceiro'
            text/xml:
              schema:
                $ref: '#/components/schemas/Parceiro'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Parceiro
      summary: Atualiza um parceiro
      operationId: Parceiro_PutByparceiroIdparceiro
      parameters:
      - name: parceiroId
        in: path
        description: Id do parceiro
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: JSON representando todos os dados de um parceiro
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          text/json:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          text/html:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParceiroPost'
        required: true
      responses:
        "200":
          description: Parceiro atualizado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: parceiro
    delete:
      tags:
      - Parceiro
      summary: Exclui um parceiro
      operationId: Parceiro_DeleteByparceiroId
      parameters:
      - name: parceiroId
        in: path
        description: Id do parceiro
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Parceiro excluído com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /parceiros1/{nome}:
    get:
      tags:
      - Parceiro
      summary: Retorna o parceiro pelo nome
      operationId: Parceiro_GetBynome
      parameters:
      - name: nome
        in: path
        description: Nome do parceiro
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Parceiro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parceiro'
            text/json:
              schema:
                $ref: '#/components/schemas/Parceiro'
            text/html:
              schema:
                $ref: '#/components/schemas/Parceiro'
            application/xml:
              schema:
                $ref: '#/components/schemas/Parceiro'
            text/xml:
              schema:
                $ref: '#/components/schemas/Parceiro'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /parceiros/{parceiroId}/usuarios:
    get:
      tags:
      - Parceiro
      summary: Retorna os usuários pelo id do parceiro
      operationId: Parceiro_GetUsuariosPorParceiroByparceiroId
      parameters:
      - name: parceiroId
        in: path
        description: Id do parceiro
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Usuários encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /parceiros1/{nome}/usuarios:
    get:
      tags:
      - Parceiro
      summary: Retorna os usuários pelo nome do parceiro
      operationId: Parceiro_GetUsuariosPorParceiroBynome
      parameters:
      - name: nome
        in: path
        description: Nome do parceiro
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Usuários encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultadoUsuarioParceiro'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos:
    get:
      tags:
      - Pedido
      summary: Retorna uma lista de pedido na ordem decrescente dentro do limite de
        datas passadas.
      operationId: Pedido_GetBydataInicialdataFinalenumTipoFiltroDatasituacoesPedidoformasPagamentopaginaquantidadeRegistroslistaPedidosIdsemailvalidoskuapenasAssinaturasdirecaoOrdenacaocamposAdicionais
      parameters:
      - name: dataInicial
        in: query
        description: Data inicial dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss).
          Obrigatório se o campo "listaPedidosIds" não for informado.
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss).
          Obrigatório se o campo "listaPedidosIds" não for informado.
        schema:
          type: string
          format: date-time
      - name: enumTipoFiltroData
        in: query
        description: "Tipo de filtro da data (Ordenação \"desc\" - padrão: DataPedido)"
        schema:
          type: string
          enum:
          - DataPedido
          - DataAprovacao
          - DataModificacaoStatus
          - DataAlteracao
          - DataCriacao
          - DataStatus
      - name: situacoesPedido
        in: query
        description: "Lista de situações que deverão retornar (lista seperada por\
          \ \",\" ex.: 1,2,3), caso vazio retornará todas as situações"
        schema:
          type: string
      - name: formasPagamento
        in: query
        description: "Lista de formas de pagamento que deverão retornar (lista seperada\
          \ por \",\" ex.: 1,2,3), caso vazio retornará todas as formas de pagamento"
        schema:
          type: string
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: listaPedidosIds
        in: query
        description: "Lista com IDs dos pedidos desejados no retorno. Se este campo\
          \ for informado, os filtros de data serão ignorados"
        schema:
          type: string
      - name: email
        in: query
        description: Deverá retornar apenas pedidos realizados pelo usuário com o
          email passado
        schema:
          type: string
      - name: valido
        in: query
        description: "Deverá retornar apenas pedidos válidos, inválidos ou todos (caso\
          \ não seja informado)"
        schema:
          type: boolean
      - name: sku
        in: query
        description: Deverá retornar apenas pedidos que o produto de determinado sku
          foi comprado
        schema:
          type: string
      - name: apenasAssinaturas
        in: query
        description: "Quando passado o valor true, deverá retornar apenas pedidos\
          \ de assinatura. QUando falso, deverá retornar todos os pedidos."
        schema:
          type: boolean
      - name: direcaoOrdenacao
        in: query
        description: Define se a ordenação deverá ser feita de forma Ascendente ou
          Descendente. Caso não seja informado o comportamento padrão é Descendente
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: camposAdicionais
        in: query
        description: Campo opcional que define quais dados extras devem ser retornados
          em conjunto com os dados do pedido.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - ProdutoAtributos
            - ProdutoEan
            - ProdutoImagens
            - ProdutoCategorias
      responses:
        "200":
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Pedido
      summary: Insere um novo pedido na f-store.
      description: Caso a loja utilize as formas de pagamento do gateway o campo "formaPagamentoId"
        do objeto "pagamento" deverá conter o valor <strong>"200"</strong>.
      operationId: Pedido_PostBypedidoPost
      requestBody:
        description: JSON representando todos os dados de um pedido. Para saber mais
          acesse a <a href="#">documentação</a>
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PedidoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PedidoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PedidoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PedidoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PedidoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PedidoPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do pedido gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoPost
  /pedidos/{pedidoId}:
    get:
      tags:
      - Pedido
      summary: Retorna um pedido especifico
      operationId: Pedido_GetBypedidoIdcamposAdicionais
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido que se deseja buscar
        required: true
        schema:
          type: integer
          format: int64
      - name: camposAdicionais
        in: query
        description: Campo opcional que define quais dados extras devem ser retornados
          em conjunto com os dados do pedido.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - ProdutoAtributos
            - ProdutoEan
            - ProdutoImagens
            - ProdutoCategorias
      responses:
        "200":
          description: Pedido encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Pedido'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Pedido'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/situacaoPedido/{situacoesPedido}:
    get:
      tags:
      - Pedido
      summary: Retorna uma lista de pedido baseado nas situações de pedidos.
      operationId: Pedido_GetPorSituacoesPedidoBysituacoesPedidodataInicialdataFinalenumTipoFiltroDataformasPagamentopaginaquantidadeRegistrosapenasAssinaturas
      parameters:
      - name: situacoesPedido
        in: path
        description: "Lista de situações que deverão retornar (lista seperada por\
          \ \",\" ex.: 1,2,3), caso vazio retornará todas as situações"
        required: true
        schema:
          type: string
      - name: dataInicial
        in: query
        description: Data inicial dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)
        required: true
        schema:
          type: string
          format: date-time
      - name: enumTipoFiltroData
        in: query
        description: Tipo de filtro da data
        schema:
          type: string
          enum:
          - DataPedido
          - DataAprovacao
          - DataModificacaoStatus
          - DataAlteracao
          - DataCriacao
          - DataStatus
      - name: formasPagamento
        in: query
        description: "Lista de formas de pagamento que deverão retornar (lista seperada\
          \ por \",\" ex.: 1,2,3), caso vazio retornará todas as formas de pagamento"
        schema:
          type: string
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de resgistros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: apenasAssinaturas
        in: query
        description: "Quando passado o valor true, deverá retornar apenas pedidos\
          \ de assinatura. Quando falso, deverá retornar todos os pedidos."
        schema:
          type: boolean
      responses:
        "200":
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/{pedidoId}/historicoSituacao:
    get:
      tags:
      - Pedido
      summary: Busca o histórico de situações de um pedido
      operationId: Pedido_GetHistoricoSituacaoPedidoBypedidoId
      parameters:
      - name: pedidoId
        in: path
        description: Identificador do pedido
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de pedidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricoSituacaoPedido'
            text/json:
              schema:
                $ref: '#/components/schemas/HistoricoSituacaoPedido'
            text/html:
              schema:
                $ref: '#/components/schemas/HistoricoSituacaoPedido'
            application/xml:
              schema:
                $ref: '#/components/schemas/HistoricoSituacaoPedido'
            text/xml:
              schema:
                $ref: '#/components/schemas/HistoricoSituacaoPedido'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/formaPagamento/{formasPagamento}:
    get:
      tags:
      - Pedido
      summary: Retorna uma lista de pedido baseado nas formas de pagamento
      operationId: Pedido_GetPorFormasPagamentoByformasPagamentodataInicialdataFinalenumTipoFiltroDatasituacoesPedidopaginaquantidadeRegistros
      parameters:
      - name: formasPagamento
        in: path
        description: "Lista de formas de pagamento que deverão retornar (lista seperada\
          \ por \",\" ex.: 1,2,3), caso vazio retornará todas as formas de pagamento"
        required: true
        schema:
          type: string
      - name: dataInicial
        in: query
        description: Data inicial dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)
        required: true
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)
        required: true
        schema:
          type: string
          format: date-time
      - name: enumTipoFiltroData
        in: query
        description: Tipo de filtro da data
        schema:
          type: string
          enum:
          - DataPedido
          - DataAprovacao
          - DataModificacaoStatus
          - DataAlteracao
          - DataCriacao
          - DataStatus
      - name: situacoesPedido
        in: query
        description: "Lista de situações que deverão retornar (lista seperada por\
          \ \",\" ex.: 1,2,3), caso vazio retornará todas as situações"
        schema:
          type: string
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de resgistros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Pedido'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/rastreamento:
    post:
      tags:
      - Pedido
      summary: Insere um rastreamento e status a um pedido
      operationId: Pedido_PostBypedidoStatusRastreamento
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamento'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamento'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamento'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamento'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamento'
        required: true
      responses:
        "200":
          description: Rastreamento inserido com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      deprecated: true
      x-codegen-request-body-name: pedidoStatusRastreamento
  /pedidos/{pedidoId}/status:
    get:
      tags:
      - Pedido
      summary: Retorna o último status de um pedido
      operationId: Pedido_GetSituacaoPedidoBypedidoId
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Último status do pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PedidoStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PedidoStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/PedidoStatus'
            text/xml:
              schema:
                $ref: '#/components/schemas/PedidoStatus'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Pedido
      summary: Atualiza a situação do status do pedido
      operationId: Pedido_PutBypedidoIdsituacaoPedido
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Id da situação do pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoSituacaoPut'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoSituacaoPut'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoSituacaoPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoSituacaoPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoSituacaoPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoSituacaoPut'
        required: true
      responses:
        "200":
          description: Status do pedido atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: situacaoPedido
  /pedidos/{pedidoId}/rastreamento:
    get:
      tags:
      - Pedido
      summary: Retorna os dados de rastreamento/nf de um pedido
      operationId: Pedido_GetRastreamentoPedidoBypedidoId
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido que se deseja buscar
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de pedidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoRastreamento'
            text/json:
              schema:
                $ref: '#/components/schemas/PedidoRastreamento'
            text/html:
              schema:
                $ref: '#/components/schemas/PedidoRastreamento'
            application/xml:
              schema:
                $ref: '#/components/schemas/PedidoRastreamento'
            text/xml:
              schema:
                $ref: '#/components/schemas/PedidoRastreamento'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Pedido
      summary: Atualiza a data de entrega do pedido
      operationId: Pedido_PutDataEntregaPedidoBypedidoIdpedidoProdutoRastreamento
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto com os dados do rastreamento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoRastreamento'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoRastreamento'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoRastreamento'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoRastreamento'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoRastreamento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoRastreamento'
        required: true
      responses:
        "200":
          description: Data de entrega do pedido atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoProdutoRastreamento
    post:
      tags:
      - Pedido
      summary: Insere um rastreamento e status a um pedido
      operationId: Pedido_PostRatreamentoPorPedidoBypedidoIdpedidoStatusRastreamento
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoPedido'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoPedido'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoPedido'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoPedido'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoPedido'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoPedido'
        required: true
      responses:
        "200":
          description: Rastreamento inserido com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoStatusRastreamento
  /pedidos/{pedidoId}/rastreamento/{pedidoRastreamentoId}:
    put:
      tags:
      - Pedido
      summary: Atualiza rastreamento completo (com os dados da N.F.)
      operationId: Pedido_AtualizarPedidoRastreamentoBypedidoIdpedidoRastreamentoIdpedidoRastreamento
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      - name: pedidoRastreamentoId
        in: path
        description: Id do Pedido Ratreamento
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto PedidoRastreamento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoPut'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoPut'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoPut'
        required: true
      responses:
        "200":
          description: Rastreamento atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoRastreamento
  /pedidos/{pedidoId}/rastreamento/{pedidoRastreamentoId}/parcial:
    put:
      tags:
      - Pedido
      summary: Atualiza rastreamento parcial (Rastreamento e UrlRastreamento)
      operationId: Pedido_AtualizarPedidoRastreamentoParcialBypedidoIdpedidoRastreamentoIdpedidoRastreamento
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      - name: pedidoRastreamentoId
        in: path
        description: Id do Pedido Ratreamento
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto PedidoRastreamento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoParcialPut'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoParcialPut'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoParcialPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoParcialPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoParcialPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoParcialPut'
        required: true
      responses:
        "200":
          description: Rastreamento atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoRastreamento
  /pedidos/{pedidoId}/produtos/{produtoVarianteId}/rastreamento:
    post:
      tags:
      - Pedido
      summary: Insere um rastreamento e status a um produto variante
      operationId: Pedido_PostRatreamentoPorProdutoVarianteBypedidoIdprodutoVarianteIdpedidoStatusRastreamentoProdutoVariante
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      - name: produtoVarianteId
        in: path
        description: Id do produto variante
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoProdutoVariante'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoProdutoVariante'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoProdutoVariante'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoProdutoVariante'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoProdutoVariante'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoStatusRastreamentoProdutoVariante'
        required: true
      responses:
        "200":
          description: Id do PedidoRastreamentoProduto inserido
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoStatusRastreamentoProdutoVariante
  /pedidos/{pedidoId}/produtos/{produtoVarianteId}/rastreamento/{pedidoRastreamentoProdutoId}:
    get:
      tags:
      - Pedido
      summary: Retorna um rastreamento de produto
      operationId: Pedido_SelecionarPedidoRastreamentoProdutoBypedidoIdprodutoVarianteIdpedidoRastreamentoProdutoId
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      - name: produtoVarianteId
        in: path
        description: Id do Produto Variante
        required: true
        schema:
          type: integer
          format: int64
      - name: pedidoRastreamentoProdutoId
        in: path
        description: Id do Pedido Rastreamento Produto
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Rastreamento de produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoRastreamentoProdutoGet'
            text/json:
              schema:
                $ref: '#/components/schemas/PedidoRastreamentoProdutoGet'
            text/html:
              schema:
                $ref: '#/components/schemas/PedidoRastreamentoProdutoGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/PedidoRastreamentoProdutoGet'
            text/xml:
              schema:
                $ref: '#/components/schemas/PedidoRastreamentoProdutoGet'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Pedido
      summary: Atualiza rastreamento de produto completo (com os dados da N.F.)
      operationId: Pedido_AtualizarPedidoRastreamentoProdutoBypedidoIdprodutoVarianteIdpedidoRastreamentoProdutoIdpedidoRastreamentoProduto
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      - name: produtoVarianteId
        in: path
        description: Id do Produto Variante
        required: true
        schema:
          type: integer
          format: int64
      - name: pedidoRastreamentoProdutoId
        in: path
        description: Id do Pedido Rastreamento Produto
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto PedidoRastreamentoProduto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoPut'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoPut'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoPut'
        required: true
      responses:
        "200":
          description: Rastreamento do produto atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoRastreamentoProduto
  /pedidos/{pedidoId}/produtos/{produtoVarianteId}/rastreamento/{pedidoRastreamentoProdutoId}/parcial:
    put:
      tags:
      - Pedido
      summary: Atualiza rastreamento parcial (Rastreamento e UrlRastreamento)
      operationId: Pedido_AtualizarPedidoRastreamentoProdutoParcialBypedidoIdprodutoVarianteIdpedidoRastreamentoProdutoIdpedidoRastreamentoProduto
      parameters:
      - name: pedidoId
        in: path
        description: Id do Pedido
        required: true
        schema:
          type: integer
          format: int64
      - name: produtoVarianteId
        in: path
        description: Id do Produto Variante
        required: true
        schema:
          type: integer
          format: int64
      - name: pedidoRastreamentoProdutoId
        in: path
        description: Id do Pedido Rastreamento Produto
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto PedidoRastreamentoProduto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoParcialPut'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoParcialPut'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoParcialPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoParcialPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoParcialPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoRastreamentoProdutoParcialPut'
        required: true
      responses:
        "200":
          description: Rastreamento do produto atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoRastreamentoProduto
  /pedidos/{pedidoId}/rastreamento/produtos:
    get:
      tags:
      - Pedido
      summary: Retorna os dados de rastreamento/nf dos produtos de um pedido
      operationId: Pedido_GetRastreamentoProdutoBypedidoId
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido que se deseja buscar
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoRastreamentoProduto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoRastreamentoProduto'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoRastreamentoProduto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoRastreamentoProduto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoRastreamentoProduto'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/{pedidoId}/{produtoVarianteId}/status:
    put:
      tags:
      - Pedido
      summary: Atualiza a situação do status de um produto do pedido
      operationId: Pedido_PutSituacaoProdutoVarianteBypedidoIdprodutoVarianteIdpedidoProdutoSituacao
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido
        required: true
        schema:
          type: integer
          format: int64
      - name: produtoVarianteId
        in: path
        description: Id do produto variante
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados da situação do produto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoSituacao'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoSituacao'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoSituacao'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoSituacao'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoSituacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoSituacao'
        required: true
      responses:
        "200":
          description: Status do produto do pedido atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoProdutoSituacao
  /pedidos/{pedidoId}/changeorder:
    put:
      tags:
      - Pedido
      summary: Atualiza o status de um produto para removê-lo do pedido e depois adiciona
        uma lista de produtos no pedido
      operationId: Pedido_PutChangeOrderBypedidoIdchangeOrder
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados dos produtos a serem removidos e dos produtos a serem adicionados
          no pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ChangeOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ChangeOrder'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ChangeOrder'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ChangeOrder'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ChangeOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ChangeOrder'
        required: true
      responses:
        "200":
          description: Alteração de produto de pedido atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      deprecated: true
      x-codegen-request-body-name: changeOrder
  /pedidos/{pedidoId}/cartao:
    get:
      tags:
      - Pedido
      summary: Retorna os dados de cartão de crédito de um pedido
      operationId: Pedido_GetDadosCartaoBypedidoId
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido que se deseja buscar os dados
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Dados de cartão de crédito do pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.PedidoCartaoCredito'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.PedidoCartaoCredito'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.PedidoCartaoCredito'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.PedidoCartaoCredito'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.PedidoCartaoCredito'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/transacoes/{transacaoId}:
    get:
      tags:
      - Pedido
      summary: Retorna os detalhes da transação de um pedido
      operationId: Pedido_GetTransacoesBytransacaoId
      parameters:
      - name: transacaoId
        in: path
        description: Número da Transação que se deseja buscar os dados
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Dados de transação do pedido
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/{pedidoId}/frete:
    get:
      tags:
      - Pedido
      summary: Retorna os detalhes do serviço de frete
      operationId: Pedido_GetFreteServicoBypedidoId
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido que se deseja buscar os dados
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Dados do serviço de frete do pedido
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/liberarReservas:
    post:
      tags:
      - Pedido
      summary: Liberar reservas de pedidos
      operationId: Pedido_LiberarReservasBypedidosIds
      requestBody:
        description: Números dos pedidos que se deseja buscar
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
          text/html:
            schema:
              type: array
              items:
                type: integer
                format: int64
          application/xml:
            schema:
              type: array
              items:
                type: integer
                format: int64
          text/xml:
            schema:
              type: array
              items:
                type: integer
                format: int64
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        "200":
          description: Resultado da liberação de reservas de pedidos
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidosIds
  /pedidos/naoIntegrados:
    get:
      tags:
      - Pedido
      summary: Busca pedidos que ainda não foram setado o complete
      operationId: Pedido_SelecionarPedidosNaoIntegrado
      responses:
        "200":
          description: Lista de números de pedidos ainda não integrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoNaoIntegrado'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoNaoIntegrado'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoNaoIntegrado'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoNaoIntegrado'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoNaoIntegrado'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/complete:
    post:
      tags:
      - Pedido
      summary: Seta o pedido como integrado
      operationId: Pedido_InserirPedidoIntegradoBypedidoNaoIntegrado
      requestBody:
        description: Pedido que se deseja inserir o "complete"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoNaoIntegrado'
          text/json:
            schema:
              $ref: '#/components/schemas/PedidoNaoIntegrado'
          text/html:
            schema:
              $ref: '#/components/schemas/PedidoNaoIntegrado'
          application/xml:
            schema:
              $ref: '#/components/schemas/PedidoNaoIntegrado'
          text/xml:
            schema:
              $ref: '#/components/schemas/PedidoNaoIntegrado'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoNaoIntegrado'
        required: true
      responses:
        "200":
          description: Após a inserção no complete o pedido não retorná no endpoint
            "pedidos/naoIntegrados"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoNaoIntegrado
  /pedidos/{pedidoId}/observacao:
    get:
      tags:
      - Pedido
      summary: Busca observações de um pedido
      operationId: Pedido_GetPedidoObservacaoBypedidoId
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de observações de um pedido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoGet'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Pedido
      summary: Inseri uma observação a um pedido
      operationId: Pedido_InserirPedidoObservacaoBypedidoIdpedidoObservacao
      parameters:
      - name: pedidoId
        in: path
        description: Número do pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto com os dados da observação
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoPost'
        required: true
      responses:
        "200":
          description: Após a inserção no complete o pedido não retorná no endpoint
            "pedidos/naoIntegrados"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: pedidoObservacao
  /pedidos/{pedidoId}/changesellercompleto:
    put:
      tags:
      - Pedido
      summary: Atualiza o CD de todos os produtos de um pedido através de uma cotação
      operationId: Pedido_PutChangeSellerCompletoBypedidoIdchangeSellerCompleto
      parameters:
      - name: pedidoId
        in: path
        description: Id do pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto com os dados de cotação e responsável
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          text/xml:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
        required: true
      responses:
        "200":
          description: Status da ação de Change Seller
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/xml:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
        "400":
          description: Erro no processamento dos dados enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/xml:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: changeSellerCompleto
  /pedidos/{pedidoId}/changeseller:
    put:
      tags:
      - Pedido
      summary: Atualiza o CD de todos os produtos de um pedido através de uma cotação
      operationId: Pedido_PutChangeSellerBypedidoIdchangeSellerCompleto
      parameters:
      - name: pedidoId
        in: path
        description: Id do pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto com os dados de cotação e responsável
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          text/xml:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeSellerCompleto'
        required: true
      responses:
        "200":
          description: Status da ação de Change Seller
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      deprecated: true
      x-codegen-request-body-name: changeSellerCompleto
  /pedidos/estorno/{pedidoId}:
    post:
      tags:
      - Pedido
      summary: Cria um estorno de pagamento no gateway
      operationId: Pedido_CriarEstornoBypedidoIdestorno
      parameters:
      - name: pedidoId
        in: path
        description: Id do pedido
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estorno'
          text/json:
            schema:
              $ref: '#/components/schemas/Estorno'
          text/html:
            schema:
              $ref: '#/components/schemas/Estorno'
          application/xml:
            schema:
              $ref: '#/components/schemas/Estorno'
          text/xml:
            schema:
              $ref: '#/components/schemas/Estorno'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Estorno'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "400":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: estorno
  /pedidos/{pedidoId}/changeseller/relacao:
    get:
      tags:
      - Pedido
      summary: Devolve a lista de pedidos relacionados com um changeseller e o pedido
        original
      operationId: Pedido_GetPedidosRelacionadosChangeSellerBypedidoId
      parameters:
      - name: pedidoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Status da ação de Change Seller Relação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/xml:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
        "400":
          description: Erro no processamento dos dados enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
            text/xml:
              schema:
                $ref: '#/components/schemas/ChangeSellerDTO'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /pedidos/{pedidoId}/changeordercompleto:
    put:
      tags:
      - Pedido
      summary: Troca ou insere um novo produto dentro do pedido
      operationId: Pedido_PutChangeOrderCompletoBypedidoIdchangeOrder
      parameters:
      - name: pedidoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeOrder'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeOrder'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeOrder'
          text/xml:
            schema:
              $ref: '#/components/schemas/ChangeOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeOrder'
        required: true
      responses:
        "200":
          description: Status da ação de Change Order
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: changeOrder
  /portfolios:
    get:
      tags:
      - Portfolio
      summary: Retorna todos os portfolios
      operationId: Portfolio_Get
      responses:
        "200":
          description: Lista de portfolios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Portfolio'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Portfolio
      summary: Insere um novo portfolio.
      operationId: Portfolio_PostByportfolio
      requestBody:
        description: Dados do novo portfolio
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do portfolio gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: portfolio
  /portfolios/{portfolioId}:
    get:
      tags:
      - Portfolio
      summary: Retorna o portfolio pelo id
      operationId: Portfolio_GetByportfolioId
      parameters:
      - name: portfolioId
        in: path
        description: Id do portfolio que se deseja buscar
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Portfolio encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Portfolio
      summary: Atualiza um portfolio
      operationId: Portfolio_PutByportfolioIdportfolio
      parameters:
      - name: portfolioId
        in: path
        description: Id do portfolio que se deseja atualizar
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Novos dados do portfolio
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.PortfolioPost'
        required: true
      responses:
        "200":
          description: Portfolio atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: portfolio
    delete:
      tags:
      - Portfolio
      summary: Deleta um portfolio
      operationId: Portfolio_DeleteByportfolioId
      parameters:
      - name: portfolioId
        in: path
        description: Id do portfolio que se deseja excluir
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Portfolio excluído com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /portfolios1/{nome}:
    get:
      tags:
      - Portfolio
      summary: Retorna o portfolio pelo nome
      operationId: Portfolio_GetBynome
      parameters:
      - name: nome
        in: path
        description: Nome do portfolio que se deseja buscar
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Portfolio encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Portfolio'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /portfolios/{portfolioId}/produtos:
    get:
      tags:
      - Portfolio
      summary: Retorna a lista de produtos de um portfolio
      operationId: Portfolio_GetProdutosByportfolioId
      parameters:
      - name: portfolioId
        in: path
        description: Id do portfolio que se deseja buscar os produtos
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Retorna a lista de produtos de um portfolio
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.PortfolioProduto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.PortfolioProduto'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.PortfolioProduto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.PortfolioProduto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.PortfolioProduto'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Portfolio
      summary: Vinculo de produtos ao portfolio
      operationId: Portfolio_PutProdutosByportfolioIdlistProdutoId
      parameters:
      - name: portfolioId
        in: path
        description: Id do portfolio que se deseja atualizar os produtos
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Lista dos Id's dos produtos
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.PortfolioProduto'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.PortfolioProduto'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.PortfolioProduto'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.PortfolioProduto'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.PortfolioProduto'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.PortfolioProduto'
        required: true
      responses:
        "200":
          description: Lista de produtos do portfolio
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listProdutoId
  /portfolios/{portfolioId}/status:
    put:
      tags:
      - Portfolio
      summary: Altera o status de um portfolio
      operationId: Portfolio_PutStatusByportfolioIdportfolioStatus
      parameters:
      - name: portfolioId
        in: path
        description: Id do portfolio que se deseja atualizar
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Novo status do portfolio
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PortfolioStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PortfolioStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PortfolioStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PortfolioStatus'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PortfolioStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.PortfolioStatus'
        required: true
      responses:
        "200":
          description: Status do portfolio atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: portfolioStatus
  /produtos:
    get:
      tags:
      - Produto
      summary: Retorna todos os produtos
      operationId: Produto_GetBypaginacategoriasfabricantescentrosDistribuicaoalteradosPartirDequantidadeRegistrossomenteValidoscamposAdicionais
      parameters:
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: categorias
        in: query
        description: "Lista de categorias que deverão retornar (lista seperada por\
          \ \",\" ex.: 1,2,3), caso vazio retornará todas as categorias"
        schema:
          type: string
      - name: fabricantes
        in: query
        description: "Lista de fabricantes que deverão retornar (lista seperada por\
          \ \",\" ex.: 1,2,3), caso vazio retornará todas as situações"
        schema:
          type: string
      - name: centrosDistribuicao
        in: query
        description: "Lista de centros de distribuição que deverão retornar (lista\
          \ seperada por \",\" ex.: 1,2,3), caso vazio retornará produtos de todos\
          \ os cd's"
        schema:
          type: string
      - name: alteradosPartirDe
        in: query
        description: "Retorna apenas os produtos que sofreram alguma alteração a partir\
          \ da data/hora informada. <br /><strong>Formato: aaaa-mm-dd hh:mm:ss</strong><br\
          \ /> com no máximo 48 horas de antecedência"
        schema:
          type: string
          format: date-time
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: somenteValidos
        in: query
        description: Retorna apenas os produtos que estão marcados como válido
        schema:
          type: boolean
      - name: camposAdicionais
        in: query
        description: Campos adicionais que se selecionados retornaram junto com o
          produto
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Atacado
            - Estoque
            - Atributo
            - Informacao
            - TabelaPreco
      responses:
        "200":
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Produto
      summary: Adiciona novo produto
      description: Método que insere um produto na base da Fstore
      operationId: Produto_PostByproduto
      requestBody:
        description: Objeto que contém os dados do produto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do produto variante gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produto
  /produtos/{identificador}:
    get:
      tags:
      - Produto
      summary: Retorna um produto buscando pelo seu identificador
      description: "Método responsável por retornar um produto específico buscando\
        \ pelo seu identificador, que pode ser um sku ou produto variante. O tipo\
        \ do identificador\r\npode ser definido no campo <strong>tipoIdentificador</strong>.\
        \ Também é possível informar quais informações adicionais devem ser retornadas\
        \ na consulta utilizando o campo\r\n<strong>campos adicionais</strong>."
      operationId: Produto_GetByidentificadortipoIdentificadorcamposAdicionais
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
          - ProdutoId
      - name: camposAdicionais
        in: query
        description: Campo opcional que define quais dados extras devem ser retornados
          em conjunto com os dados básicos do produto.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Atacado
            - Estoque
            - Atributo
            - Informacao
            - TabelaPreco
      responses:
        "200":
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Produto'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Produto'
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Produto
      summary: Atualiza um produto.
      description: Atualiza um produto com base nos dados enviados
      operationId: Produto_PutByidentificadortipoIdentificadorproduto
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: Dados do produto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ProdutoPut'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ProdutoPut'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ProdutoPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ProdutoPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ProdutoPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ProdutoPut'
        required: true
      responses:
        "200":
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produto
    patch:
      tags:
      - Produto
      summary: Atualização parcial de produto
      operationId: Produto_PatchByidentificadortipoIdentificadorproduto
      parameters:
      - name: identificador
        in: path
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.ProdutoPatch'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.ProdutoPatch'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.ProdutoPatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.ProdutoPatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.ProdutoPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.ProdutoPatch'
        required: true
      responses:
        "200":
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "206":
          description: Produto atualizado parcialmente
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "400":
          description: Não foi possível realizar a atualização
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
      x-codegen-request-body-name: produto
  /produtos/{identificador}/relacionados:
    get:
      tags:
      - Produto
      summary: Busca os produtos relacionados
      description: Retorna todos os identificadores dos produtos/variantes relacionados
        ao produto pesquisado
      operationId: Produto_GetRelacionadosByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: "Define se o identificador informado é um Sku, um ProdutoId (Agrupador\
          \ de variantes) ou um ProdutoVarianteId."
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoId
          - ProdutoVarianteId
      responses:
        "200":
          description: Lista de produtos relacionados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosRelacionados'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosRelacionados'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosRelacionados'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosRelacionados'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosRelacionados'
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/alteracoes:
    get:
      tags:
      - Produto
      summary: Retorna todos os produtos
      operationId: Produto_GetAlteracoesBypaginaquantidadeRegistrosalteradosPartirDe
      parameters:
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: alteradosPartirDe
        in: query
        description: "Retorna apenas os produtos que sofreram alguma alteração a partir\
          \ da data/hora informada. <br /><strong>Formato: aaaa-mm-dd hh:mm:ss</strong><br\
          \ /> com no máximo 48 horas de antecedência"
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Lista de preços e estoque de produtos que sofreram alterações
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.ProdutoAlterado'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.ProdutoAlterado'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.ProdutoAlterado'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.ProdutoAlterado'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.ProdutoAlterado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/DataCadastro:
    put:
      tags:
      - Produto
      summary: Atualiza a data de cadastro de um produto.
      description: Atualiza a data de cadastro um produto com base nos dados enviados
      operationId: Produto_PutDataCadastroByidentificadortipoIdentificadorprodutoDataCadastro
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: data de cadastro de um produto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoDataCadastro'
          text/json:
            schema:
              $ref: '#/components/schemas/ProdutoDataCadastro'
          text/html:
            schema:
              $ref: '#/components/schemas/ProdutoDataCadastro'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProdutoDataCadastro'
          text/xml:
            schema:
              $ref: '#/components/schemas/ProdutoDataCadastro'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProdutoDataCadastro'
        required: true
      responses:
        "200":
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtoDataCadastro
  /produtos/estoques:
    put:
      tags:
      - Produto
      summary: Atualiza o estoque de vários produtos.
      description: Atualiza o estoque de vários produtos com base na lista enviada.<br
        /><strong>Limite de 50 produtos por requisição</strong>
      operationId: Produto_AtualizarEstoqueBytipoIdentificadorlistaProdutoEstoque
      parameters:
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: Lista com os dados da atualização do estoque
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoEstoque'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoEstoque'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoEstoque'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoEstoque'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoEstoque'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoEstoque'
        required: true
      responses:
        "200":
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoEstoque'
            text/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoEstoque'
            text/html:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoEstoque'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoEstoque'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoEstoque'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaProdutoEstoque
  /produtos/precos:
    put:
      tags:
      - Produto
      summary: Atualiza o preço de vários produtos.
      description: Atualiza o estoque de vários produtos com base na lista enviada.<br
        /><strong>Limite de 50 produtos por requisição</strong>
      operationId: Produto_AtualizarPrecoBytipoIdentificadorlistaProdutoPreco
      parameters:
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: Lista com os dados da atualização do preço
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPreco'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPreco'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPreco'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPreco'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPreco'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPreco'
        required: true
      responses:
        "200":
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
            text/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
            text/html:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaProdutoPreco
  /produtos/precos/lote:
    put:
      tags:
      - Produto
      summary: "Atualiza para o mesmo preço, todos os variantes de um produto encontrado\
        \ com o SKU informado."
      description: "Atualiza para o mesmo preço, todos os variantes de um produto\
        \ encontrado com o SKU informado.<br /><strong>Limite de 50 produtos por requisiç\
        ão</strong>"
      operationId: Produto_AtualizarPrecoLoteBylistaProdutoPrecoLote
      requestBody:
        description: Lista com os dados da atualização do preço por lote.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPrecoLote'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPrecoLote'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPrecoLote'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPrecoLote'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPrecoLote'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NovoContratoPut.ProdutoPrecoLote'
        required: true
      responses:
        "200":
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
            text/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
            text/html:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoPreco'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaProdutoPrecoLote
  /produtos/{identificador}/situacaoReseller:
    get:
      tags:
      - Produto
      summary: Retorna a situação reseller de um produto
      operationId: Produto_SelecionarStatusResellerByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      responses:
        "200":
          description: Situação do produto no reseller
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/informacoes:
    get:
      tags:
      - Produto
      summary: Retorna todas as informações de um produto
      description: Retorna todas as informações de um produto específico
      operationId: Produto_SelecionarInformacoesByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
          - ProdutoId
      responses:
        "200":
          description: Lista de informações do produto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoInformacaoCompleta'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoInformacaoCompleta'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoInformacaoCompleta'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoInformacaoCompleta'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoInformacaoCompleta'
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Produto
      summary: Adiciona uma nova informação.
      description: Adiciona uma nova informação e vincula a um produto existente.
      operationId: Produto_InserirInformacaoByidentificadortipoIdentificadorinformacaoProdutotipoRetorno
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: tipoRetorno
        in: query
        description: "Define o tipo de retorno a ser recebido. Id retorna o InformacaoProdutoId\
          \ da informação inserida, Booleano retorna true ou false, de acordo com\
          \ o resultado da operação. Valor padrão Booleano."
        schema:
          type: string
          enum:
          - Id
          - Booleano
      requestBody:
        description: Objeto contendo os dados atualizados da informação do produto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          text/html:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          text/xml:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
        required: true
      responses:
        "200":
          description: Informação inserida com sucesso.
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: informacaoProduto
  /produtos/{identificador}/informacoes/{informacaoId}:
    put:
      tags:
      - Produto
      summary: Atualiza uma informação de um produto
      description: Atualiza uma informação de um produto específico
      operationId: Produto_AtualizarInformacaoByidentificadortipoIdentificadorinformacaoIdinformacaoProduto
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: informacaoId
        in: path
        description: Id da informação do produto
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto contendo os dados atualizados da informação do produto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          text/html:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          text/xml:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProdutoInformacaoProduto'
        required: true
      responses:
        "200":
          description: Informação do produto atualizada com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado ou informação não encontrada
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: informacaoProduto
    delete:
      tags:
      - Produto
      summary: Exclui uma informação de um produto
      operationId: Produto_DeletarInformacaoByidentificadortipoIdentificadorinformacaoId
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: informacaoId
        in: path
        description: Id da informação do produto
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Informação excluída com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado ou informação não encontrada
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/categorias:
    get:
      tags:
      - Produto
      summary: Retorna todas as categorias de um produto
      operationId: Produto_SelecionarProdutoCategoriaByidentificadortipoIdentificadorpaginaquantidadRegistros
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
          - ProdutoId
      - name: pagina
        in: query
        schema:
          type: integer
          format: int32
      - name: quantidadRegistros
        in: query
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de categorias de um produto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoriaCaminho'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoriaCaminho'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoriaCaminho'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoriaCaminho'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoriaCaminho'
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Produto
      summary: Adiciona o vínculo entre um produto e uma categoria
      description: Adiciona o vínculo entre um produto e uma categoria com base na
        lista enviada
      operationId: Produto_InserirProdutoCategoriaByidentificadortipoIdentificadorprodutoCategoria
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: Id da categoria a qual o produto deverá ser vinculado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoCategoria'
          text/json:
            schema:
              $ref: '#/components/schemas/ProdutoCategoria'
          text/html:
            schema:
              $ref: '#/components/schemas/ProdutoCategoria'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProdutoCategoria'
          text/xml:
            schema:
              $ref: '#/components/schemas/ProdutoCategoria'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProdutoCategoria'
        required: true
      responses:
        "200":
          description: Produto vinculado a categoria com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtoCategoria
  /produtos/{identificador}/categorias/{id}:
    delete:
      tags:
      - Produto
      summary: Exclui o vínculo entre uma categoria e um produto
      operationId: Produto_DeletarProdutoCategoriaByidentificadortipoIdentificadorid
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: id
        in: path
        description: Id da categoria a qual o produto deverá ser desvinculado.
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Vinculo do produto com a categoria excluído com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/categoriaPrincipal:
    put:
      tags:
      - Produto
      summary: Define uma categoria de um produto como principal
      operationId: Produto_AlterarCategoriaPrincipalByidentificadortipoIdentificadorprodutoCategoriaPrincipal
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoAlterarCategoriaPrincipal'
          text/json:
            schema:
              $ref: '#/components/schemas/ProdutoAlterarCategoriaPrincipal'
          text/html:
            schema:
              $ref: '#/components/schemas/ProdutoAlterarCategoriaPrincipal'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProdutoAlterarCategoriaPrincipal'
          text/xml:
            schema:
              $ref: '#/components/schemas/ProdutoAlterarCategoriaPrincipal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProdutoAlterarCategoriaPrincipal'
        required: true
      responses:
        "200":
          description: Categoria principal atualizada com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtoCategoriaPrincipal
  /produtos/categorias/ordem/lote:
    put:
      tags:
      - Produto
      summary: Atualiza a ordem de exibição dos produtos nas categorias
      description: Atualiza a ordem de exibição dos produtos nas categorias. <strong>Limite
        de 150 categorias por requisição</strong>
      operationId: Produto_AtualizarProdutoCategoriaOrdemLoteBylistaProdutoCategoriaOrdem
      requestBody:
        description: Lista com os dados de atualização da ordem do produto na categoria
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoCategoriaOrdem'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoCategoriaOrdem'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoCategoriaOrdem'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoCategoriaOrdem'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoCategoriaOrdem'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoCategoriaOrdem'
        required: true
      responses:
        "200":
          description: Ordem de exibição do produto na categoria atualizado com sucesso.
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoProdutoCategoriaOrdem'
            text/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoProdutoCategoriaOrdem'
            text/html:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoProdutoCategoriaOrdem'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoProdutoCategoriaOrdem'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoProdutoCategoriaOrdem'
      x-codegen-request-body-name: listaProdutoCategoriaOrdem
  /produtos/{identificador}/imagens:
    get:
      tags:
      - Produto
      summary: Retorna uma lista de imagens de um produto
      operationId: Produto_SelecionarProdutoImagemByidentificadortipoIdentificadorprodutosIrmaos
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: produtosIrmaos
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Lista de imagens vinculadas a um  produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoImagem'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoImagem'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoImagem'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoImagem'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoImagem'
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Produto
      summary: Adiciona uma nova imagem vinculada a um produto
      operationId: Produto_InserirProdutoImagemByidentificadortipoIdentificadorlistaImagenstipoRetorno
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: tipoRetorno
        in: query
        description: "Define o tipo de retorno a ser recebido. ListaIds retorna lista\
          \ de Ids das imagens inseridas, Booleano retorna true ou false, de acordo\
          \ com o resultado da operação. Valor padrão Booleano."
        schema:
          type: string
          enum:
          - ListaIds
          - Booleano
      requestBody:
        description: Lista com as imagens do produto no formato base 64
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoImagemPost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoImagemPost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoImagemPost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoImagemPost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoImagemPost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProdutoImagemPost'
        required: true
      responses:
        "200":
          description: Imagem adicionada ao produto com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaImagens
  /produtos/{identificador}/imagens/estampa:
    put:
      tags:
      - Produto
      summary: Atualiza a imagem de estampa do produto
      operationId: Produto_AtualizarProdutoImagemEstampaByidentificadortipoIdentificadorprodutoImagemEstampaPut
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: Id da imagem que será marcada como estampa
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoImagemEstampaPut'
          text/json:
            schema:
              $ref: '#/components/schemas/ProdutoImagemEstampaPut'
          text/html:
            schema:
              $ref: '#/components/schemas/ProdutoImagemEstampaPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProdutoImagemEstampaPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/ProdutoImagemEstampaPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProdutoImagemEstampaPut'
        required: true
      responses:
        "200":
          description: Estampa alterada com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtoImagemEstampaPut
  /produtos/{identificador}/imagens/{id}:
    delete:
      tags:
      - Produto
      summary: Exclui uma imagem de um produto
      operationId: Produto_DeletarProdutoImagemByidentificadortipoIdentificadorid
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: id
        in: path
        description: Id da imagem do produto
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Imagem do produto excluída com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado ou imagem não encontrada
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/disponibilidade:
    get:
      tags:
      - Produto
      summary: Retorna se o produto variante está disponivel ou não
      operationId: Produto_SelecionarProdutoVarianteDisponibilidadeByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      responses:
        "200":
          description: Disponibilidade de um produto
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/preco:
    get:
      tags:
      - Produto
      summary: Retorna o precoDe e precoPor de um produto
      operationId: Produto_SelecionarProdutoVariantePrecoByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      responses:
        "200":
          description: Objeto com o precoDe e precoPor de um produto variante
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePreco'
            text/json:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePreco'
            text/html:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePreco'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePreco'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePreco'
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/estoque:
    get:
      tags:
      - Produto
      summary: Retorna o estoque total e o estoque por centro de distribuição
      operationId: Produto_SelecionarProdutoVarianteEstoqueByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      responses:
        "200":
          description: Objeto com o estoque total e o estoque por centro de distribuição
            de um produto variante
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdutoVarianteEstoque'
            text/json:
              schema:
                $ref: '#/components/schemas/ProdutoVarianteEstoque'
            text/html:
              schema:
                $ref: '#/components/schemas/ProdutoVarianteEstoque'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProdutoVarianteEstoque'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProdutoVarianteEstoque'
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/avaliacoes:
    get:
      tags:
      - Produto
      summary: Retorna uma lista de avaliações referente ao identificador informado
      operationId: Produto_GetAvaliacoesPorIdentificadorByidentificadortipoIdentificadorstatuspaginaquantidadeRegistros
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: status
        in: query
        description: "Referente ao status que libera a visualização da avaliação no\
          \ site = ['Pendente', 'NaoAprovado', 'Aprovado']"
        schema:
          type: string
          enum:
          - Pendente
          - NaoAprovado
          - Aprovado
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de avaliações de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/atacarejo:
    get:
      tags:
      - Produto
      summary: Retorna Lista de Atacarejos do Produto Variante
      operationId: Produto_SelecionarTodosProdutoAtacadoByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: SKU ou Id do Produto Variante
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um SKU ou um id de Produto
          Variante
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      responses:
        "200":
          description: Lista de Atacarejos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtacadoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtacadoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtacadoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtacadoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtacadoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Produto
      summary: Adiciona novos Atacarejos
      operationId: Produto_InserirProdutoAtacadoByidentificadortipoIdentificadorlistaProdutoAtacado
      parameters:
      - name: identificador
        in: path
        description: SKU ou Id do Produto Variante
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um SKU ou um id de Produto
          Variante
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: Lista de Atacarejos
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AtacadoPost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AtacadoPost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AtacadoPost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AtacadoPost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AtacadoPost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AtacadoPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Resultado da Inserção dos Atacarejos
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: listaProdutoAtacado
  /produtos/{identificador}/atacarejo/{produtoVarianteAtacadoId}:
    get:
      tags:
      - Produto
      summary: Retorna um Atacarejo pelo Id
      operationId: Produto_SelecionarPorIdProdutoAtacadoByidentificadortipoIdentificadorprodutoVarianteAtacadoId
      parameters:
      - name: identificador
        in: path
        description: SKU ou Id do Produto Variante
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um SKU ou um id de Produto
          Variante
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: produtoVarianteAtacadoId
        in: path
        description: Id do Atacarejo
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Atacarejo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtacadoGet'
            text/json:
              schema:
                $ref: '#/components/schemas/AtacadoGet'
            text/html:
              schema:
                $ref: '#/components/schemas/AtacadoGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtacadoGet'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtacadoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Produto
      summary: Atualiza um Atacarejo
      operationId: Produto_AtualizarProdutoAtacadoByidentificadortipoIdentificadorprodutoVarianteAtacadoIdprodutoAtacado
      parameters:
      - name: identificador
        in: path
        description: SKU ou Id do Produto Variante
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um SKU ou um id de Produto
          Variante
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: produtoVarianteAtacadoId
        in: path
        description: Id do Atacarejo
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Objeto Atacarejo com os dados que serão atualizados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtacadoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/AtacadoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/AtacadoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/AtacadoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/AtacadoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AtacadoPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Resultado da Atualização do Atacarejo
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtoAtacado
    delete:
      tags:
      - Produto
      summary: Remove um Atacarejo
      operationId: Produto_DeletarProdutoAtacadoByidentificadortipoIdentificadorprodutoVarianteAtacadoId
      parameters:
      - name: identificador
        in: path
        description: SKU ou Id do Produto Variante
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um SKU ou um id de Produto
          Variante
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      - name: produtoVarianteAtacadoId
        in: path
        description: Id do Atacarejo
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Resultado da Remoção do Atacarejo
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/principal:
    put:
      tags:
      - Produto
      summary: Seta identificador como variante principal
      description: Seta identificador como variante principal.
      operationId: Produto_AtualizarProdutoVariantePrincipalIdByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      responses:
        "200":
          description: Produto variante principal setado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/situacao:
    put:
      tags:
      - Produto
      summary: Seta status ativo/inativo do produto variante
      description: Seta status do produto variante como ativo ou inativo.
      operationId: Produto_AtualizarProdutoVarianteStatusByidentificadortipoIdentificadorsituacao
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: Define se o produto variante informado será ativo ou inativo.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Situacao'
          text/json:
            schema:
              $ref: '#/components/schemas/Situacao'
          text/html:
            schema:
              $ref: '#/components/schemas/Situacao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Situacao'
          text/xml:
            schema:
              $ref: '#/components/schemas/Situacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Situacao'
        required: true
      responses:
        "200":
          description: Status do Produto variante atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: situacao
  /produtos/{identificador}/precos:
    get:
      tags:
      - Produto
      summary: "Retorna todos os preços referente ao produto variante, incluindo os\
        \ preços de tabela de preço."
      operationId: Produto_GetProdutoVariantePrecosByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      responses:
        "200":
          description: Preços do produto variante informado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePrecos'
            text/json:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePrecos'
            text/html:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePrecos'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePrecos'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProdutoVariantePrecos'
        "404":
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/seo:
    get:
      tags:
      - Produto
      summary: Busca o SEO de um produto específico.
      operationId: Produto_GetSEOByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Identificador do produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Tipo de identificador
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoId
          - ProdutoVarianteId
      responses:
        "200":
          description: SEO do produto informado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdutoSeo'
            text/json:
              schema:
                $ref: '#/components/schemas/ProdutoSeo'
            text/html:
              schema:
                $ref: '#/components/schemas/ProdutoSeo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProdutoSeo'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProdutoSeo'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Produto
      summary: Atualiza um SEO de um produto específico.
      operationId: Produto_PutSEOByidentificadortipoIdentificadormodel
      parameters:
      - name: identificador
        in: path
        description: Identificador do produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Tipo de identificador
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoId
          - ProdutoVarianteId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
        required: true
      responses:
        "200":
          description: "Status da operação, se realizado com sucesso (true) ou nã\
            o (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
    post:
      tags:
      - Produto
      summary: Insere um SEO para um produto específico.
      operationId: Produto_PostSEOByidentificadortipoIdentificadormodel
      parameters:
      - name: identificador
        in: path
        description: Identificador do produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Tipo de identificador
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoId
          - ProdutoVarianteId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoPost'
        required: true
      responses:
        "200":
          description: "Status da operação, se realizado com sucesso (true) ou nã\
            o (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
    delete:
      tags:
      - Produto
      summary: Deleta o SEO de um produto específico.
      operationId: Produto_DeleteSEOByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Identificador do produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Tipo de identificador
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoId
          - ProdutoVarianteId
      responses:
        "200":
          description: "Status da operação, se realizado com sucesso (true) ou nã\
            o (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtos/{identificador}/seo/metaTag:
    get:
      tags:
      - Produto
      summary: Busca os metatags de um produto específico.
      operationId: Produto_GetSEOMetaTagByidentificadortipoIdentificador
      parameters:
      - name: identificador
        in: path
        description: Identificador do produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Tipo de identificador
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoId
          - ProdutoVarianteId
      responses:
        "200":
          description: Lista de Metatags do produto informado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoSeoMetatag'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoSeoMetatag'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoSeoMetatag'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoSeoMetatag'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoSeoMetatag'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Produto
      summary: Insere um ou mais metatags para um produto.
      operationId: Produto_PostSEOMetaTagByidentificadortipoIdentificadormodel
      parameters:
      - name: identificador
        in: path
        description: Identificador do produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Tipo de identificador
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoId
          - ProdutoVarianteId
      requestBody:
        description: Lista de metatags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.MetatagsPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.MetatagsPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.MetatagsPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.MetatagsPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.MetatagsPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.MetatagsPost'
        required: true
      responses:
        "200":
          description: "Status da operação, se realizado com sucesso (true) ou nã\
            o (false)"
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: model
  /produtoavaliacao:
    get:
      tags:
      - ProdutoAvaliacao
      summary: Retorna todas as avaliações dos produtos variantes da loja
      operationId: ProdutoAvaliacao_GetBystatuspaginaquantidadeRegistros
      parameters:
      - name: status
        in: query
        description: "Referente ao status que libera a visualização da avaliação no\
          \ site = ['Pendente', 'NaoAprovado', 'Aprovado']"
        schema:
          type: string
          enum:
          - Pendente
          - NaoAprovado
          - Aprovado
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de avaliações de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /produtoavaliacao/{produtoAvaliacaoId}/status:
    put:
      tags:
      - ProdutoAvaliacao
      summary: Atualiza o status de uma avaliação de um produto variante
      operationId: ProdutoAvaliacao_PutByprodutoAvaliacaoIdprodutoAvaliacao
      parameters:
      - name: produtoAvaliacaoId
        in: path
        description: Identificador de uma Avaliação de um produto variante
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoPut'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoPut'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoPut'
        required: true
      responses:
        "200":
          description: Avaliação atualizada
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtoAvaliacao
  /produtoavaliacao/{identificador}:
    post:
      tags:
      - ProdutoAvaliacao
      summary: Insere uma avaliação para um produto variante
      operationId: ProdutoAvaliacao_PostByidentificadortipoIdentificadorprodutoAvaliacao
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o produto
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um sku ou um id interno
          da fstore.
        required: true
        schema:
          type: string
          enum:
          - Sku
          - ProdutoVarianteId
      requestBody:
        description: Objeto que contém os dados da avaliação do produto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacao'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacao'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacao'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacao'
        required: true
      responses:
        "200":
          description: Avaliação inserida
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtoAvaliacao
  /promocoes:
    get:
      tags:
      - Promocoes
      summary: Retorna uma lista de promocoes
      operationId: Promocoes_GetPromocoesBybuscadataIniciodataTerminotemCupomtemMultiplosCuponsativopodeAcumularcondicoesacoesordenaColunaordenaPorpaginalimit
      parameters:
      - name: busca
        in: query
        description: "Esse campo realiza a busca nos campos : PromocaoId, Nome e nome\
          \ dos Cupons"
        schema:
          type: string
      - name: dataInicio
        in: query
        description: Data de inicio da promocao
        schema:
          type: string
          format: date-time
      - name: dataTermino
        in: query
        description: Data do termino da promocao
        schema:
          type: string
          format: date-time
      - name: temCupom
        in: query
        description: Filtra as promoções que possuem ou não cupons
        schema:
          type: boolean
      - name: temMultiplosCupons
        in: query
        description: Filtra as promoções que possuem múltiplos cupons ou cupom único
        schema:
          type: boolean
      - name: ativo
        in: query
        description: Status da promoção
        schema:
          type: boolean
      - name: podeAcumular
        in: query
        description: Filtra promoções que podem ou não acumular
        schema:
          type: boolean
      - name: condicoes
        in: query
        description: Filtra promoções que possuem vinculo com as Condições passando
          uma lista de ids de condições
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: acoes
        in: query
        description: Filtra promoções que possuem vinculo com as Ações passando uma
          lista de ids  de ações
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: ordenaColuna
        in: query
        description: Nome da Coluna que deseja ordenar.
        schema:
          type: string
          enum:
          - Ativo
          - DataInicio
          - DataTermino
          - Nome
          - Ordem
      - name: ordenaPor
        in: query
        description: tipo de ordenação
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: pagina
        in: query
        description: numero da pagina
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Limite de registro por página
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de promocoes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObterPromocoesDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ObterPromocoesDTO'
            text/html:
              schema:
                $ref: '#/components/schemas/ObterPromocoesDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObterPromocoesDTO'
            text/xml:
              schema:
                $ref: '#/components/schemas/ObterPromocoesDTO'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /promocoes/{promocaoId}/cupons:
    put:
      tags:
      - Promocoes
      summary: Realiza o vinculo de cupons a uma promoção
      operationId: Promocoes_PutVincularCuponsBypromocaoIdrequest
      parameters:
      - name: promocaoId
        in: path
        description: Identificador da Promoção
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: objeto de dados a serem alterados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VincularCuponsDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/VincularCuponsDTO'
          text/html:
            schema:
              $ref: '#/components/schemas/VincularCuponsDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/VincularCuponsDTO'
          text/xml:
            schema:
              $ref: '#/components/schemas/VincularCuponsDTO'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VincularCuponsDTO'
        required: true
      responses:
        "200":
          description: Vincular Cupons a uma Promocão
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: request
  /promocoes/{promocaoId}:
    get:
      tags:
      - Promocoes
      summary: Retorna uma promoção completa pelo Id
      operationId: Promocoes_GetPromocaoCompletaPorIdBypromocaoId
      parameters:
      - name: promocaoId
        in: path
        description: Identificador da Promoção
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: retorna uma promoção completa pelo id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromocaoBaseDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/PromocaoBaseDTO'
            text/html:
              schema:
                $ref: '#/components/schemas/PromocaoBaseDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/PromocaoBaseDTO'
            text/xml:
              schema:
                $ref: '#/components/schemas/PromocaoBaseDTO'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /regionalizacao/{regiaoId}:
    get:
      tags:
      - Regionalizacao
      summary: Retorna uma região específica
      operationId: Regionalizacao_GetRegiaoByIdAsyncByregiaoId
      parameters:
      - name: regiaoId
        in: path
        description: Id da região
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Região
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regiao'
            text/json:
              schema:
                $ref: '#/components/schemas/Regiao'
            text/html:
              schema:
                $ref: '#/components/schemas/Regiao'
            application/xml:
              schema:
                $ref: '#/components/schemas/Regiao'
            text/xml:
              schema:
                $ref: '#/components/schemas/Regiao'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Regionalizacao
      summary: Atualiza uma região específica
      operationId: Regionalizacao_PutRegiaoAsyncByregiaoIdregionalizacaoDTO
      parameters:
      - name: regiaoId
        in: path
        description: Id da região
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados da região
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPutDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPutDTO'
          text/html:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPutDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPutDTO'
          text/xml:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPutDTO'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPutDTO'
        required: true
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: regionalizacaoDTO
  /regionalizacao/regioes:
    get:
      tags:
      - Regionalizacao
      summary: Retorna uma lista de regiões
      operationId: Regionalizacao_GetRegioesAsyncBybuscaativoarquivadopossuiRegiaoGoogleordenaColunadirecaoOrdenacaolimitepagina
      parameters:
      - name: busca
        in: query
        description: Este campo permite que o usuário envie um termo de busca.
        schema:
          type: string
      - name: ativo
        in: query
        description: Irá filtrar se é para retornar apenas as regiões ativas ou não.
        schema:
          type: boolean
      - name: arquivado
        in: query
        description: Irá filtrar se é para retornar apenas as regiões arquivadas ou
          não.
        schema:
          type: boolean
      - name: possuiRegiaoGoogle
        in: query
        description: Irá filtrar se é para retornar apenas regiões que possuam região
          google vinculada ou não.
        schema:
          type: boolean
      - name: ordenaColuna
        in: query
        description: Receber o nome do campo que deve ser ordenado.
        schema:
          type: string
          enum:
          - Ordem
          - Nome
          - Data
          - Regiao
          - TabelaPreco
          - Priorizacao
          - TipoRegiao
      - name: direcaoOrdenacao
        in: query
        description: Ordena em Decrescente ou Crescente a coluna que foi informada
          no campo anterior.
        schema:
          type: boolean
      - name: limite
        in: query
        description: "Limite de registros por requisição (Padrão: 50)"
        schema:
          type: integer
          format: int32
      - name: pagina
        in: query
        description: "Número da página na paginação dos registros da requisição (Padrã\
          o: 1)"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Regiões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegiaoPaginacao1'
            text/json:
              schema:
                $ref: '#/components/schemas/RegiaoPaginacao1'
            text/html:
              schema:
                $ref: '#/components/schemas/RegiaoPaginacao1'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegiaoPaginacao1'
            text/xml:
              schema:
                $ref: '#/components/schemas/RegiaoPaginacao1'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /regionalizacao/regiao:
    post:
      tags:
      - Regionalizacao
      summary: Insere uma região
      operationId: Regionalizacao_PostRegiaoAsyncByregionalizacaoDTO
      requestBody:
        description: Dados da região
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPostDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPostDTO'
          text/html:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPostDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPostDTO'
          text/xml:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPostDTO'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegionalizacaoPostDTO'
        required: true
      responses:
        "200":
          description: Id da região
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionalizacaoPostResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RegionalizacaoPostResult'
            text/html:
              schema:
                $ref: '#/components/schemas/RegionalizacaoPostResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegionalizacaoPostResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionalizacaoPostResult'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: regionalizacaoDTO
  /regionalizacao/{regiaoId}/arquivar:
    put:
      tags:
      - Regionalizacao
      summary: Arquiva uma região
      operationId: Regionalizacao_ArquivarRegiaoByregiaoIdregionalizacaoDTO
      parameters:
      - name: regiaoId
        in: path
        description: Id da região
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados da região
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegiaoArquivar'
          text/json:
            schema:
              $ref: '#/components/schemas/RegiaoArquivar'
          text/html:
            schema:
              $ref: '#/components/schemas/RegiaoArquivar'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegiaoArquivar'
          text/xml:
            schema:
              $ref: '#/components/schemas/RegiaoArquivar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegiaoArquivar'
        required: true
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegiaoArquivarResultado'
            text/json:
              schema:
                $ref: '#/components/schemas/RegiaoArquivarResultado'
            text/html:
              schema:
                $ref: '#/components/schemas/RegiaoArquivarResultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegiaoArquivarResultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/RegiaoArquivarResultado'
        "422":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: regionalizacaoDTO
  /resellers:
    get:
      tags:
      - Reseller
      summary: Retorna todos os Sellers da loja
      operationId: Reseller_Get
      responses:
        "200":
          description: Lista de resellers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Reseller'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Reseller'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Reseller
      summary: Atualiza um novo Seller no marketplace
      operationId: Reseller_PutByresellerIdreseller
      parameters:
      - name: resellerId
        in: query
        description: Valor único utilizado para identificar o seller
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados do seller
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ResellerPut'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ResellerPut'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ResellerPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPut.ResellerPut'
        required: true
      responses:
        "200":
          description: Lista de resellers
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: reseller
    post:
      tags:
      - Reseller
      summary: Insere um novo Seller no marketplace
      operationId: Reseller_PostByreseller
      requestBody:
        description: Dados do seller
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ResellerPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ResellerPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ResellerPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.ResellerPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Lista de resellers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoPost.ResellerPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoPost.ResellerPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoPost.ResellerPostResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoPost.ResellerPostResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoPost.ResellerPostResponse'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: reseller
  /resellers/token:
    get:
      tags:
      - Reseller
      summary: Retorna um Seller específico da loja
      operationId: Reseller_GetByToken
      responses:
        "200":
          description: Reseller específico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /resellers/{resellerId}:
    get:
      tags:
      - Reseller
      summary: Retorna um Seller específico da loja
      operationId: Reseller_GetByIdByresellerId
      parameters:
      - name: resellerId
        in: path
        description: Valor único utilizado para identificar o seller
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Reseller específico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.Reseller'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /resellers/produtos/{identificador}:
    get:
      tags:
      - Reseller
      summary: Retorna produtos por Seller
      operationId: Reseller_GetProductsByResellerByidentificadortipoIdentificadorpaginaquantidadeRegistrossomenteValidoscamposAdicionais
      parameters:
      - name: identificador
        in: path
        description: Valor único utilizado para identificar o reseller
        required: true
        schema:
          type: string
      - name: tipoIdentificador
        in: query
        description: Define se o identificador informado é um id interno da fstore
          ou a Razão social do Reseller.
        required: true
        schema:
          type: string
          enum:
          - ResellerId
          - RazaoSocial
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: somenteValidos
        in: query
        description: "Se deve retornar apenas produtos válidos (padrão: false)"
        schema:
          type: boolean
      - name: camposAdicionais
        in: query
        description: Campos adicionais que se selecionados retornaram junto com o
          produto
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Atacado
            - Estoque
            - Atributo
            - Informacao
            - TabelaPreco
      responses:
        "200":
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.Produto'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /resellers/{resellerId}/autonomia:
    put:
      tags:
      - Reseller
      summary: Atualiza a autonomia de um Seller
      operationId: Reseller_PutAutonomiaByresellerIdstatusAutonomia
      parameters:
      - name: resellerId
        in: path
        description: Valor único utilizado para identificar o seller
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Status da autonomia do seller
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/xml:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
        required: true
      responses:
        "200":
          description: Atualiza a autonomia de um reseller
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: statusAutonomia
  /resellers/{resellerId}/status:
    put:
      tags:
      - Reseller
      summary: Ativa ou desativa um Seller
      operationId: Reseller_PutStatusByresellerIdstatusReseller
      parameters:
      - name: resellerId
        in: path
        description: Valor único utilizado para identificar o seller
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Status do seller (ativo / inativo)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/xml:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
        required: true
      responses:
        "200":
          description: Atualiza o status de um reseller
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: statusReseller
  /resellers/{resellerId}/ativacaoAutomaticaProdutos:
    put:
      tags:
      - Reseller
      summary: Atualiza a ativação automática de produtos de um Seller
      operationId: Reseller_PutAtivacaoAutomaticaProdutosByresellerIdstatusAtivacaoAutomaticaProduto
      parameters:
      - name: resellerId
        in: path
        description: Valor único utilizado para identificar o seller
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Status da ativação automática de produtos
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          text/xml:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResellerStatus'
        required: true
      responses:
        "200":
          description: Lista de resellers
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: statusAtivacaoAutomaticaProduto
  /situacoesPedido:
    get:
      tags:
      - SituacaoPedido
      summary: Retorna todas as situações de pedido da loja
      operationId: SituacaoPedido_Get
      responses:
        "200":
          description: Lista de situações de pedido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SituacaoPedido'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SituacaoPedido'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SituacaoPedido'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SituacaoPedido'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SituacaoPedido'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /tabelaPrecos:
    get:
      tags:
      - TabelaPreco
      summary: Retorna todas as tabelas de preços
      operationId: TabelaPreco_Get
      responses:
        "200":
          description: Lista de tabelas de preços
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPreco'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPreco'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPreco'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPreco'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPreco'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - TabelaPreco
      summary: Insere uma nova tabela de preços.
      operationId: TabelaPreco_PostBytabelaPreco
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id da tabela de preços gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: tabelaPreco
  /tabelaPrecos/{tabelaPrecoId}:
    get:
      tags:
      - TabelaPreco
      summary: Retorna uma tabela de preços
      operationId: TabelaPreco_GetPorIdBytabelaPrecoId
      parameters:
      - name: tabelaPrecoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Tabela de preços específica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TabelaPreco'
            text/json:
              schema:
                $ref: '#/components/schemas/TabelaPreco'
            text/html:
              schema:
                $ref: '#/components/schemas/TabelaPreco'
            application/xml:
              schema:
                $ref: '#/components/schemas/TabelaPreco'
            text/xml:
              schema:
                $ref: '#/components/schemas/TabelaPreco'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - TabelaPreco
      summary: Atualiza uma tabela de preços
      operationId: TabelaPreco_PutBytabelaPrecoIdtabelaPreco
      parameters:
      - name: tabelaPrecoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TabelaPrecoPost'
        required: true
      responses:
        "200":
          description: Tabela de preços atualizada com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: tabelaPreco
    delete:
      tags:
      - TabelaPreco
      summary: Exclui uma tabela de preços
      operationId: TabelaPreco_DeleteBytabelaPrecoId
      parameters:
      - name: tabelaPrecoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Tabela de preços excluída com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /tabelaPrecos/{tabelaPrecoId}/produtos:
    get:
      tags:
      - TabelaPreco
      summary: Retorna os produtos de uma tabela de preços
      operationId: TabelaPreco_GetProdutosBytabelaPrecoIdpaginaquantidadeRegistros
      parameters:
      - name: tabelaPrecoId
        in: path
        description: Id da tabela de preço
        required: true
        schema:
          type: integer
          format: int64
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de registros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Lista de produtos de uma tabela de preços
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPrecoProdutoVariante'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPrecoProdutoVariante'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPrecoProdutoVariante'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPrecoProdutoVariante'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TabelaPrecoProdutoVariante'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - TabelaPreco
      summary: Atualiza uma lista de produto variantes em uma tabela de preços
      operationId: TabelaPreco_PutProdutoTabelaPrecoBytabelaPrecoIdtabelaPreco
      parameters:
      - name: tabelaPrecoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
        required: true
      responses:
        "200":
          description: Lista com o retorno do processamento dos produtos enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
            text/json:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
            text/html:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
            application/xml:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
            text/xml:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: tabelaPreco
    post:
      tags:
      - TabelaPreco
      summary: Inseri uma lista de produto variantes em uma tabela de preços
      operationId: TabelaPreco_PostProdutoTabelaPrecoBytabelaPrecoIdtabelaPreco
      parameters:
      - name: tabelaPrecoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Lista com o retorno do processamento dos produtos enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
            text/json:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
            text/html:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
            application/xml:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
            text/xml:
              schema:
                $ref: '#/components/schemas/TabelaPrecoProdutoVariantePostRetorno'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: tabelaPreco
  /tabelaPrecos/{tabelaPrecoId}/{sku}:
    delete:
      tags:
      - TabelaPreco
      summary: Remove um produto de uma tabela de preço
      operationId: TabelaPreco_DeleteProdutoTabelaPrecoBytabelaPrecoIdsku
      parameters:
      - name: tabelaPrecoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sku
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Remove um produto de uma tabela de preço
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /templates:
    get:
      tags:
      - Template
      operationId: Template_GetTemplates
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /tiposEvento/{tipoEventoId}/produtos:
    get:
      tags:
      - TipoEvento
      summary: Busca os produtos sugeridos para a lista de evento.
      operationId: TipoEvento_BuscarProdutosSugeridosPorTipoEventoIdBytipoEventoId
      parameters:
      - name: tipoEventoId
        in: path
        description: Identificador do tipo de evento.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Lista de produtos variantes vinculados aos tipo de evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoEventoSugestaoProduto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoEventoSugestaoProduto'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoEventoSugestaoProduto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoEventoSugestaoProduto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoEventoSugestaoProduto'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - TipoEvento
      summary: Atualiza os produtos sugeridos de um tipo de evento.
      operationId: TipoEvento_AtualizarSugestaoProdutosDeTipoEventoBytipoEventoIdprodutosVariantes
      parameters:
      - name: tipoEventoId
        in: path
        description: Identificador do tipo de evento.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Identificadores dos produtos variantes a serem vinculados ao
          tipo evento desejado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
        required: true
      responses:
        "200":
          description: "Resposta informando se foi atualizado, true, ou se não foi\
            \ atualizado, false."
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: produtosVariantes
    post:
      tags:
      - TipoEvento
      summary: Vincula um ou mais produtos como sugestão para um tipo de evento.
      operationId: TipoEvento_InserirSugestaoDeProdutoParaTipoEventoBytipoEventoIdsugestaoProdutos
      parameters:
      - name: tipoEventoId
        in: path
        description: Identificador do tipo de evento.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Identificadores dos produtos variantes a serem vinculados ao
          tipo evento desejado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento'
        required: true
      responses:
        "200":
          description: Lista de resposta para cada produto vinculado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultadoInsercaoSugestaoProdutoTipoEvento'
            text/json:
              schema:
                $ref: '#/components/schemas/ResultadoInsercaoSugestaoProdutoTipoEvento'
            text/html:
              schema:
                $ref: '#/components/schemas/ResultadoInsercaoSugestaoProdutoTipoEvento'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultadoInsercaoSugestaoProdutoTipoEvento'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResultadoInsercaoSugestaoProdutoTipoEvento'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: sugestaoProdutos
  /tiposEvento/{tipoEventoId}/produto/{produtoVarianteId}:
    delete:
      tags:
      - TipoEvento
      summary: Deleta um produto da lista de sugestões de produtos de um tipo de evento.
      operationId: TipoEvento_DesvincularSugestaoProdutoDeTipoEventoBytipoEventoIdprodutoVarianteId
      parameters:
      - name: tipoEventoId
        in: path
        description: Identificador do tipo de evento.
        required: true
        schema:
          type: integer
          format: int64
      - name: produtoVarianteId
        in: path
        description: Identificador do variante do produto.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Resposta informando se foi deletado, true, ou se não foi deletado,\
            \ false."
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /tiposEvento/{tipoEventoId}:
    get:
      tags:
      - TipoEvento
      summary: Retorna um tipo de evento especifico.
      operationId: TipoEvento_BuscarTipoEventoPorIdBytipoEventoId
      parameters:
      - name: tipoEventoId
        in: path
        description: Identificador do tipo de evento.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Tipo evento buscado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
            text/json:
              schema:
                $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
            text/html:
              schema:
                $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
            text/xml:
              schema:
                $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - TipoEvento
      summary: Atualiza o tipo evento.
      operationId: TipoEvento_AtualizarTipoEventoBytipoEventoIdtipoEvento
      parameters:
      - name: tipoEventoId
        in: path
        description: Identificador do tipo de evento.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Tipo evento com os novos dados.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
        required: true
      responses:
        "200":
          description: "Resposta informando se foi atualizado, true, ou se não foi\
            \ atualizado, false."
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: tipoEvento
  /tiposEvento:
    get:
      tags:
      - TipoEvento
      summary: Retorna todos os tipos de eventos
      operationId: TipoEvento_BuscarTiposEventosByativodisponivelnome
      parameters:
      - name: ativo
        in: query
        description: Filtro de busca
        schema:
          type: boolean
      - name: disponivel
        in: query
        description: Filtro de busca
        schema:
          type: boolean
      - name: nome
        in: query
        description: Filtro de busca
        schema:
          type: string
      responses:
        "200":
          description: Lista de tipos de evento.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - TipoEvento
      summary: Insere um novo tipo de evento
      operationId: TipoEvento_InserirTipoEventoBytipoEvento
      requestBody:
        description: Tipo evento a ser inserido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.TipoEvento.TipoEventoPost'
        required: true
      responses:
        "200":
          description: Identificador do tipo evento inserido
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: tipoEvento
  /tiposEvento/{tipoEventoId}/AlterarStatus:
    put:
      tags:
      - TipoEvento
      summary: "Atualiza o status do tipo de evento, ativando-o ou inativando-o."
      operationId: TipoEvento_AtualizarStatusTipoEventoBytipoEventoId
      parameters:
      - name: tipoEventoId
        in: path
        description: Identificador do tipo de evento.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Resposta informando se foi alterado o status, true, ou se\
            \ não foi alterado o status, false."
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios:
    get:
      tags:
      - Usuario
      summary: Retorna todos os usuários
      operationId: Usuario_GetBypaginaquantidadeRegistrosdataInicialdataFinalenumTipoFiltroDataaprovado
      parameters:
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: quantidadeRegistros
        in: query
        description: "Quantidade de resgistros que deverão retornar (max: 50)"
        schema:
          type: integer
          format: int32
      - name: dataInicial
        in: query
        description: Data inicial da data de criação do usuario que deverão retonar
          (aaaa-mm-dd hh:mm:ss)
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final da data de criação do usuario que deverão retonar
          (aaaa-mm-dd hh:mm:ss)
        schema:
          type: string
          format: date-time
      - name: enumTipoFiltroData
        in: query
        description: Filtro do tipo de data
        schema:
          type: string
          enum:
          - DataAlteracao
          - DataCriacao
      - name: aprovado
        in: query
        description: Situação do usuário
        schema:
          type: boolean
      responses:
        "200":
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Usuario
      summary: Insere um novo usuário.
      operationId: Usuario_PostByusuario
      requestBody:
        description: Dados do novo usuário que está sendo inserido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do usuário gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: usuario
  /usuarios/email/{email}:
    get:
      tags:
      - Usuario
      summary: Retorna um usuário específico pelo e-mail
      operationId: Usuario_GetPorEmailByemail
      parameters:
      - name: email
        in: path
        description: E-mail do usuário.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/html:
              schema:
                $ref: '#/components/schemas/Usuario'
            application/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/usuarioId/{usuarioId}:
    get:
      tags:
      - Usuario
      summary: Retorna um usuário específico pelo id
      operationId: Usuario_GetPorUsuarioIdByusuarioId
      parameters:
      - name: usuarioId
        in: path
        description: Identificador do usuário.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/html:
              schema:
                $ref: '#/components/schemas/Usuario'
            application/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/cpf/{cpf}:
    get:
      tags:
      - Usuario
      summary: Retorna um usuário específico pelo cpf
      operationId: Usuario_GetPorCPFBycpf
      parameters:
      - name: cpf
        in: path
        description: "CPF do usuário, apenas números."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/html:
              schema:
                $ref: '#/components/schemas/Usuario'
            application/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/cnpj/{cnpj}:
    get:
      tags:
      - Usuario
      summary: Retorna um usuário específico pelo cnpj
      operationId: Usuario_GetPorCNPJBycnpj
      parameters:
      - name: cnpj
        in: path
        description: cnpj do cliente somente números
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/html:
              schema:
                $ref: '#/components/schemas/Usuario'
            application/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
            text/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/{usuarioId}:
    put:
      tags:
      - Usuario
      summary: Atualiza um usuário pelo id
      operationId: Usuario_PutByusuarioIdusuario
      parameters:
      - name: usuarioId
        in: path
        description: Identificador do usuário que será realizado a atualização.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados para atualizar o usuário.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          text/json:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          text/html:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
        required: true
      responses:
        "200":
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: usuario
  /usuarios1/{email}:
    put:
      tags:
      - Usuario
      summary: Atualiza um usuário pelo email
      operationId: Usuario_PutByemailusuario
      parameters:
      - name: email
        in: path
        description: E-mail do usuário.
        required: true
        schema:
          type: string
      requestBody:
        description: Dados para atualizar o usuário.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          text/json:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          text/html:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsuarioPost'
        required: true
      responses:
        "200":
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: usuario
  /usuarios/informacoescadastrais:
    put:
      tags:
      - Usuario
      summary: Atualiza as informações cadastrais de um ou mais usuários
      description: <strong>Limite de 50 usuários e 10 informações cadastrais por requisição</strong>
      operationId: Usuario_PutBytipoIdentificadorusuarios
      parameters:
      - name: tipoIdentificador
        in: query
        description: Tipo do identificador
        required: true
        schema:
          type: string
          enum:
          - UsuarioId
          - Email
      requestBody:
        description: Usuários com informações cadastrais a serem atualizados.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastralEmLote'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastralEmLote'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastralEmLote'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastralEmLote'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastralEmLote'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastralEmLote'
        required: true
      responses:
        "200":
          description: Operação realizada com ou sem sucesso para os usuários
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoUsuarioInformacaoCadastral'
            text/json:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoUsuarioInformacaoCadastral'
            text/html:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoUsuarioInformacaoCadastral'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoUsuarioInformacaoCadastral'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAtualizacaoUsuarioInformacaoCadastral'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: usuarios
  /usuarios/{email}/enderecos:
    get:
      tags:
      - Usuario
      summary: Retorna uma lista de endereços de um usuário pelo e-mail do usuário
      operationId: Usuario_GetEnderecosByemail
      parameters:
      - name: email
        in: path
        description: Email do usuário.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Retorna usuário encontrado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Usuario
      summary: Insere um endereço para um usuário pelo e-mail
      operationId: Usuario_PostEnderecoByemailendereco
      parameters:
      - name: email
        in: path
        description: E-mail do usuário.
        required: true
        schema:
          type: string
      requestBody:
        description: Dados de endereço do usuário.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
        required: true
      responses:
        "200":
          description: Endereço de um usuário encontrado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: endereco
  /usuarios1/{usuarioId}/enderecos:
    get:
      tags:
      - Usuario
      summary: Retorna uma lista de endereços de um usuário pelo id do usuário
      operationId: Usuario_GetEnderecosByusuarioId
      parameters:
      - name: usuarioId
        in: path
        description: Identificador do usuário.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Retorna usuário encontrado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endereco'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Usuario
      summary: Insere um endereço para um usuário pelo id do usuário
      operationId: Usuario_PostEnderecoByusuarioIdendereco
      parameters:
      - name: usuarioId
        in: path
        description: Identificador do usuário.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados de endereço do usuário.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
        required: true
      responses:
        "200":
          description: Endereço cadastrado com sucesso
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: endereco
  /usuarios/{email}/enderecos/{enderecoId}:
    put:
      tags:
      - Usuario
      summary: Atualiza um endereço de um usuário pelo e-mail do usuário
      operationId: Usuario_PutEnderecoByemailenderecoIdendereco
      parameters:
      - name: email
        in: path
        description: E-mail do usuário.
        required: true
        schema:
          type: string
      - name: enderecoId
        in: path
        description: Identificador do endereço do usuário a ser atualizado.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados do endereço para atualização.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
        required: true
      responses:
        "200":
          description: Endereço de um usuário encontrado
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: endereco
  /usuarios1/{usuarioId}/enderecos/{enderecoId}:
    put:
      tags:
      - Usuario
      summary: Atualiza um endereço de um usuário pelo id do usuário
      operationId: Usuario_PutEnderecoByusuarioIdenderecoIdendereco
      parameters:
      - name: usuarioId
        in: path
        description: Identificador do usuário.
        required: true
        schema:
          type: integer
          format: int64
      - name: enderecoId
        in: path
        description: Identificador do endereço do usuário a ser atualizado.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados do endereço para atualização.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
        required: true
      responses:
        "200":
          description: Endereço de um usuário atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: endereco
  /usuarios/{usuarioId}/enderecos/{enderecoId}/ativar:
    put:
      tags:
      - Usuario
      summary: Ativa ou desativa um endereço de um usuário com base no id do usuário
      operationId: Usuario_PutEnderecoAtivarByUsuarioIdByusuarioIdenderecoIdenderecoStatus
      parameters:
      - name: usuarioId
        in: path
        description: Id do usuário que se deseja alterar o status so endereço
        required: true
        schema:
          type: integer
          format: int64
      - name: enderecoId
        in: path
        description: Id do endereço que se deseja alterar o status
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Status do endereço
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          text/xml:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
        required: true
      responses:
        "200":
          description: Status endereço de um usuário atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: enderecoStatus
  /usuario1/{email}/enderecos/{enderecoId}/ativar:
    put:
      tags:
      - Usuario
      summary: Ativa ou desativa um endereço de um usuário com base no e-mail do usuário
      operationId: Usuario_PutEnderecoAtivarByUsuarioEmailByemailenderecoIdenderecoStatus
      parameters:
      - name: email
        in: path
        description: E-mail do usuário que se deseja alterar o status so endereço
        required: true
        schema:
          type: string
      - name: enderecoId
        in: path
        description: Id do endereço que se deseja alterar o status
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Status do endereço
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          text/xml:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnderecoStatus'
        required: true
      responses:
        "200":
          description: Status endereço de um usuário atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: enderecoStatus
  /usuarios/{email}/parceiros:
    get:
      tags:
      - Usuario
      summary: Retorna uma lista de vínculos entre usuário e parceiro
      operationId: Usuario_GetParceiroByUsuarioByemail
      parameters:
      - name: email
        in: path
        description: E-mail do usuário
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Lista de vínculos entre usuário e parceiro
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/{email}/parceiro:
    put:
      tags:
      - Usuario
      summary: Atualiza o vínculo entre usuário e parceiro
      operationId: Usuario_AtualizarVinculoParceiroByemailparceiro
      parameters:
      - name: email
        in: path
        description: E-mail do usuário que se deseja vincular
        required: true
        schema:
          type: string
      requestBody:
        description: Dados para vinculo com parceiro
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Put'
          text/json:
            schema:
              $ref: '#/components/schemas/Put'
          text/html:
            schema:
              $ref: '#/components/schemas/Put'
          application/xml:
            schema:
              $ref: '#/components/schemas/Put'
          text/xml:
            schema:
              $ref: '#/components/schemas/Put'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Put'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Usuário vinculado com o parceiro com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: parceiro
    post:
      tags:
      - Usuario
      summary: Adiciona um vínculo entre usuário e parceiro
      operationId: Usuario_VincularParceiroByemailparceiro
      parameters:
      - name: email
        in: path
        description: E-mail do usuário que se deseja vincular
        required: true
        schema:
          type: string
      requestBody:
        description: Dados para vinculo com parceiro
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          text/json:
            schema:
              $ref: '#/components/schemas/Post'
          text/html:
            schema:
              $ref: '#/components/schemas/Post'
          application/xml:
            schema:
              $ref: '#/components/schemas/Post'
          text/xml:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Usuário vinculado com o parceiro com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: parceiro
  /usuarios/limiteCredito:
    get:
      tags:
      - Usuario
      summary: Retorna uma lista de usuários com o limite de credito de cada um
      operationId: Usuario_GetLimiteCredito
      responses:
        "200":
          description: Limite de crédito que estão vinculados aos usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioLimiteCredito'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioLimiteCredito'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/limiteCreditoPorUsuarioId/{usuarioId}:
    get:
      tags:
      - Usuario
      summary: Retorna o limite de crédito de um usuário específico
      operationId: Usuario_SelectLimiteCreditoByUsuarioIdByusuarioId
      parameters:
      - name: usuarioId
        in: path
        description: Identificador do usuário.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Limite de crédito de um usuário específico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/json:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/html:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
            application/xml:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/xml:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/limiteCreditoPorEmail/{email}:
    get:
      tags:
      - Usuario
      summary: Retorna o limite de crédito de um usuário específico
      operationId: Usuario_SelectLimiteCreditoByUsuarioByEmailByemail
      parameters:
      - name: email
        in: path
        description: E-mail do usuário.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Limite de crédito de um usuário específico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/json:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/html:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
            application/xml:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
            text/xml:
              schema:
                $ref: '#/components/schemas/UsuarioLimiteCredito'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/limiteCredito/{usuarioId}:
    put:
      tags:
      - Usuario
      summary: Atualiza o limite de crédito de um usuário
      operationId: Usuario_PutLimiteCreditoBycpf_cnpjusuarioIdvalor
      parameters:
      - name: cpf_cnpj
        in: query
        description: CPF ou CNPJ do usuário
        required: true
        schema:
          type: string
      - name: usuarioId
        in: path
        description: Identificador do usuário.
        required: true
        schema:
          type: integer
          format: int64
      - name: valor
        in: query
        description: Valor do limite de crédito.
        required: true
        schema:
          type: number
          format: double
      responses:
        "200":
          description: Atualizado o limite de crédito com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/newsletter:
    get:
      tags:
      - Usuario
      summary: Retorna lista de usuarios cadastrados/descadastrados na newsletter
      operationId: Usuario_GetUsuariosNewsletterByordenarPordataInicialdataFinalpaginastatusdoubleOptIn
      parameters:
      - name: ordenarPor
        in: query
        description: Tipo de ordenação
        required: true
        schema:
          type: string
          enum:
          - DataCadastro
          - DataAtualizacao
      - name: dataInicial
        in: query
        description: Data inicial dos cadastros que deverão retonar (aaaa-mm-dd hh:mm:ss)
        schema:
          type: string
          format: date-time
      - name: dataFinal
        in: query
        description: Data final dos cadastros que deverão retonar (aaaa-mm-dd hh:mm:ss)
        schema:
          type: string
          format: date-time
      - name: pagina
        in: query
        description: "Página da lista (padrão: 1)"
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        description: Status do usuario
        schema:
          type: boolean
      - name: doubleOptIn
        in: query
        description: DoubleOptIn aceito (verificar estado da configuração)
        schema:
          type: boolean
      responses:
        "200":
          description: Retorna lista de usuarios cadastrados/descadastrados na newsletter
            (50 por página)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioNewsletter'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioNewsletter'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioNewsletter'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioNewsletter'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioNewsletter'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/{email}/pedidos:
    get:
      tags:
      - Usuario
      summary: Retorna uma lista contendo o id dos pedidos de um usuário.
      operationId: Usuario_GetPedidosPorUsuarioByemail
      parameters:
      - name: email
        in: path
        description: E-mail do usuário cujos pedidos devem ser selecionados.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Retorna lista contendo os Id's dos pedidos do usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/documento/{documento}/pedidos:
    get:
      tags:
      - Usuario
      summary: Retorna uma lista contendo o id dos pedidos de um usuário.
      operationId: Usuario_GetPedidosPorDocumentoBydocumentotipoDocumento
      parameters:
      - name: documento
        in: path
        description: "Documento (CPF ou CNPJ) do usuário cujos pedidos devem ser selecionados.\
          \ Utilizar apenas números, sem caracteres especiais."
        required: true
        schema:
          type: string
      - name: tipoDocumento
        in: query
        description: Define se o documento informado é um CPF ou um CNPJ.
        required: true
        schema:
          type: string
          enum:
          - Cpf
          - Cnpj
      responses:
        "200":
          description: Retorna lista contendo os Id's dos pedidos do usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoHATEOAS'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/{email}/comunicacao:
    get:
      tags:
      - Usuario
      summary: Retorna se o usuário ativou o recebimento de newsletter
      operationId: Usuario_GetUsuarioComunicacaoByemail
      parameters:
      - name: email
        in: path
        description: E-mail do usuário cujos pedidos devem ser selecionados.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Retorna se o usuário ativou o recebimento de newsletter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioComunicacao'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioComunicacao'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioComunicacao'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioComunicacao'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioComunicacao'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Usuario
      summary: Atualiza a comunicação de um usuário via newsletter
      operationId: Usuario_PutUsuarioComunicacaoByemailusuarioComunicacao
      parameters:
      - name: email
        in: path
        description: E-mail do usuário cujos dados devem ser atualizados.
        required: true
        schema:
          type: string
      requestBody:
        description: Novo status da comunicação via newajuste realisletter.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioComunicacao'
          text/json:
            schema:
              $ref: '#/components/schemas/UsuarioComunicacao'
          text/html:
            schema:
              $ref: '#/components/schemas/UsuarioComunicacao'
          application/xml:
            schema:
              $ref: '#/components/schemas/UsuarioComunicacao'
          text/xml:
            schema:
              $ref: '#/components/schemas/UsuarioComunicacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsuarioComunicacao'
        required: true
      responses:
        "200":
          description: Retorna se a atualização ocorreu com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: usuarioComunicacao
  /usuarios/{usuarioId}/listaDesejos:
    get:
      tags:
      - Usuario
      summary: Retorna os dados da lista de desejos de um usuário
      operationId: Usuario_GetUsuarioListadesejosByusuarioId
      parameters:
      - name: usuarioId
        in: path
        description: Id do usuário.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Dados da lista de desejos de um usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.UsuarioListaDesejos'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.UsuarioListaDesejos'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.UsuarioListaDesejos'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.UsuarioListaDesejos'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NovoContratoGet.UsuarioListaDesejos'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/{email}/avatar:
    get:
      tags:
      - Usuario
      summary: Retorna a url do avatar de um usuário.
      operationId: Usuario_GetAvatarUsuarioByemail
      parameters:
      - name: email
        in: path
        description: E-mail do usuário
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Avatar do usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Usuario
      summary: Insere um novo avatar para o usuário.
      operationId: Usuario_PostAvatarUsuarioByemailavatarUsuario
      parameters:
      - name: email
        in: path
        description: E-mail do usuário
        required: true
        schema:
          type: string
      requestBody:
        description: Imagem a ser enviada para o usuário
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioImagemPost'
          text/json:
            schema:
              $ref: '#/components/schemas/UsuarioImagemPost'
          text/html:
            schema:
              $ref: '#/components/schemas/UsuarioImagemPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/UsuarioImagemPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/UsuarioImagemPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsuarioImagemPost'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Nome do arquivo gerado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
            text/json:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
            text/html:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
            application/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
            text/xml:
              schema:
                $ref: '#/components/schemas/NovoContratoGet.UsuarioAvatar'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: avatarUsuario
    delete:
      tags:
      - Usuario
      summary: Deleta um avatar de um usuário.
      operationId: Usuario_DeleteAvatarUsuarioByemail
      parameters:
      - name: email
        in: path
        description: E-mail do usuário
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Avatar deletado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/CadastroPersonalizado:
    post:
      tags:
      - Usuario
      summary: Insere um novo campo de cadastro personalizado
      operationId: Usuario_PostUsuarioCamposGrupoInformacaoCadastralBycamposGrupoInformacaoCadastral
      requestBody:
        description: Dados do novo campo que está sendo criado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral'
          text/json:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral'
          text/html:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral'
          application/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral'
          text/xml:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        "201":
          description: Id do campo de cadastro personalizado gerado
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: camposGrupoInformacaoCadastral
  /usuarios/camposcadastropersonalizado:
    get:
      tags:
      - Usuario
      summary: Retorna os campos de cadastro personalizado existentes.
      operationId: Usuario_GetCamposCadastroPersonalizado
      responses:
        "200":
          description: Campos de cadastro personalizado encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastral'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastral'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastral'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastral'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastral'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/camposcadastropersonalizado/{camposcadastropersonalizadoId}:
    put:
      tags:
      - Usuario
      summary: Atualiza um campo de cadastro personalizado pelo id
      operationId: Usuario_PutCampoCadastroPersonalizadoBycamposcadastropersonalizadoIdcampo
      parameters:
      - name: camposcadastropersonalizadoId
        in: path
        description: Identificador do campo.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados do campo.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastralPut'
          text/json:
            schema:
              $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastralPut'
          text/html:
            schema:
              $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastralPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastralPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastralPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsuarioCamposGrupoInformacaoCadastralPut'
        required: true
      responses:
        "200":
          description: Campo atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: campo
    delete:
      tags:
      - Usuario
      summary: Remove um campo de cadastro personalizado
      operationId: Usuario_ExcluirCampoPersnonalizadoBycamposcadastropersonalizadoId
      parameters:
      - name: camposcadastropersonalizadoId
        in: path
        description: Identificador do campo de cadastro personalizado.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Campo de cadastro personalizado excluido com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/valoresdefinidoscadastropersonalizado/{valoresDefinidosCampoGrupoInformacaoId}:
    put:
      tags:
      - Usuario
      summary: Atualiza um valor pré definido pelo id
      operationId: Usuario_PutValorPreDefinidoCadastroPersonalizadoByvaloresDefinidosCampoGrupoInformacaoIdvalor
      parameters:
      - name: valoresDefinidosCampoGrupoInformacaoId
        in: path
        description: Id dos valores definidos no campo grupo informação
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dados a serem atualizados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioValoresDefinidosCampoGrupoInformacaoPut'
          text/json:
            schema:
              $ref: '#/components/schemas/UsuarioValoresDefinidosCampoGrupoInformacaoPut'
          text/html:
            schema:
              $ref: '#/components/schemas/UsuarioValoresDefinidosCampoGrupoInformacaoPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/UsuarioValoresDefinidosCampoGrupoInformacaoPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/UsuarioValoresDefinidosCampoGrupoInformacaoPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsuarioValoresDefinidosCampoGrupoInformacaoPut'
        required: true
      responses:
        "200":
          description: Campo atualizado com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: valor
    delete:
      tags:
      - Usuario
      summary: Remove um valor pré definido
      operationId: Usuario_ExcluirValorPreDefinidoByvaloresDefinidosCampoGrupoInformacaoId
      parameters:
      - name: valoresDefinidosCampoGrupoInformacaoId
        in: path
        description: Id dos valores definidos no campo grupo informação
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Campo de valor pré definido excluido com sucesso
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
  /usuarios/autorizar:
    put:
      tags:
      - Usuario
      summary: Aprova um cadastro de usuário
      operationId: Usuario_AprovarUsuariosBytipoIdentificadorusuarios
      parameters:
      - name: tipoIdentificador
        in: query
        description: Tipo do identificador
        required: true
        schema:
          type: string
          enum:
          - UsuarioId
          - Email
      requestBody:
        description: Usuários a serem aprovados.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioAprovar'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioAprovar'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioAprovar'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioAprovar'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioAprovar'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UsuarioAprovar'
        required: true
      responses:
        "200":
          description: Operação realizada com ou sem sucesso para os usuários
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultadoAprovacaoUsuarios'
            text/json:
              schema:
                $ref: '#/components/schemas/ResultadoAprovacaoUsuarios'
            text/html:
              schema:
                $ref: '#/components/schemas/ResultadoAprovacaoUsuarios'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAprovacaoUsuarios'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResultadoAprovacaoUsuarios'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: usuarios
  /usuarios/bloquear:
    put:
      tags:
      - Usuario
      summary: Bloqueia ou desbloqueia usuários
      operationId: Usuario_BloquearUsuarioByusuarios
      requestBody:
        description: Usuários a serem bloqueados.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BloquearUsuario'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BloquearUsuario'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BloquearUsuario'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BloquearUsuario'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BloquearUsuario'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BloquearUsuario'
        required: true
      responses:
        "200":
          description: Campo atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultadoBloquearUsuario'
            text/json:
              schema:
                $ref: '#/components/schemas/ResultadoBloquearUsuario'
            text/html:
              schema:
                $ref: '#/components/schemas/ResultadoBloquearUsuario'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultadoBloquearUsuario'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResultadoBloquearUsuario'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: usuarios
  /webhook/inscricao:
    get:
      tags:
      - Webhook
      summary: Busca todas as inscrições inseridas.
      operationId: Webhook_Get
      responses:
        "200":
          description: Lista de inscrições
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InscricaoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InscricaoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InscricaoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InscricaoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InscricaoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    post:
      tags:
      - Webhook
      summary: Insere uma inscrição.
      operationId: Webhook_PostByrequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PostInscricao'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PostInscricao'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PostInscricao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PostInscricao'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PostInscricao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PostInscricao'
        required: true
      responses:
        "200":
          description: Identificador da inscrição
          content:
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
            text/html:
              schema:
                type: integer
                format: int64
            application/xml:
              schema:
                type: integer
                format: int64
            text/xml:
              schema:
                type: integer
                format: int64
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: request
  /webhook/inscricao/{inscricaoId}:
    get:
      tags:
      - Webhook
      summary: Busca a inscricao por seu identificador.
      operationId: Webhook_GetByinscricaoId
      parameters:
      - name: inscricaoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Inscrição
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InscricaoGet'
            text/json:
              schema:
                $ref: '#/components/schemas/InscricaoGet'
            text/html:
              schema:
                $ref: '#/components/schemas/InscricaoGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/InscricaoGet'
            text/xml:
              schema:
                $ref: '#/components/schemas/InscricaoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
    put:
      tags:
      - Webhook
      summary: Atualiza uma inscrição.
      operationId: Webhook_PutAtualizarInscricaoByinscricaoIdrequest
      parameters:
      - name: inscricaoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutInscricao'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutInscricao'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutInscricao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutInscricao'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutInscricao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutInscricao'
        required: true
      responses:
        "200":
          description: Status se a inscrição foi atualizada com sucesso (true) ou
            não (false)
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: request
  /webhook/inscricao/{inscricaoId}/Ativar:
    put:
      tags:
      - Webhook
      summary: Ativa ou inativa uma inscrição.
      operationId: Webhook_PutAtivarInscricaoByinscricaoIdrequest
      parameters:
      - name: inscricaoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutAtivarInscricao'
          text/json:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutAtivarInscricao'
          text/html:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutAtivarInscricao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutAtivarInscricao'
          text/xml:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutAtivarInscricao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PutAtivarInscricao'
        required: true
      responses:
        "200":
          description: Status se a inscrição foi ativada/desativada com sucesso (true)
            ou não (false)
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/html:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
      x-codegen-request-body-name: request
  /webhook/Topicos:
    get:
      tags:
      - Webhook
      summary: Busca os tópicos disponíveis para inscrição.
      operationId: Webhook_GetTopicos
      responses:
        "200":
          description: Lista de Topicos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicoGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicoGet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicoGet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicoGet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicoGet'
        "500":
          description: Erro no processamento da operação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/json:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/html:
              schema:
                $ref: '#/components/schemas/Resultado'
            application/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
            text/xml:
              schema:
                $ref: '#/components/schemas/Resultado'
components:
  schemas:
    AssinaturaSimples:
      type: object
      properties:
        assinaturaId:
          type: integer
          format: int64
        usuarioId:
          type: integer
          format: int64
        dataProximoPedido:
          type: string
          format: date-time
        periodoRecorrencia:
          type: string
        situacaoAssinatura:
          type: string
          enum:
          - Ativa
          - Pausada
          - Cancelada
        dataAssinatura:
          type: string
          format: date-time
        grupoAssinatura:
          type: string
        enderecoId:
          type: integer
          format: int64
        usuarioCartaoCreditoId:
          type: integer
          format: int64
        cupom:
          type: string
        parceiro:
          $ref: '#/components/schemas/AssinaturaParceiro'
        dataPausa:
          type: string
          format: date-time
        dataCancelamento:
          type: string
          format: date-time
        formaPagamento:
          type: array
          items:
            $ref: '#/components/schemas/FormaPagamentoSimples'
    AssinaturaParceiro:
      type: object
      properties:
        parceiroId:
          type: integer
          format: int32
    FormaPagamentoSimples:
      type: object
      properties:
        parcelamento:
          type: integer
          format: int32
    Resultado:
      type: object
      properties:
        resultadoOperacao:
          type: boolean
        codigo:
          type: integer
          format: int64
        mensagem:
          type: string
    Assinatura:
      type: object
      properties:
        assinaturaId:
          type: integer
          format: int64
        usuarioId:
          type: integer
          format: int64
        dataProximoPedido:
          type: string
          format: date-time
        periodoRecorrencia:
          type: string
        situacaoAssinatura:
          type: string
          enum:
          - Ativa
          - Pausada
          - Cancelada
        dataAssinatura:
          type: string
          format: date-time
        dataPausa:
          type: string
          format: date-time
        dataCancelamento:
          type: string
          format: date-time
        grupoAssinatura:
          type: string
        enderecoId:
          type: integer
          format: int64
        usuarioCartaoCreditoId:
          type: integer
          format: int64
        cupom:
          type: string
        parcelamento:
          type: integer
          format: int32
        produtos:
          type: array
          items:
            $ref: '#/components/schemas/AssinaturaProduto'
        parceiro:
          $ref: '#/components/schemas/AssinaturaParceiro'
    AssinaturaProduto:
      type: object
      properties:
        assinaturaProdutoId:
          type: integer
          format: int64
        assinaturaId:
          type: integer
          format: int64
        produtoId:
          type: integer
          format: int64
        produtoVarianteId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int32
        valor:
          type: number
          format: double
        removido:
          type: boolean
    AssinaturaAtualizar:
      type: object
      properties:
        enderecoId:
          type: integer
          format: int64
        usuarioCartaoCreditoId:
          type: integer
          format: int64
        periodoRecorrencia:
          type: string
        situacaoAssinatura:
          type: string
          enum:
          - Ativa
          - Pausada
          - Cancelada
        cupom:
          type: string
    Fbits.API.Contratos.Assinatura.AssinaturaProdutoPost:
      required:
      - produtoVarianteId
      - quantidade
      type: object
      properties:
        produtoVarianteId:
          type: integer
          description: Produto Variante que será incluido na assinatura
          format: int64
        quantidade:
          type: integer
          description: Quantidade do produto que será inserido na assinatura
          format: int64
    AssinaturaRecorrencia:
      type: object
      properties:
        recorrencias:
          type: array
          items:
            type: string
    Fbits.API.Contratos.Assinatura.AssinaturaProdutoPut:
      type: object
      properties:
        valor:
          type: number
          description: Novo valor do produto na assinatura
          format: double
        removido:
          type: boolean
          description: Se o produto será considerado removido ou não da assinatura
        quantidade:
          type: integer
          description: Quantidade do produto na assinatura
          format: int32
    AssinaturaErro:
      type: object
      properties:
        assinaturaErroId:
          type: integer
          format: int64
        assinaturaId:
          type: integer
          format: int64
        usuarioId:
          type: string
        visualizado:
          type: boolean
        dataErro:
          type: string
          format: date-time
        resolvido:
          type: boolean
        codigoAssinaturaErro:
          type: integer
          format: int64
        assinaturaErroNome:
          type: string
        assinaturaErroDescricao:
          type: string
    AssinaturaByPedido:
      type: object
      properties:
        assinaturaPedidoId:
          type: integer
          format: int64
        assinaturaId:
          type: integer
          format: int64
        grupoAssinaturaId:
          type: integer
          format: int64
        tipoPeriodo:
          type: string
        tempoPeriodo:
          type: integer
          format: int32
        pedidoId:
          type: integer
          format: int64
        valor:
          type: number
          format: double
        data:
          type: string
          format: date-time
        origemPedidoEnumId:
          type: integer
          format: int32
        produtoVarianteId:
          type: integer
          format: int64
        assinaturaProdutos:
          type: array
          items:
            $ref: '#/components/schemas/AssinaturaProdutosByPedido'
    AssinaturaProdutosByPedido:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int32
    Fbits.API.Contratos.Assinatura.AssinaturaDataRecorrencia:
      required:
      - proximaRecorrencia
      type: object
      properties:
        proximaRecorrencia:
          type: string
          description: "Data da próxima recorrencia (Será considerado apenas o dia,\
            \ mês e ano. Hora e minutos não serão considerados)"
          format: date-time
    GrupoAssinatura:
      type: object
      properties:
        grupoAssinaturaId:
          type: integer
          format: int64
        nome:
          type: string
        recorrencias:
          type: array
          items:
            $ref: '#/components/schemas/Recorrencia'
    Recorrencia:
      type: object
      properties:
        recorrenciaId:
          type: integer
          format: int64
        nome:
          type: string
        dias:
          type: integer
          format: int32
    Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.GrupoAssinaturaPostAssinatura:
      type: object
      properties:
        pedidos:
          type: array
          description: Lista de pedidos a serem vinculados a assinatura
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.AssinaturaPedido'
        recorrenciaId:
          type: integer
          description: "ID da recorrência vinculada ao grupo, disponível em GET /assinaturas/grupoassinatura"
          format: int64
        grupoAssinaturaId:
          type: integer
          description: "ID do grupo de assinatura, disponível em GET /assinaturas/grupoassinatura"
          format: int64
      description: ""
    Fbits.API.Contratos.GrupoAssinaturaPostAssinatura.AssinaturaPedido:
      type: object
      properties:
        pedidoId:
          type: integer
          description: ID do pedido que terá vinculo com o grupo de assinatura.
          format: int64
    GrupoAssinaturaAssinatura:
      type: object
      properties:
        mensagem:
          type: string
    Atributo:
      type: object
      properties:
        nome:
          type: string
        tipo:
          type: string
          enum:
          - Selecao
          - Filtro
          - Comparacao
          - Configuracao
          - ExclusivoGoogle
        tipoExibicao:
          type: string
          enum:
          - Combo
          - Div
          - DivComCor
          - DivComFotoDoProdutoVariante
          - Javascript
        prioridade:
          type: integer
          format: int32
    Autenticacao:
      type: object
      properties:
        login:
          type: string
        senha:
          type: string
    UsuarioIdentificadoAPI:
      type: object
      properties:
        lojas:
          type: array
          items:
            type: string
        accessToken:
          type: string
        dataExpiracaoAccessTokenUTC:
          type: string
          format: date-time
    Fbits.API.Contratos.Autor.AutorPost:
      required:
      - ativo
      - nome
      type: object
      properties:
        nome:
          type: string
          description: Nome do Autor
        ativo:
          type: boolean
          description: Status do autor
      description: ""
    Banner:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        dataInicio:
          type: string
          format: date-time
        dataFim:
          type: string
          format: date-time
        ativo:
          type: boolean
        detalhe:
          $ref: '#/components/schemas/BannerDetalhe'
        apresentacao:
          $ref: '#/components/schemas/BannerApresentacao'
    BannerDetalhe:
      type: object
      properties:
        posicionamentoId:
          type: integer
          format: int32
        urlBanner:
          type: string
        imagemBanner:
          $ref: '#/components/schemas/Imagem'
        ordemExibicao:
          type: integer
          format: int32
        abrirBannerNovaAba:
          type: boolean
        largura:
          type: integer
          format: int32
        altura:
          type: integer
          format: int32
        title:
          type: string
        urlClique:
          type: string
        urlBannerAlternativo:
          type: string
        titleAlternativo:
          type: string
        diasExibicao:
          $ref: '#/components/schemas/BannerDiasExibicao'
        textoAlternativo:
          type: string
    BannerApresentacao:
      type: object
      properties:
        exibirNoSite:
          type: boolean
        exibirEmTodasBuscas:
          type: boolean
        naoExibirEmBuscas:
          type: boolean
        termosBusca:
          type: string
        listaHotsites:
          $ref: '#/components/schemas/BannerListaHotsites'
        exibirEmTodasCategorias:
          type: boolean
        listaParceiros:
          $ref: '#/components/schemas/BannerListaParceiros'
    Imagem:
      type: object
      properties:
        nome:
          type: string
        base64:
          type: string
        formato:
          type: string
          enum:
          - PNG
          - JPG
          - JPEG
    BannerDiasExibicao:
      type: object
      properties:
        todosDias:
          type: boolean
        domingo:
          type: boolean
        segunda:
          type: boolean
        terca:
          type: boolean
        quarta:
          type: boolean
        quinta:
          type: boolean
        sexta:
          type: boolean
        sabado:
          type: boolean
    BannerListaHotsites:
      type: object
      properties:
        exibirEmTodosHotSites:
          type: boolean
        hotSites:
          type: array
          items:
            $ref: '#/components/schemas/BannerHotSite'
    BannerListaParceiros:
      type: object
      properties:
        exibirEmTodosParceiros:
          type: boolean
        parceiros:
          type: array
          items:
            $ref: '#/components/schemas/BannerParceiro'
    BannerHotSite:
      type: object
      properties:
        hotSiteId:
          type: integer
          format: int64
    BannerParceiro:
      type: object
      properties:
        parceiroId:
          type: integer
          format: int64
    Fbits.API.Contratos.Banner.BannerPost:
      required:
      - dataInicio
      - nome
      type: object
      properties:
        nome:
          type: string
          description: Nome do banner
        dataInicio:
          type: string
          description: Data de inicio de exibição do banner
          format: date-time
        dataFim:
          type: string
          description: Data de termino de exibição do banner
          format: date-time
        ativo:
          type: boolean
          description: Banner ativo/inativo
        detalhe:
          $ref: '#/components/schemas/Fbits.API.Contratos.Banner.Detalhe'
        apresentacao:
          $ref: '#/components/schemas/Fbits.API.Contratos.Banner.Apresentacao'
      description: ""
    Fbits.API.Contratos.Banner.Detalhe:
      required:
      - posicionamentoId
      - textoAlternativo
      type: object
      properties:
        posicionamentoId:
          type: integer
          description: Local de posicionamento do banner
          format: int32
        imagemBanner:
          $ref: '#/components/schemas/Fbits.API.Contratos.Banner.Imagem'
        urlBanner:
          type: string
          description: "Url de onde o banner deve ser carregado (Ex.: http://www.site.com.br/banner.swf).\
            \ O Banner poderá ser do tipo flash ou imagem"
        ordemExibicao:
          type: integer
          description: Ordem de exibição do banner
          format: int32
        abrirLinkNovaAba:
          type: boolean
          description: Se o banner deve ou não abrir em nova aba
        largura:
          type: integer
          description: Largura do banner em pixels
          format: int32
        altura:
          type: integer
          description: Altura do banner em pixels
          format: int32
        title:
          type: string
          description: Title da imagem do banner
        urlClique:
          type: string
          description: Url de destino para quando o usuário clicar no Banner
        urlBannerAlternativo:
          type: string
          description: URL para um Banner alternativo que será exibido caso ocorra
            algum problema para exibição do Banner
        textoAlternativo:
          type: string
          description: Title alternativo que será exibido caso ocorra algum problema
            para a exibição do Banner
        diasExibicao:
          $ref: '#/components/schemas/Fbits.API.Contratos.Banner.DiasExibicao'
      description: ""
    Fbits.API.Contratos.Banner.Apresentacao:
      type: object
      properties:
        exibirNoSite:
          type: boolean
          description: Se o banner deverá ser exibido em todo o site
        exibirEmTodasBuscas:
          type: boolean
          description: Se o banner deverá ser exibido em todas as buscas
        naoExibirEmBuscas:
          type: boolean
          description: Se o banner não deverá ser exibido em nenhuma busca (Caso esse
            campo estiver como "true" o campo <strong>TermosBusca</strong> será desconsiderado)
        termosBusca:
          type: string
          description: Termos que o banner será exibido na busca
        exibirEmTodasCategorias:
          type: boolean
          description: Se o banner deverá ser exibido em todas categorias (Caso esse
            campo estiver como "true" o campo <strong>TermosBusca</strong> será desconsiderado)
        listaHotsites:
          $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ListaHotsites'
        listaParceiros:
          $ref: '#/components/schemas/Fbits.API.Contratos.Banner.ListaParceiros'
      description: ""
    Fbits.API.Contratos.Banner.Imagem:
      type: object
      properties:
        base64:
          type: string
          description: string da imagem em base 64
        formato:
          type: string
          description: formato da imagem
          enum:
          - PNG
          - JPG
          - JPEG
        nome:
          type: string
          description: ""
      description: ""
    Fbits.API.Contratos.Banner.DiasExibicao:
      type: object
      properties:
        todosDias:
          type: boolean
          description: Se o banner deverá ser exibido todos os dias (caso esse campo
            estiver preenchido como "true" os demais serão desconsiderados)
        domingo:
          type: boolean
          description: Se o banner deverá ser apresentado no domingo
        segunda:
          type: boolean
          description: Se o banner deverá ser apresentado na segunda
        terca:
          type: boolean
          description: Se o banner deverá ser apresentado na terça
        quarta:
          type: boolean
          description: Se o banner deverá ser apresentado na quarta
        quinta:
          type: boolean
          description: Se o banner deverá ser apresentado na quinta
        sexta:
          type: boolean
          description: Se o banner deverá ser apresentado na sexta
        sabado:
          type: boolean
          description: Se o banner deverá ser apresentado no sábado
    Fbits.API.Contratos.Banner.ListaHotsites:
      type: object
      properties:
        exibirEmTodosHotsites:
          type: boolean
          description: Se o banner deverá ser exibido em todos as hotsite's  (Caso
            esse campo estiver como "true" o campo <strong>HotSites</strong> será
            desconsiderado)
        hotsites:
          type: array
          description: Lista de hotsite's que o banner será exibido
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerHotsite'
      description: ""
    Fbits.API.Contratos.Banner.ListaParceiros:
      type: object
      properties:
        exibirEmTodosParceiros:
          type: boolean
          description: Se o banner deverá ser exibido em todos parceiros (Caso esse
            campo estiver como "true" o campo <strong>TermosBusca</strong> será desconsiderado)
        parceiros:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Banner.BannerParceiro'
    Fbits.API.Contratos.Banner.BannerHotsite:
      type: object
      properties:
        hotSiteId:
          minimum: 1
          type: integer
          description: ""
          format: int64
      description: ""
    Fbits.API.Contratos.Banner.BannerParceiro:
      type: object
      properties:
        parceiroId:
          minimum: 1
          type: integer
          description: Id do parceiro
          format: int64
      description: ""
    Fbits.API.Contratos.Banner.PutStatusBanner:
      type: object
      properties:
        status:
          type: boolean
    Fbits.API.Contratos.Banner.ExibicaoHotsite:
      type: object
      properties:
        exibirEmTodosHotsites:
          type: boolean
    BannerPosicionamento:
      type: object
      properties:
        posicionamentoId:
          type: integer
          format: int32
        descricao:
          type: string
    Fbits.API.Contratos.Banner.ExibicaoParceiro:
      type: object
      properties:
        exibirEmTodosParceiros:
          type: boolean
    Fbits.API.Contratos.Banner.PutImagemBanner:
      type: object
      properties:
        urlImagem:
          type: string
          description: ""
        imagem:
          $ref: '#/components/schemas/Fbits.API.Contratos.Banner.Imagem'
      description: ""
    Categoria:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nome:
          type: string
        categoriaPaiId:
          type: integer
          format: int32
        categoriaERPId:
          type: string
        ativo:
          type: boolean
        isReseller:
          type: boolean
        exibirMatrizAtributos:
          type: string
          enum:
          - Sim
          - Nao
          - Neutro
        quantidadeMaximaCompraUnidade:
          type: integer
          format: int32
        valorMinimoCompra:
          type: number
          format: double
        exibeMenu:
          type: boolean
        urlHotSite:
          type: string
        ordem:
          type: integer
          format: int32
    CategoriaEnvio:
      type: object
      properties:
        nome:
          type: string
        categoriaPaiId:
          type: integer
          format: int32
        categoriaERPId:
          type: string
        ativo:
          type: boolean
        isReseller:
          type: boolean
        exibirMatrizAtributos:
          type: string
          default: Nao
          enum:
          - Nao
        quantidadeMaximaCompraUnidade:
          type: integer
          format: int32
        valorMinimoCompra:
          type: number
          format: double
        exibeMenu:
          type: boolean
    CategoriaProduto:
      type: object
      properties:
        produtoId:
          type: integer
          format: int64
        ordem:
          type: integer
          format: int32
    CentroDistribuicao:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nome:
          type: string
        cep:
          type: integer
          format: int32
        padrao:
          type: boolean
    CentroDistribuicaoPrioridade:
      type: object
      properties:
        incrementoOrdem:
          type: integer
          format: int32
        desativarPriorizacao:
          type: boolean
    ContaCorrente:
      type: object
      properties:
        valor:
          type: number
          format: double
        tipoLancamento:
          type: string
          enum:
          - Credito
          - Debito
        observacao:
          type: string
        visivelParaCliente:
          type: boolean
        tipoContaCorrenteId:
          type: integer
          format: int32
        referencia:
          type: array
          items:
            type: string
    ContaCorrenteCompleta:
      type: object
      properties:
        data:
          type: string
          format: date-time
        historico:
          type: string
        valor:
          type: number
          format: double
        tipoLancamento:
          type: string
          enum:
          - Credito
          - Debito
        observacao:
          type: string
        visivelParaCliente:
          type: boolean
        tipoContaCorrenteId:
          type: integer
          format: int32
        referencia:
          type: array
          items:
            type: string
    Fbits.API.Contratos.Conteudo.ConteudoPost:
      required:
      - ativo
      - conteudo
      - exibeTodasBuscas
      - exibeTodosHotsites
      - naoExibeBuscas
      - posicionamento
      - titulo
      type: object
      properties:
        titulo:
          type: string
          description: ""
        ativo:
          type: boolean
          description: ""
        dataInicio:
          type: string
          description: ""
          format: date-time
        dataFim:
          type: string
          description: ""
          format: date-time
        posicionamento:
          type: string
          description: ""
          enum:
          - Topo
          - Centro
          - Rodape
          - LateralDireita
          - LateralEsquerda
          - Ok
          - Erro
          - PersonalizadoSessaoExplre
          - MobileTopo
          - MobileRodape
        conteudo:
          type: string
          description: ""
        termoBusca:
          type: string
          description: ""
        exibeTodasBuscas:
          type: boolean
          description: ""
        naoExibeBuscas:
          type: boolean
          description: ""
        exibeTodosHotsites:
          type: boolean
          description: ""
        hotsitesId:
          type: array
          description: ""
          items:
            type: integer
            format: int64
      description: ""
    Conteudo:
      type: object
      properties:
        conteudoId:
          type: integer
          format: int64
        titulo:
          type: string
        ativo:
          type: boolean
        dataInicio:
          type: string
          format: date-time
        dataFim:
          type: string
          format: date-time
        posicionamento:
          type: string
          enum:
          - Topo
          - Centro
          - Rodape
          - LateralDireita
          - LateralEsquerda
          - Ok
          - Erro
          - PersonalizadoSessaoExplre
          - MobileTopo
          - MobileRodape
        codigoFonte:
          type: string
        termoBusca:
          type: string
        exibeTodasBuscas:
          type: boolean
        naoExibeBuscas:
          type: boolean
        exibeTodosHotsites:
          type: boolean
        hotsitesId:
          type: array
          items:
            type: integer
            format: int64
    Faturamento:
      type: object
      properties:
        indicadorReceita:
          type: number
          format: double
        indicadorPedido:
          type: integer
          format: int32
        indicadorTicketMedio:
          type: number
          format: double
        indicadorReceitaComparativo:
          type: number
          format: double
        indicadorPedidoComparativo:
          type: integer
          format: int32
        indicadorTicketMedioComparativo:
          type: number
          format: double
        indicadorReceitaFormatado:
          type: string
        indicadorPedidoFormatado:
          type: string
        indicadorTicketMedioFormatado:
          type: string
        indicadorReceitaComparativoFormatado:
          type: string
        indicadorPedidoComparativoFormatado:
          type: string
        indicadorTicketMedioComparativoFormatado:
          type: string
        indicadorReceitaPorcentagem:
          type: string
        indicadorPedidoPorcentagem:
          type: string
        indicadorTicketMedioPorcentagem:
          type: string
    GraficoFaturamento:
      type: object
      properties:
        parceiroId:
          type: integer
          format: int32
        parceiro:
          type: string
        receitaPagos:
          type: number
          format: double
        transacoesPagos:
          type: integer
          format: int32
        valorMedioPagos:
          type: number
          format: double
        usuarioEnderecoEstado:
          type: string
    UltimosPedidos:
      type: object
      properties:
        pedidoId:
          type: integer
          format: int64
        situacaoPedidoId:
          type: integer
          format: int32
        situacaoNome:
          type: string
        data:
          type: string
          format: date-time
        dataFormatado:
          type: string
        hora:
          type: string
        valorTotal:
          type: string
    ProdutosMaisVendidos:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int32
        nomeProduto:
          type: string
        sku:
          type: string
        quantidade:
          type: integer
          format: int32
        receita:
          type: string
    IndicadorCompradores:
      type: object
      properties:
        indicadorComprador:
          type: string
    IndicadorProdutoEstoque:
      type: object
      properties:
        indicadorProdutoComEstoque:
          type: string
        indicadorProdutoSemEstoque:
          type: string
    IndicadorCarrinhosAbandonado:
      type: object
      properties:
        indicadorCarrinhoAbandonado:
          type: string
    GraficoFormaPagamento:
      type: object
      properties:
        nome:
          type: string
        quantidade:
          type: integer
          format: int32
        cor:
          type: string
    RelatorioDadosReceita:
      type: object
      properties:
        tipoAgrupamento:
          type: string
          enum:
          - Hora
          - Dia
          - Semana
          - Mes
          - Ano
        dados:
          type: array
          items:
            $ref: '#/components/schemas/DadosReceita'
    DadosReceita:
      type: object
      properties:
        data:
          type: string
          format: date-time
        pedidosCaptados:
          type: number
          format: double
        pedidosPagos:
          type: number
          format: double
        pedidosEnviados:
          type: number
          format: double
        pedidosCancelados:
          type: number
          format: double
    Evento:
      type: object
      properties:
        eventoId:
          type: integer
          format: int64
        tipoEventoId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        enderecoEntregaId:
          type: integer
          format: int64
        data:
          type: string
          format: date-time
        dataCriacao:
          type: string
          format: date-time
        titulo:
          type: string
        url:
          type: string
        disponivel:
          type: boolean
        diasDepoisEvento:
          type: integer
          format: int32
        diasAntesEvento:
          type: integer
          format: int32
        urlLogoEvento:
          type: string
        urlCapaEvento:
          type: string
        proprietarioEvento:
          type: string
        abaInfo01Habilitado:
          type: boolean
        textoInfo01:
          type: string
        conteudoInfo01:
          type: string
        abaInfo02Habilitado:
          type: boolean
        textoInfo02:
          type: string
        conteudoInfo02:
          type: string
        abaMensagemHabilitado:
          type: boolean
        fotos:
          type: string
        enumTipoListaPresenteId:
          type: string
          enum:
          - Default
        enumTipoEntregaId:
          type: string
          enum:
          - EntregaAgendada
          - EntregaConformeCompraRealizada
          - Todos
          - Nenhum
        eventoProdutoSelecionado:
          type: array
          items:
            $ref: '#/components/schemas/EventoProdutoSelecionadoPost'
        enderecoEvento:
          type: array
          items:
            $ref: '#/components/schemas/EnderecoEvento'
    EventoProdutoSelecionadoPost:
      type: object
      properties:
        eventoId:
          type: integer
          format: int64
        produtoVarianteId:
          type: integer
          format: int64
        recebidoForaLista:
          type: boolean
        removido:
          type: boolean
    EnderecoEvento:
      type: object
      properties:
        enderecoEventoId:
          type: integer
          format: int64
        eventoId:
          type: integer
          format: int64
        nome:
          type: string
        cep:
          type: string
        endereco:
          type: string
        numero:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
    NovoContratoPost.EventoPost:
      required:
      - abaInfo01Habilitado
      - abaInfo02Habilitado
      - data
      - enderecoEntregaId
      - enderecoEvento
      - enumTipoEntregaId
      - enumTipoListaPresenteId
      - proprietario
      - tipoEventoId
      - titulo
      - url
      - urlCapa
      - urlLogo
      - usuarioEmail
      type: object
      properties:
        tipoEventoId:
          type: integer
          description: Identificador do tipo de evento
          format: int64
        enderecoEntregaId:
          type: integer
          description: Identificador do endereço de entrega
          format: int64
        titulo:
          type: string
          description: Titulo do evento
        url:
          type: string
          description: Url
        data:
          type: string
          description: Data do Evento
          format: date-time
        usuarioEmail:
          type: string
          description: Email do usuário
        disponivel:
          type: boolean
          description: Disponibilidade
        diasAntesEvento:
          type: integer
          description: Quantos dias antes do evento ele será exibido
          format: int32
        diasDepoisEvento:
          type: integer
          description: Até quantos dias depois do evento ele será exibido
          format: int32
        urlLogo:
          type: string
          description: Url do Logo. (Base64)
        urlCapa:
          type: string
          description: Url da Capa. (Base64)
        proprietario:
          type: string
          description: Quem é o proprietario
        abaInfo01Habilitado:
          type: boolean
          description: ""
        textoInfo01:
          type: string
          description: ""
        conteudoInfo01:
          type: string
          description: ""
        abaInfo02Habilitado:
          type: boolean
        textoInfo02:
          type: string
          description: ""
        conteudoInfo02:
          type: string
          description: ""
        abaMensagemHabilitado:
          type: boolean
          description: ""
        enumTipoListaPresenteId:
          type: string
          description: ""
          enum:
          - ListaPronta
          - ListaManual
        enumTipoEntregaId:
          type: string
          description: ""
          enum:
          - EntregaAgendada
          - EntregaConformeCompraRealizada
          - Todos
          - Nenhum
        eventoProdutoSelecionado:
          type: array
          description: Produtos
          items:
            $ref: '#/components/schemas/NovoContratoPost.EventoProdutoSelecionadoPost'
        enderecoEvento:
          type: array
          description: Endereço do Evento
          items:
            $ref: '#/components/schemas/NovoContratoPost.EnderecoEventoPost'
      description: Contrato de envio de evento.
    NovoContratoPost.EventoProdutoSelecionadoPost:
      required:
      - produtoVarianteId
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        recebidoForaLista:
          type: boolean
        removido:
          type: boolean
    NovoContratoPost.EnderecoEventoPost:
      required:
      - bairro
      - cep
      - cidade
      - endereco
      - estado
      - nome
      - numero
      type: object
      properties:
        nome:
          type: string
          description: Nome
        endereco:
          type: string
          description: Nome
        cep:
          type: string
          description: CEP
        numero:
          type: string
          description: Numero
        bairro:
          type: string
          description: Bairro
        cidade:
          type: string
          description: Cidade
        estado:
          type: string
          description: Estado
    NovoContratoPut.EventoPut:
      required:
      - abaInfo01Habilitado
      - abaInfo02Habilitado
      - data
      - enderecoEntregaId
      - enderecoEvento
      - enumTipoEntregaId
      - enumTipoListaPresenteId
      - proprietario
      - tipoEventoId
      - titulo
      - urlCapa
      - urlLogo
      - usuarioEmail
      type: object
      properties:
        tipoEventoId:
          type: integer
          description: Identificador do tipo de evento
          format: int64
        enderecoEntregaId:
          type: integer
          description: Identificador do endereço de entrega
          format: int64
        titulo:
          type: string
          description: Titulo do evento
        url:
          type: string
          description: Atributo obsoleto
        data:
          type: string
          description: Data do Evento
          format: date-time
        usuarioEmail:
          type: string
          description: Email do usuário
        disponivel:
          type: boolean
          description: Disponibilidade
        diasAntesEvento:
          type: integer
          description: Quantos dias antes do evento ele será exibido
          format: int32
        diasDepoisEvento:
          type: integer
          description: Até quantos dias depois do evento ele será exibido
          format: int32
        urlLogo:
          type: string
          description: Url do Logo. (Base64)
        urlCapa:
          type: string
          description: Url da Capa. (Base64)
        proprietario:
          type: string
          description: Quem é o proprietario
        abaInfo01Habilitado:
          type: boolean
          description: ""
        textoInfo01:
          type: string
          description: ""
        conteudoInfo01:
          type: string
          description: ""
        abaInfo02Habilitado:
          type: boolean
        textoInfo02:
          type: string
          description: ""
        conteudoInfo02:
          type: string
          description: ""
        abaMensagemHabilitado:
          type: boolean
          description: ""
        enumTipoListaPresenteId:
          type: string
          description: ""
          enum:
          - ListaPronta
          - ListaManual
        enumTipoEntregaId:
          type: string
          description: ""
          enum:
          - EntregaAgendada
          - EntregaConformeCompraRealizada
          - Todos
          - Nenhum
        eventoProdutoSelecionado:
          type: array
          description: Produtos
          items:
            $ref: '#/components/schemas/NovoContratoPut.EventoProdutoSelecionadoPut'
        enderecoEvento:
          type: array
          description: Endereço do Evento
          items:
            $ref: '#/components/schemas/NovoContratoPut.EnderecoEventoPut'
      description: Contrato de envio de evento.
    NovoContratoPut.EventoProdutoSelecionadoPut:
      required:
      - produtoVarianteId
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        recebidoForaLista:
          type: boolean
        removido:
          type: boolean
    NovoContratoPut.EnderecoEventoPut:
      required:
      - bairro
      - cep
      - cidade
      - endereco
      - estado
      - nome
      - numero
      type: object
      properties:
        nome:
          type: string
          description: Nome
        endereco:
          type: string
          description: Nome
        cep:
          type: string
          description: CEP
        numero:
          type: string
          description: Numero
        bairro:
          type: string
          description: Bairro
        cidade:
          type: string
          description: Cidade
        estado:
          type: string
          description: Estado
    EventoProdutoSelecionadoGet:
      type: object
      properties:
        eventoId:
          type: integer
          format: int64
        produtoVarianteId:
          type: integer
          format: int64
        recebidoForaLista:
          type: boolean
        removido:
          type: boolean
    Fbits.API.Contratos.VinculoProdutoEvento.VinculoProdutoEvento:
      type: object
      properties:
        produtosVariante:
          type: array
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.SugestaoProduto'
    Fbits.API.Contratos.VinculoProdutoTipoEvento.SugestaoProduto:
      required:
      - produtoVarianteId
      type: object
      properties:
        produtoVarianteId:
          type: integer
          description: Identificador do produto variante.
          format: int64
        quantidade:
          type: integer
          description: Quantidade do produto sugerido
          format: int32
      description: ""
    Fbits.API.Contratos.VinculoProdutoEvento.EventoProdutoRecebido:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        recebidoForaLista:
          type: boolean
    Fabricante:
      type: object
      properties:
        fabricanteId:
          type: integer
          format: int64
        ativo:
          type: boolean
        nome:
          type: string
        urlLogoTipo:
          type: string
        urlLink:
          type: string
        urlCarrossel:
          type: string
    FabricantePost:
      type: object
      properties:
        nome:
          type: string
        urlLogoTipo:
          type: string
        urlLink:
          type: string
        urlCarrossel:
          type: string
    FormaPagamento:
      type: object
      properties:
        formaPagamentoId:
          type: integer
          format: int64
        nome:
          type: string
        nomeExibicao:
          type: string
        descricao:
          type: string
    FreteCompleto:
      type: object
      properties:
        freteId:
          type: integer
          format: int64
        nome:
          type: string
        ativo:
          type: boolean
        volumeMaximo:
          type: integer
          format: int32
        pesoCubado:
          type: number
          format: double
        entregaAgendadaConfiguracaoId:
          type: integer
          format: int32
        linkRastreamento:
          type: string
        ehAssinatura:
          type: boolean
        larguraMaxima:
          type: integer
          format: int32
        alturaMaxima:
          type: integer
          format: int32
        comprimentoMaximo:
          type: integer
          format: int32
        limiteMaximoDimensoes:
          type: integer
          format: int32
        limitePesoCubado:
          type: number
          format: double
        tempoMinimoDespacho:
          type: integer
          format: int32
        centroDistribuicaoId:
          type: integer
          format: int32
        valorMinimoProdutos:
          type: number
          format: double
        cotacaoEmHoras:
          type: boolean
        horarioCorte:
          type: string
        prazoAdicional:
          type: integer
          format: int32
    Frete:
      type: object
      properties:
        nome:
          type: string
        ativo:
          type: boolean
        volumeMaximo:
          type: integer
          format: int32
        pesoCubado:
          type: number
          format: double
        entregaAgendadaConfiguracaoId:
          type: integer
          format: int32
        linkRastreamento:
          type: string
        ehAssinatura:
          type: boolean
        larguraMaxima:
          type: integer
          format: int32
        alturaMaxima:
          type: integer
          format: int32
        comprimentoMaximo:
          type: integer
          format: int32
        limiteMaximoDimensoes:
          type: integer
          format: int32
        limitePesoCubado:
          type: number
          format: double
        tempoMinimoDespacho:
          type: integer
          format: int32
        centroDistribuicaoId:
          type: integer
          format: int32
        valorMinimoProdutos:
          type: number
          format: double
        cotacaoEmHoras:
          type: boolean
        horarioCorte:
          type: string
        prazoAdicional:
          type: integer
          format: int32
    FreteAtivo:
      type: object
      properties:
        ativo:
          type: boolean
    FreteDetalhe:
      type: object
      properties:
        freteId:
          type: integer
          format: int64
        cepInicial:
          type: integer
          format: int32
        cepFinal:
          type: integer
          format: int32
        variacoesFreteDetalhe:
          type: array
          items:
            $ref: '#/components/schemas/VariacoesFreteDetalhe'
    VariacoesFreteDetalhe:
      type: object
      properties:
        pesoInicial:
          type: number
          format: double
        pesoFinal:
          type: number
          format: double
        valorFrete:
          type: number
          format: double
        prazoEntrega:
          type: integer
          format: int32
        valorPreco:
          type: number
          format: double
        valorPeso:
          type: number
          format: double
    FreteDetalhePost:
      type: object
      properties:
        cepInicial:
          type: integer
          format: int32
        cepFinal:
          type: integer
          format: int32
        variacoesFreteDetalhe:
          type: array
          items:
            $ref: '#/components/schemas/VariacoesFreteDetalhe'
    Fbits.API.Contratos.Cotacao.CotacaoPost:
      required:
      - produtos
      type: object
      properties:
        valorTotal:
          type: number
          description: Valor total do pedido
          format: double
        produtos:
          type: array
          description: Lista de produtos da cotação
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Cotacao.CotacaoPostProduto'
      description: Contrato de cotação de frete
    Fbits.API.Contratos.Cotacao.CotacaoPostProduto:
      required:
      - identificador
      - quantidade
      type: object
      properties:
        identificador:
          type: string
          description: Id do produto variante
        quantidade:
          type: integer
          format: int32
      description: Contrato de produto da cotação de frete
    JaimitoResponse:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        prazo:
          type: integer
          format: int32
        tabelaFreteId:
          type: string
        tipo:
          type: string
        valor:
          type: number
          format: double
        produtos:
          type: array
          items:
            $ref: '#/components/schemas/JaimitoResponseProdutos'
    JaimitoResponseProdutos:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        valor:
          type: number
          format: double
    JaimitoApiResponse:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        prazo:
          type: integer
          format: int32
        tabelaFreteId:
          type: string
        tipo:
          type: string
        valor:
          type: number
          format: double
        centroDistribuicao:
          type: integer
          format: int32
        produtos:
          type: array
          items:
            $ref: '#/components/schemas/JaimitoApiResponseProdutos'
    JaimitoApiResponseProdutos:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        valor:
          type: number
          format: double
        centroDistribuicaoId:
          type: integer
          format: int32
    JaimitoCriterioScore:
      type: object
      properties:
        criterioScoreId:
          type: integer
          format: int32
        criterio:
          type: string
        menorMelhor:
          type: boolean
        descricao:
          type: string
        inativo:
          type: boolean
        peso:
          type: number
          format: double
        calculadoAutomatico:
          type: boolean
    JaimitoCentroDistribuicaoScore:
      type: object
      properties:
        criterioScoreId:
          type: integer
          format: int32
        centroDistribuicaoId:
          type: integer
          format: int32
        valor:
          type: number
          format: double
    GestorScriptsGet:
      type: object
      properties:
        scriptId:
          type: integer
          format: int64
        nome:
          type: string
        posicao:
          type: string
          enum:
          - HeaderPrimeiraLinha
          - HeaderUltimaLinha
          - BodyPrimeiraLinha
          - BodyUltimaLinha
          - FooterPrimeiraLinha
          - FooterUltimeLinha
        tipoPagina:
          type: string
          enum:
          - Todas
          - Home
          - Busca
          - Categoria
          - Fabricante
          - Estaticas
          - Produto
          - Carrinho
        dataInicial:
          type: string
          format: date-time
        datafinal:
          type: string
          format: date-time
        ativo:
          type: boolean
        prioridade:
          type: integer
          format: int32
    Fbits.API.Contratos.GestorScripts.PostScript:
      required:
      - ativo
      - conteudo
      - dataFinal
      - dataInicial
      - identificadorPagina
      - nome
      - posicao
      - prioridade
      - publicado
      - tipoPagina
      type: object
      properties:
        nome:
          type: string
          description: Nome do script
        dataInicial:
          type: string
          description: Data inicial do script
          format: date-time
        dataFinal:
          type: string
          description: Data final do script
          format: date-time
        ativo:
          type: boolean
          description: Status do script
        prioridade:
          type: integer
          description: Prioridade do script
          format: int32
        posicao:
          type: string
          description: Posição do script
          enum:
          - HeaderPrimeiraLinha
          - HeaderUltimaLinha
          - BodyPrimeiraLinha
          - BodyUltimaLinha
          - FooterPrimeiraLinha
          - FooterUltimeLinha
        tipoPagina:
          type: string
          description: Tipo da página do script
          enum:
          - Todas
          - Home
          - Busca
          - Categoria
          - Fabricante
          - Estaticas
          - Produto
          - Carrinho
        identificadorPagina:
          type: string
          description: Identificador da página
        conteudo:
          type: string
          description: Conteudo do script
        publicado:
          type: boolean
          description: Status do script
      description: Insere um novo script.
    Fbits.API.Contratos.GestorScripts.PutScript:
      required:
      - ativo
      - conteudo
      - dataFinal
      - dataInicial
      - identificadorPagina
      - nome
      - posicao
      - prioridade
      - publicado
      - tipoPagina
      type: object
      properties:
        nome:
          type: string
          description: Nome do script
        dataInicial:
          type: string
          description: Data inicial do script
          format: date-time
        dataFinal:
          type: string
          description: Data final do script
          format: date-time
        ativo:
          type: boolean
          description: Status do script
        prioridade:
          type: integer
          description: Prioridade do script
          format: int32
        posicao:
          type: string
          description: Posição do script
          enum:
          - HeaderPrimeiraLinha
          - HeaderUltimaLinha
          - BodyPrimeiraLinha
          - BodyUltimaLinha
          - FooterPrimeiraLinha
          - FooterUltimeLinha
        tipoPagina:
          type: string
          description: Tipo da página do script
          enum:
          - Todas
          - Home
          - Busca
          - Categoria
          - Fabricante
          - Estaticas
          - Produto
          - Carrinho
        identificadorPagina:
          type: string
          description: Identificador da página
        conteudo:
          type: string
          description: Conteudo do script
        publicado:
          type: boolean
          description: Status do script
      description: ""
    ConteudoVersaoScript:
      type: object
      properties:
        scriptId:
          type: integer
          format: int64
        versaoId:
          type: integer
          format: int64
        conteudo:
          type: string
    VersaoGestorScript:
      type: object
      properties:
        versaoId:
          type: integer
          format: int64
        scriptId:
          type: integer
          format: int64
        dataCadastro:
          type: string
          format: date-time
        identificadorPagina:
          type: string
        publicado:
          type: boolean
        usuario:
          type: string
    Fbits.API.Contratos.GestorScripts.PostVersao:
      required:
      - conteudo
      - identificadorPagina
      - publicado
      type: object
      properties:
        identificadorPagina:
          type: string
          description: ""
        conteudo:
          type: string
          description: ""
        publicado:
          type: boolean
          description: ""
      description: ""
    GrupoListaComprasPost:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
    GrupoListaComprasPut:
      type: object
      properties:
        grupoListaCompraId:
          type: integer
          format: int32
        nome:
          type: string
        descricao:
          type: string
    GrupoListaCompra:
      type: object
      properties:
        grupoListaCompraId:
          type: integer
          format: int64
        aliasHotSite:
          type: string
        nome:
          type: string
        descricao:
          type: string
    GrupoPersonalizacaoGet:
      type: object
      properties:
        grupoPersonalizacaoId:
          type: integer
          format: int64
        nome:
          type: string
        ativo:
          type: boolean
        obrigatorio:
          type: boolean
    GrupoPersonalizacaoProdutosGet:
      type: object
      properties:
        produtoId:
          type: integer
          format: int64
        nome:
          type: string
        alias:
          type: string
    GrupoPersonalizacaoProdutosPost:
      type: object
      properties:
        produtoId:
          type: integer
          format: int64
    Fbits.API.Contratos.Hotsite.HotsitePost:
      required:
      - nome
      - tamanhoPagina
      - templateId
      - url
      type: object
      properties:
        nome:
          type: string
          description: Nome do hotsite.
        dataInicio:
          type: string
          description: Data/hora em que o hotsite começará a ser exibido.
          format: date-time
        dataFinal:
          type: string
          description: Data/Hora (último dia) em que o hotsite não será mais exibido.
          format: date-time
        url:
          type: string
          description: "Informe a url do hotsite. Por exemplo, se o site for  'busca.meusite.com.br',\
            \ e o hotsite desejado for  'busca.meusite.com.br/hotsite/natal' informe\
            \ neste campo somente a url 'hotsite/natal', sem a barra '/' no início."
        tamanhoPagina:
          type: integer
          description: Informe o número de produtos que deve ser exibido por página
          format: int32
        templateId:
          type: integer
          description: "Informe o identificador do template que será utilizado. Caso\
            \ não saiba o identificador do template desejado, o mesmo pode ser buscado\
            \ no endpoint GET/Templates."
          format: int32
        ordenacao:
          type: string
          description: Informe qual será a ordenação dos Produtos no Hotsite
          enum:
          - Nenhuma
          - NomeCrescente
          - NomeDecrescente
          - Lancamento
          - MenorPreco
          - MaiorPreco
          - MaisVendidos
          - MaioresDescontos
          - Aleatorio
          - MenorEstoque
          - MaiorEstoque
        listaProdutos:
          $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.ListaProdutos'
        seo:
          $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.Seo'
        banners:
          type: array
          description: Lista de identificadores de banners a serem vinculados ao hotsite.
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.HotsiteBannerPost'
        conteudos:
          type: array
          description: Lista de identificadores de conteúdos a serem vinculados ao
            hotsite.
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.ConteudoHotsite'
        ativo:
          type: boolean
          description: Status do hotsite.
      description: ""
    Fbits.API.Contratos.Hotsite.ListaProdutos:
      type: object
      properties:
        expressao:
          type: string
          description: "Você pode utilizar essa opção para gerar um hotsite utilizando\
            \ uma expressão de busca. Ao utilizá-la, os produtos adicionados nos outros\
            \ modos de criação de hotsite serão ignorados."
        produtos:
          type: array
          description: "Caso não utilize a opção por expressão, você pode indicar\
            \ por uma lista de identificadores, quais pordutos quer que apareção no\
            \ hotsite."
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.Produto'
      description: ""
    Fbits.API.Contratos.Hotsite.Seo:
      type: object
      properties:
        titulo:
          type: string
          description: Informe o Título que será exibido quando o Hotsite for acessado
        metas:
          type: array
          description: "Não se esqueça! Além do texto livre, você pode utilizar as\
            \ tags [Nome.Hotsite] e [Fbits.NomeLoja] para o cadastro das MetaTags\
            \ e Title!"
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Hotsite.Meta'
      description: ""
    Fbits.API.Contratos.Hotsite.HotsiteBannerPost:
      type: object
      properties:
        bannerId:
          type: integer
          description: Identificador do banner.
          format: int32
      description: ""
    Fbits.API.Contratos.Hotsite.ConteudoHotsite:
      required:
      - conteudoId
      type: object
      properties:
        conteudoId:
          type: integer
          description: Identificador do conteúdo
          format: int32
      description: ""
    Fbits.API.Contratos.Hotsite.Produto:
      required:
      - produtoId
      type: object
      properties:
        produtoId:
          type: integer
          description: Identificador do produto a ser mostrado no hotsite.
          format: int64
        ordem:
          type: integer
          description: ""
          format: int32
      description: ""
    Fbits.API.Contratos.Hotsite.Meta:
      type: object
      properties:
        conteudo:
          type: string
          description: "Informe os dados da Metatag\r\n(Max Length: 3000)"
        nome:
          type: string
          description: "Informe os dados da Metatag\r\n(Max Length: 100)"
        httpEquiv:
          type: string
          description: "Informe os dados da Metatag\r\n(Max Length: 100)"
        scheme:
          type: string
          description: "Informe os dados da Metatag\r\n(Max Length: 100)"
      description: ""
    Hotsite:
      type: object
      properties:
        hotsiteId:
          type: integer
          format: int64
        nome:
          type: string
        ativo:
          type: boolean
        template:
          type: string
        dataCriacao:
          type: string
          format: date-time
        dataInicio:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
        url:
          type: string
        tamanhoPagina:
          type: integer
          format: int32
        templateId:
          type: integer
          format: int32
        ordenacao:
          type: string
          enum:
          - Nenhuma
          - NomeCrescente
          - NomeDecrescente
          - Lancamento
          - MenorPreco
          - MaiorPreco
          - MaisVendidos
          - MaioresDescontos
          - Aleatorio
          - MenorEstoque
          - MaiorEstoque
        listaProdutos:
          $ref: '#/components/schemas/ListaProdutosHotsite'
        seo:
          $ref: '#/components/schemas/SeoHotsite'
        banners:
          type: array
          items:
            $ref: '#/components/schemas/HotsiteBanner'
        conteudos:
          type: array
          items:
            $ref: '#/components/schemas/HotsiteConteudo'
    ListaProdutosHotsite:
      type: object
      properties:
        expressao:
          type: string
        produtos:
          type: array
          items:
            $ref: '#/components/schemas/ProdutoHotsite'
    SeoHotsite:
      type: object
      properties:
        seoHotsiteId:
          type: integer
          format: int32
        hotsiteId:
          type: integer
          format: int64
        titulo:
          type: string
        metas:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
    HotsiteBanner:
      type: object
      properties:
        bannerId:
          type: integer
          format: int64
    HotsiteConteudo:
      type: object
      properties:
        conteudoId:
          type: integer
          format: int64
    ProdutoHotsite:
      type: object
      properties:
        produtoId:
          type: integer
          format: int64
        ordem:
          type: integer
          format: int32
    Meta:
      type: object
      properties:
        conteudo:
          type: string
        nome:
          type: string
        httpEquiv:
          type: string
        scheme:
          type: string
    Fbits.API.Contratos.Hotsite.AtualizarStatusHotsite:
      required:
      - ativo
      type: object
      properties:
        ativo:
          type: boolean
          description: Status do hotsite.
    ListaComprasDadosBasicos:
      type: object
      properties:
        nome:
          type: string
        dataCadastro:
          type: string
          format: date-time
        exibirQuantidade:
          type: boolean
        ativo:
          type: boolean
        exibirProdutosIndisponiveis:
          type: boolean
        gruposListaCompraId:
          type: array
          items:
            type: integer
            format: int32
        tituloDescricao:
          type: string
        descricao:
          type: string
    ListaComprasSelecionar:
      type: object
      properties:
        listaCompraId:
          type: integer
          format: int32
        nome:
          type: string
        alias:
          type: string
        ativo:
          type: boolean
        dataCadastro:
          type: string
          format: date-time
        exibirQuantidade:
          type: boolean
        exibirProdutosIndisponiveis:
          type: boolean
        grupoListaCompras:
          type: array
          items:
            $ref: '#/components/schemas/GrupoListaComprasSelecionar'
        detalhes:
          $ref: '#/components/schemas/DetalheListaComprasSelecionar'
        imagens:
          type: array
          items:
            $ref: '#/components/schemas/ListaComprasImagensSelecionar'
        produtos:
          type: array
          items:
            $ref: '#/components/schemas/ListaComprasProdutosSelecionar'
        seos:
          $ref: '#/components/schemas/ListaComprasSEOsSelecionar'
    GrupoListaComprasSelecionar:
      type: object
      properties:
        grupoListaCompraId:
          type: integer
          format: int32
        nome:
          type: string
        aliasHotSite:
          type: string
    DetalheListaComprasSelecionar:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
    ListaComprasImagensSelecionar:
      type: object
      properties:
        listaCompraFotoId:
          type: integer
          format: int32
        url:
          type: string
        ordem:
          type: integer
          format: int32
    ListaComprasProdutosSelecionar:
      type: object
      properties:
        produtoId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int32
        ordem:
          type: integer
          format: int32
        exibirParent:
          type: boolean
    ListaComprasSEOsSelecionar:
      type: object
      properties:
        title:
          type: string
        metatags:
          type: array
          items:
            $ref: '#/components/schemas/ListaComprasSEOMetatagSelecionar'
    ListaComprasSEOMetatagSelecionar:
      type: object
      properties:
        listaCompraSEOId:
          type: integer
          format: int64
        content:
          type: string
        httpequiv:
          type: string
        name:
          type: string
        scheme:
          type: string
    ListaComprasProdutosPost:
      type: object
      properties:
        produtoId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int32
        ordem:
          type: integer
          format: int32
        exibirParent:
          type: boolean
    ListaComprasSEOPost:
      type: object
      properties:
        title:
          type: string
        metatags:
          type: array
          items:
            $ref: '#/components/schemas/ListaCompraSEOMetatagPost'
    ListaCompraSEOMetatagPost:
      type: object
      properties:
        content:
          type: string
        httpEquiv:
          type: string
        name:
          type: string
        scheme:
          type: string
    ListaComprasSeoTitle:
      type: object
      properties:
        title:
          type: string
    ListaComprasFotoPost:
      type: object
      properties:
        base64:
          type: string
        formato:
          type: string
    ListaComprasImagemOrdem:
      type: object
      properties:
        listaComprasFotoId:
          type: integer
          format: int32
        ordem:
          type: integer
          format: int32
    Loja:
      type: object
      properties:
        nome:
          type: string
        urlSite:
          type: string
        urlCarrinho:
          type: string
    Fbits.API.Contratos.LojaFisica.LojaFisicaPost:
      type: object
      properties:
        lojaId:
          type: integer
          description: ""
          format: int32
        nome:
          type: string
          description: ""
        ddd:
          type: integer
          description: ""
          format: int32
        telefone:
          type: string
          description: ""
        email:
          type: string
          description: ""
        cep:
          type: string
          description: ""
        logradouro:
          type: string
          description: ""
        numero:
          type: string
          description: ""
        complemento:
          type: string
          description: ""
        bairro:
          type: string
          description: ""
        cidade:
          type: string
          description: ""
        estadoId:
          type: integer
          description: ""
          format: int32
        prazoEntrega:
          type: integer
          description: ""
          format: int32
        prazoMaximoRetirada:
          type: integer
          description: ""
          format: int32
        ativo:
          type: boolean
          description: ""
        valido:
          type: boolean
          description: ""
        textoComplementar:
          type: string
          description: ""
        retirarNaLoja:
          type: boolean
          description: ""
        latitude:
          type: number
          description: ""
          format: double
        longitude:
          type: number
          description: ""
          format: double
        centroDistribuicaoId:
          type: integer
          description: "(Obsolete)\r\nPropriedade obsoleta. Utilize o campo 'centroDistribuicao'"
          format: int32
        centroDistribuicao:
          type: array
          description: Lista com os Identificadores dos centros de distribuição que
            serão vinculados a loja física
          items:
            $ref: '#/components/schemas/LojaFisicaCentroDistribuicao'
      description: ""
    LojaFisicaCentroDistribuicao:
      type: object
      properties:
        centroDistribuicaoId:
          type: integer
          format: int32
        prazoEntrega:
          type: integer
          format: int32
    LojaFisica:
      type: object
      properties:
        lojaId:
          type: integer
          format: int32
        nome:
          type: string
        ddd:
          type: integer
          format: int32
        telefone:
          type: string
        email:
          type: string
        cep:
          type: string
        logradouro:
          type: string
        numero:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estadoId:
          type: integer
          format: int32
        prazoEntrega:
          type: integer
          format: int32
        prazoMaximoRetirada:
          type: integer
          format: int32
        ativo:
          type: boolean
        valido:
          type: boolean
        textoComplementar:
          type: string
        retirarNaLoja:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        centroDistribuicaoId:
          type: integer
          format: int32
        centroDistribuicao:
          type: array
          items:
            $ref: '#/components/schemas/LojaFisicaCentroDistribuicao'
    Fbits.API.Contratos.LojaFisica.LojaFisicaGetRangeCep:
      type: object
      properties:
        rangeCepId:
          type: integer
          description: Id do range de cep
          format: int64
        nome:
          type: string
          description: Nome do range de cep
        cepInicial:
          type: string
          description: Cep inicial do range
        cepFinal:
          type: string
          description: Cep final do range
    Fbits.API.Contratos.LojaFisica.LojaFisicaPostRangeCep:
      required:
      - cepFinal
      - cepInicial
      - nome
      type: object
      properties:
        nome:
          type: string
          description: Nome do range de cep.
        cepInicial:
          type: string
          description: "Cep inicial do range. Formato: 00.000-000"
        cepFinal:
          type: string
          description: "Cep final do range. Formato: 00.000-000"
    Fbits.API.Contratos.LojaFisica.LojaFisicaDeleteRangeCep:
      required:
      - rangeCepId
      type: object
      properties:
        rangeCepId:
          type: integer
          description: Id da faixa de cep a ser deletado
          format: int32
    Estado:
      type: object
      properties:
        estadoId:
          type: integer
          format: int32
        nome:
          type: string
        sigla:
          type: string
        regiao:
          type: string
    MidiaInvestimentoApiModel:
      type: object
      properties:
        id:
          type: string
        investimento:
          type: number
          format: double
        nome:
          type: string
        tipo:
          type: string
    MidiaApiModel:
      type: object
      properties:
        dias:
          $ref: '#/components/schemas/Dias'
        id:
          type: integer
          format: int32
        nome:
          type: string
        tipo:
          type: string
    Dias:
      type: object
      properties:
        diaMidiaApiModel:
          type: array
          items:
            $ref: '#/components/schemas/DiaMidiaApiModel'
    DiaMidiaApiModel:
      type: object
      properties:
        dia:
          type: string
          format: date-time
        investimento:
          $ref: '#/components/schemas/Investimento'
        pedidos:
          $ref: '#/components/schemas/Pedidos'
        roi:
          $ref: '#/components/schemas/ROI'
        receita:
          $ref: '#/components/schemas/Receita'
        visitas:
          $ref: '#/components/schemas/Visitas'
    Investimento:
      type: object
      properties:
        meta:
          type: number
          format: double
        realizado:
          type: number
          format: double
    Pedidos:
      type: object
      properties:
        meta:
          type: number
          format: double
        realizado:
          type: number
          format: double
    ROI:
      type: object
      properties:
        meta:
          type: number
          format: double
        realizado:
          type: number
          format: double
    Receita:
      type: object
      properties:
        meta:
          type: number
          format: double
        realizado:
          type: number
          format: double
    Visitas:
      type: object
      properties:
        meta:
          type: number
          format: double
        realizado:
          type: number
          format: double
    Parceiro:
      required:
      - ativo
      - nome
      - tipoEscopo
      type: object
      properties:
        parceiroId:
          type: integer
          format: int64
        marketPlaceId:
          type: integer
          format: int64
        nome:
          type: string
        tabelaPrecoId:
          type: integer
          format: int64
        portfolioId:
          type: integer
          format: int64
        tipoEscopo:
          type: string
          enum:
          - Aberto
          - Fechado
          - PorCliente
        ativo:
          type: boolean
        isMarketPlace:
          type: boolean
        origem:
          type: string
        alias:
          type: string
        nomeMarketplace:
          type: string
    ParceiroPost:
      required:
      - ativo
      - nome
      - tipoEscopo
      type: object
      properties:
        nome:
          type: string
        tabelaPrecoId:
          type: integer
          format: int64
        portfolioId:
          type: integer
          format: int64
        tipoEscopo:
          type: string
          enum:
          - Aberto
          - Fechado
          - PorCliente
        ativo:
          type: boolean
        isMarketPlace:
          type: boolean
        origem:
          type: string
        alias:
          type: string
        nomeMarketplace:
          type: string
    ResultadoUsuarioParceiro:
      type: object
      properties:
        usuarioId:
          type: integer
          format: int64
        email:
          type: string
        ativo:
          type: boolean
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
        vinculoVitalicio:
          type: boolean
    NovoContratoGet.Pedido:
      type: object
      properties:
        pedidoId:
          type: integer
          description: Número do pedido
          format: int64
        situacaoPedidoId:
          type: integer
          description: Id da situação atual do pedido
          format: int64
        tipoRastreamentoPedido:
          type: string
          description: Tipo do rastreamento do pedido
          enum:
          - SemRastreamento
          - Pedido
          - ProdutoVariante
        transacaoId:
          type: integer
          description: Id da transação do pedido
          format: int64
        data:
          type: string
          description: Data do pedido
          format: date-time
        dataPagamento:
          type: string
          description: Data de pagamento do pedido
          format: date-time
        dataUltimaAtualizacao:
          type: string
          description: Data da última atualização de status do pedido
          format: date-time
        valorFrete:
          type: number
          description: Valor do frete do pedido
          format: double
        valorTotalPedido:
          type: number
          description: Valor total do pedido
          format: double
        valorDesconto:
          type: number
          description: Valor do desconto do pedido
          format: double
        valorDebitoCC:
          type: number
          description: Valor do desconto aplicado na conta corrente
          format: double
        cupomDesconto:
          type: string
          description: Número do cupom de desconto do pedido
        marketPlacePedidoId:
          type: string
          description: Número interno do pedido do marketplace
        marketPlacePedidoSiteId:
          type: string
          description: Número site do pedido do marketplace
        canalId:
          type: integer
          description: Id do canal de venda do pedido
          format: int64
        canalNome:
          type: string
          description: Nome do canal cadastrado no FOC
        canalOrigem:
          type: string
          description: Nome do canal de venda do pedido
        retiradaLojaId:
          type: integer
          description: Id do local de retirada do pedido
          format: int32
        isPedidoEvento:
          type: boolean
          description: Se é um pedido de algum evento
        usuario:
          $ref: '#/components/schemas/NovoContratoGet.Usuario'
        pedidoEndereco:
          type: array
          description: Dados dos endereços do pedido
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoEndereco'
        frete:
          $ref: '#/components/schemas/NovoContratoGet.PedidoFrete'
        itens:
          type: array
          description: Produtos do pedido
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProduto'
        assinatura:
          type: array
          description: Dados da assinatura do pedido
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoAssinatura'
        pagamento:
          type: array
          description: Dados de pagamento do pedido
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoPagamento'
        observacao:
          type: array
          description: Dados de obervações do pedido
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoObservacao'
        valorCreditoFidelidade:
          type: number
          description: Valor do Credito de Fidelidade
          format: double
        valido:
          type: boolean
          description: Informa se o pedido foi validado
        valorSubTotalSemDescontos:
          type: number
          description: Valor do pedido sem considerar descontos. Irá retornar apenas
            se o cliente utilizar a API de dados externos
          format: double
        pedidoSplit:
          type: array
          description: Ids dos pedidos que fazem parte do Split de pedido
          items:
            type: integer
            format: int64
        usuarioMasterId:
          type: integer
          format: int64
        metadados:
          type: array
          description: Metadados que fazem parte do pedido
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoMetadado'
        transacaoPaiId:
          type: integer
          description: Id da Transação Pai do pedido
          format: int64
        detalhesContaCorrente:
          type: array
          description: Lista de ContaCorrentes vinculado ao Pedido
          items:
            $ref: '#/components/schemas/DetalhesContaCorrente'
        pedidoPai:
          type: integer
          description: Id do pedido pai
          format: int64
        isChangeOrder:
          type: boolean
      description: Dados do pedido
    NovoContratoGet.Usuario:
      type: object
      properties:
        usuarioId:
          type: integer
          description: Id do cliente
          format: int64
        grupoInformacaoCadastral:
          type: array
          description: Dados do grupo cadastral
          items:
            $ref: '#/components/schemas/NovoContratoGet.UsuarioGrupoInformacaoCadastral'
        tipoPessoa:
          type: string
          description: Tipo de cliente
          enum:
          - Fisica
          - Juridica
        origemContato:
          type: string
          description: Origem do cliente
          enum:
          - Google
          - Bing
          - Jornal
          - PatrocinioEsportivo
          - RecomendacaoAlguem
          - Revista
          - SiteInternet
          - Televisao
          - Outro
          - UsuarioImportadoViaAdmin
          - PayPalExpress
        tipoSexo:
          type: string
          description: Sexo do cliente
          enum:
          - Undefined
          - Masculino
          - Feminino
        nome:
          type: string
          description: Nome do cliente
        cpf:
          type: string
          description: Número CPF do cliente
        email:
          type: string
          description: E-mail do cliente
        rg:
          type: string
          description: RG do cliente
        telefoneResidencial:
          type: string
          description: Número do telefone principal do cliente
        telefoneCelular:
          type: string
          description: Número do telefone secudário do cliente
        telefoneComercial:
          type: string
          description: Número do telefone comercial do cliente
        dataNascimento:
          type: string
          description: Data de nascimento do cliente
          format: date-time
        razaoSocial:
          type: string
          description: Razão social da empresa
        cnpj:
          type: string
          description: Número CNPJ da empresa
        inscricaoEstadual:
          type: string
          description: Inscrição estadual da empresa
        responsavel:
          type: string
          description: Responsável pelo pedido
        dataCriacao:
          type: string
          description: Data de cadastro do cliente
          format: date-time
        dataAtualizacao:
          type: string
          description: Data de atualização de cadastro do cliente
          format: date-time
        revendedor:
          type: boolean
          description: Se o cliente é um revendedor
        listaInformacaoCadastral:
          type: array
          description: Dados do grupo cadastral
          items:
            $ref: '#/components/schemas/NovoContratoGet.UsuarioGrupoInformacaoCadastral'
      description: Dados de um usuário de um pedido
    NovoContratoGet.PedidoEndereco:
      type: object
      properties:
        tipo:
          type: string
          description: Tipo do endereço do pedido
          enum:
          - Entrega
          - Cobranca
        nome:
          type: string
          description: Nome do endereço
        endereco:
          type: string
          description: Endereço do pedido
        numero:
          type: string
          description: Número do endereço do pedido
        complemento:
          type: string
          description: Complemento do endereço do pedido
        referencia:
          type: string
          description: Referência do endereço do pedido
        cep:
          type: string
          description: CEP do endereço do pedido
        tipoLogradouro:
          type: string
          description: Tipo do logradouro endereço do pedido
        logradouro:
          type: string
          description: Logradouro do endereço do pedido
        bairro:
          type: string
          description: Bairro do endereço do pedido
        cidade:
          type: string
          description: Cidade do endereço do pedido
        estado:
          type: string
          description: Estado do endereço do pedido
        pais:
          type: string
          description: País endereço do pedido
      description: Dados do endereço do pedido
    NovoContratoGet.PedidoFrete:
      type: object
      properties:
        freteContratoId:
          type: integer
          description: Id do contrato do frete do pedido
          format: int64
        freteContrato:
          type: string
          description: Nome do Frete
        referenciaConector:
          type: string
          description: Referencia do Conector
        valorFreteEmpresa:
          type: number
          description: Valor do frete do pedido para a empresa
          format: double
        valorFreteCliente:
          type: number
          description: Valor do frete do pedido para o cliente
          format: double
        peso:
          type: number
          description: Peso do frete do pedido
          format: double
        pesoCobrado:
          type: number
          description: Peso cobrado do frete do pedido
          format: double
        volume:
          type: number
          description: Volume do frete do pedido
          format: double
        volumeCobrado:
          type: number
          description: Volume cobrado do frete do pedido
          format: double
        prazoEnvio:
          type: integer
          description: Número do prazo em dias de envio do pedido
          format: int32
        prazoHorasEnvio:
          type: integer
          description: Número do prazo em horas de envio do pedido
          format: int32
        prazoEnvioTexto:
          type: string
          description: Descrição do prazo de envio do pedido
        retiradaLojaId:
          type: integer
          description: Id da retirada da loja
          format: int64
        centrosDistribuicao:
          type: array
          description: Dados dos centros de distribuições do pedido
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoFreteCentroDistribuicao'
        servico:
          $ref: '#/components/schemas/NovoContratoGet.PedidoFreteServico'
        retiradaAgendada:
          $ref: '#/components/schemas/NovoContratoGet.PedidoFreteRetiradaAgendada'
        agendamento:
          $ref: '#/components/schemas/NovoContratoGet.PedidoFreteAgendamento'
        informacoesAdicionais:
          type: array
          description: Dados das informaçãoes adicionais do frete
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoFreteInformacoesAdicionais'
      description: Dados do frete do pedido
    NovoContratoGet.PedidoProduto:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          description: Id do produto variante do pedido
          format: int64
        sku:
          type: string
          description: SKU do produto do pedido
        ean:
          type: string
          description: EAN do produto do pedido
        nome:
          type: string
          description: Nome do produto do pedido
        quantidade:
          type: integer
          description: Quantidade do produto do pedido
          format: int32
        precoCusto:
          type: number
          description: Preço de custo do produto do pedido
          format: double
        precoVenda:
          type: number
          description: Preço de vendo do produto do pedido
          format: double
        valorItem:
          type: number
          description: Valor item do produto do pedido
          format: double
        valorItemArredondado:
          type: number
          description: Valor item arredondado do produto do pedido
          format: double
        isBrinde:
          type: boolean
          description: Se o produto é brinde
        valorAliquota:
          type: number
          description: Valor da alíquota do produto
          format: double
        isMarketPlace:
          type: boolean
          description: Se é um produto de marketplace
        precoPor:
          type: number
          description: '"PrecoPor" do produto do pedido'
          format: double
        desconto:
          type: number
          description: '"Desconto" do produto do pedido'
          format: double
        totais:
          $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoPrecoTotais'
        ajustes:
          type: array
          description: Dados de ajustes de preço do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoAjuste'
        centroDistribuicao:
          type: array
          description: Dados de centro de distribuição do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoCentroDistribuicao'
        valoresAdicionais:
          type: array
          description: Dados de valores adicionais do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoValoresAdicionais'
        atributos:
          type: array
          description: Dados de atributos do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoAtributo'
        embalagens:
          type: array
          description: Dados de embalagem do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoEmbalagem'
        personalizacoes:
          type: array
          description: Dados de personalização do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoPersonalizacao'
        frete:
          type: array
          description: "Dados de frete do produto (Obsoleto: Utilizar o frete do pedido.)"
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoFrete'
        dadosProdutoEvento:
          $ref: '#/components/schemas/NovoContratoGet.DadosEventoPedidoProdutoAPI'
        formulas:
          type: array
          description: Dados de fórmulas de aliquotas do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoFormula'
        seller:
          $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoSeller'
        metadados:
          type: array
          description: Dados dos metadados do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoMetadado'
        situacaoPedidoProdutoId:
          type: integer
          description: Dados da situacao do produto
          format: int32
        imagens:
          type: array
          description: Dados da imagem do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoImagem'
        categorias:
          type: array
          description: Dados da categoria do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoProdutoCategoria'
        etiqueta:
          type: integer
          format: int32
        etiquetaDescricao:
          type: string
      description: Produtos do pedido
    NovoContratoGet.PedidoAssinatura:
      type: object
      properties:
        assinaturaId:
          type: integer
          description: Número interno da assinatura
          format: int64
        grupoAssinaturaId:
          type: integer
          description: Id do grupo de assinatura do pedido
          format: int64
        tipoPeriodo:
          type: string
          description: Tipo de período da assinatura do pedido
        tempoPeriodo:
          type: integer
          description: Tempo do período da assinatura do pedido
          format: int32
        percentualDesconto:
          type: integer
          description: Percentual de desconto da assinatura do pedido
          format: int32
      description: Dados da assinatura do pedido
    NovoContratoGet.PedidoPagamento:
      type: object
      properties:
        formaPagamentoId:
          type: integer
          description: Id da forma de pagamento do pedido
          format: int32
        numeroParcelas:
          type: integer
          description: Número de parcelas da forma de pagamento do pedido
          format: int32
        valorParcela:
          type: number
          description: Valor das parcelas da forma de pagamento do pedido
          format: double
        valorDesconto:
          type: number
          description: Valor de desconto da forma de pagamento do pedido
          format: double
        valorJuros:
          type: number
          description: Valor do juros da forma de pagamento do poedido
          format: double
        valorTotal:
          type: number
          description: Valor total da forma de pagamento do pedido
          format: double
        boleto:
          $ref: '#/components/schemas/NovoContratoGet.PedidoPagamentoBoleto'
        pix:
          $ref: '#/components/schemas/NovoContratoGet.PedidoPagamentoPix'
        cartaoCredito:
          type: array
          description: Dados do cartão de crédito
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoPagamentoCartaoCredito'
        pagamentoStatus:
          type: array
          description: Dados do status de pagamento
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoPagamentoStatus'
        informacoesAdicionais:
          type: array
          description: Dados das informaçãoes adicionais da forma de pagemento
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoPagamentoInformacoesAdicionais'
      description: Dados de pagamento do pedido
    NovoContratoGet.PedidoObservacao:
      type: object
      properties:
        observacao:
          type: string
          description: Observação do pedido
        usuario:
          type: string
          description: Usuário da observação do pedido
        data:
          type: string
          description: Data da observação do pedido
          format: date-time
        publica:
          type: boolean
          description: Informa se a informação é publica (se vai ser visualizada pelo
            cliente) ou privada (visualizada apenas pelo logista)
      description: Dados de obervações do pedido
    NovoContratoGet.PedidoMetadado:
      type: object
      properties:
        chave:
          type: string
          description: Chave do metadado do pedido
        valor:
          type: string
          description: Valor do metadado do pedido
      description: Dados de metadado do pedido
    DetalhesContaCorrente:
      type: object
      properties:
        contaCorrenteId:
          type: integer
          format: int32
        tipoContaCorrenteId:
          type: integer
          format: int32
        descricaoTipoConta:
          type: string
        valor:
          type: number
          format: double
        referencias:
          type: array
          items:
            type: string
    NovoContratoGet.UsuarioGrupoInformacaoCadastral:
      type: object
      properties:
        chave:
          type: string
          description: Nome do campo do cadastro
        valor:
          type: string
          description: Valor inserido pelo cliente
      description: Dados de informações cadastral do cliente
    NovoContratoGet.PedidoFreteCentroDistribuicao:
      type: object
      properties:
        freteContratoId:
          type: integer
          description: Id do contrato do frete do pedido
          format: int64
        freteContrato:
          type: string
          description: Nome do Frete
        valorFreteEmpresa:
          type: number
          description: Valor do frete do pedido para a empresa
          format: double
        valorFreteCliente:
          type: number
          description: Valor do frete do pedido para o cliente
          format: double
        peso:
          type: number
          description: Peso do frete do pedido
          format: double
        pesoCobrado:
          type: number
          description: Peso cobrado do frete do pedido
          format: double
        volume:
          type: number
          description: Volume do frete do pedido
          format: double
        volumeCobrado:
          type: number
          description: Volume cobrado do frete do pedido
          format: double
        prazoEnvio:
          type: integer
          description: Número do prazo de envio do pedido
          format: int32
        prazoHorasEnvio:
          type: integer
          description: Número do prazo em horas de envio do pedido
          format: int32
        prazoEnvioTexto:
          type: string
          description: Descrição do prazo de envio do pedido
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição do pedido
          format: int32
        cotacoesFilhas:
          type: array
          description: Lista de cotações filhas
          items:
            $ref: '#/components/schemas/NovoContratoGet.PedidoFreteCotacaoFilha'
      description: Dados do centro de distribuição do pedido
    NovoContratoGet.PedidoFreteServico:
      type: object
      properties:
        servicoId:
          type: integer
          description: Id do serviço do frete do pedido
          format: int64
        nome:
          type: string
          description: Nome do serviço do frete do pedido
        transportadora:
          type: string
          description: Nome da transportadora do pedido
        prazo:
          type: integer
          description: Prazo de entrega do pedido
          format: int32
        servicoNome:
          type: string
          description: Nome do serviço de frete do pedido
        preco:
          type: number
          description: Valor do serviço de entrega do pedido
          format: double
        servicoTransporte:
          type: integer
          description: Nome do serviço de transporte do pedido
          format: int32
        codigo:
          type: integer
          description: Código do serviço do frete do pedido
          format: int32
        servicoMeta:
          type: string
          description: Informação de serviço meta do frete do pedido
        custo:
          type: number
          description: Custo do serviço de entrega do pedido
          format: double
        token:
          type: string
          description: Toekn fornecido pelo serviço de entrega
      description: Dados do serviço de frete do pedido
    NovoContratoGet.PedidoFreteRetiradaAgendada:
      type: object
      properties:
        lojaId:
          type: integer
          description: Id da loja de retirada do pedido
          format: int64
        retiradaData:
          type: string
          description: Data da retirado do pedido
          format: date-time
        retiradaPeriodo:
          type: string
          description: Periódo da retirada do pedido
        nome:
          type: string
          description: Nome de quem retirou o pedido
        documento:
          type: string
          description: Documento de quem retirou o pedido
        codigoRetirada:
          type: string
          description: Código de retirada do pedido
      description: Dados da retirada agendada do pedido
    NovoContratoGet.PedidoFreteAgendamento:
      type: object
      properties:
        de:
          type: string
          description: Inicio do período selecionado pelo cliente
          format: date-time
        ate:
          type: string
          description: Fim do período selecionado pelo cliente
          format: date-time
    NovoContratoGet.PedidoFreteInformacoesAdicionais:
      type: object
      properties:
        chave:
          type: string
          description: Nome da informação adicional
        valor:
          type: string
          description: Descrição da informação adicional
      description: Dados das informaçãoes adicionais do frete
    NovoContratoGet.PedidoProdutoPrecoTotais:
      type: object
      properties:
        precoCusto:
          type: number
          description: Preço de custo calculado.
          format: double
        precoVenda:
          type: number
          description: Preço de venda calculado.
          format: double
        precoPor:
          type: number
          description: Preço por calculado.
          format: double
        desconto:
          type: number
          description: Desconto calculado
          format: double
    NovoContratoGet.PedidoProdutoAjuste:
      type: object
      properties:
        tipo:
          type: string
          description: Tipo de ajuste do valor do produto
          enum:
          - Frete
          - Pricing
          - Atacarejo
          - Personalizacao
          - Embalagem
          - Promocao
          - PromocaoFrete
          - ContaCorrente
          - FormaPagamento
          - PromocaoProduto
          - TipoFreteProduto
          - Formula
        valor:
          type: number
          description: Valor do ajuste do produto
          format: double
        observacao:
          type: string
          description: Observação do ajuste do valor do produto
        nome:
          type: string
          description: Nome do ajuste
      description: Dados de ajustes de preço do produto
    NovoContratoGet.PedidoProdutoCentroDistribuicao:
      type: object
      properties:
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição do produto
          format: int32
        quantidade:
          type: integer
          description: Quantidade de produto que sairão deste centro de sistribuição
          format: int32
        situacaoProdutoId:
          type: integer
          description: Id da situação do produto
          format: int64
        valorFreteEmpresa:
          type: number
          description: Valor do frete pago pela loja
          format: double
        valorFreteCliente:
          type: number
          description: valor do frete pago pelo cliente
          format: double
      description: Dados de centro de distribuição do produto
    NovoContratoGet.PedidoProdutoValoresAdicionais:
      type: object
      properties:
        tipo:
          type: string
          description: Tipo de valor adicinal do produto
          enum:
          - Acrescimo
          - Decrescimo
        origem:
          type: string
          description: Origem do valor adicinal do produto
        texto:
          type: string
          description: Descrição do valor adicional do produto
        valor:
          type: number
          description: Valor adicional do produto
          format: double
      description: Dados de valores adicionais do produto
    NovoContratoGet.PedidoProdutoAtributo:
      type: object
      properties:
        produtoVarianteAtributoValor:
          type: string
          description: Descrição do atributo do produto
        produtoVarianteAtributoNome:
          type: string
          description: Nome do atributo do produto
      description: Dados de atributos do produto
    NovoContratoGet.PedidoProdutoEmbalagem:
      type: object
      properties:
        tipoEmbalagemId:
          type: integer
          description: Id do tipo de embalagem
          format: int64
        nomeTipoEmbalagem:
          type: string
          description: Nome do tipo de embalagem do produto
        mensagem:
          type: string
          description: Mensagem na embalagem do produto
        valor:
          type: number
          description: Valor da embalagem do produto
          format: double
        descricao:
          type: string
      description: Dados de embalagem do produto
    NovoContratoGet.PedidoProdutoPersonalizacao:
      type: object
      properties:
        nomePersonalizacao:
          type: string
          description: Nome da personaliza~ção do produto
        valorPersonalizacao:
          type: string
          description: Texto da personalização do produto
        valor:
          type: number
          description: Valor da personalização do produto
          format: double
      description: Dados de personalização do produto
    NovoContratoGet.PedidoProdutoFrete:
      type: object
      properties:
        quantidade:
          type: integer
          description: Quantidade de itens do frete do produto
          format: int32
        freteContratoId:
          type: integer
          description: Id do contrato do frete do pedido
          format: int64
        freteContrato:
          type: string
          description: Nome do Frete
        valorFreteEmpresa:
          type: number
          description: Valor do frete do pedido para a empresa
          format: double
        valorFreteCliente:
          type: number
          description: Valor do frete do pedido para o cliente
          format: double
        peso:
          type: number
          description: Peso do frete do pedido
          format: double
        pesoCobrado:
          type: number
          description: Peso cobrado do frete do pedido
          format: double
        volume:
          type: number
          description: Volume do frete do pedido
          format: double
        volumeCobrado:
          type: number
          description: Volume cobrado do frete do pedido
          format: double
        prazoEnvio:
          type: integer
          description: Número do prazo em dias de envio do pedido
          format: int32
        prazoHorasEnvio:
          type: integer
          description: Número do prazo em horas de envio do pedido
          format: int32
        prazoEnvioTexto:
          type: string
          description: Descrição do prazo de envio do pedido
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição
          format: int32
      description: "Dados de frete do produto (Obsoleto: Utilizar o frete do pedido.)"
    NovoContratoGet.DadosEventoPedidoProdutoAPI:
      type: object
      properties:
        tipoPresenteRecebimento:
          type: string
          description: Tipo de recebimento do presente
          enum:
          - None
          - Pendente
          - ReceberProduto
          - ReceberCredito
        eventoId:
          type: integer
          format: int64
        texto:
          type: string
      description: Dados de evento do produto
    NovoContratoGet.PedidoProdutoFormula:
      type: object
      properties:
        chaveAjuste:
          type: string
        valor:
          type: number
          format: double
        nome:
          type: string
        expressao:
          type: string
        expressaoInterpretada:
          type: string
        endPoint:
          type: string
    NovoContratoGet.PedidoProdutoSeller:
      type: object
      properties:
        sellerId:
          type: integer
          format: int64
        sellerNome:
          type: string
        sellerPedidoId:
          type: integer
          format: int64
    NovoContratoGet.PedidoProdutoMetadado:
      type: object
      properties:
        chave:
          type: string
          description: Chave do metadado do produto
        valor:
          type: string
          description: Valor do metadado do produto
      description: Dados de metadado do produto
    NovoContratoGet.PedidoProdutoImagem:
      type: object
      properties:
        nomeArquivo:
          type: string
          description: Nome da imagem
        url:
          type: string
          description: Url da imagem
      description: Dados da imagem do produto
    NovoContratoGet.PedidoProdutoCategoria:
      type: object
      properties:
        categoria:
          type: string
          description: Nome da categoria
        hierarquia:
          type: string
          description: Hierarquia da categoria
        categoriaPrincipal:
          type: boolean
          description: Indicativo de Categoria Principal
      description: Dados da categoria do produto
    NovoContratoGet.PedidoPagamentoBoleto:
      type: object
      properties:
        urlBoleto:
          type: string
          description: Url do boleto de pagamento
        codigoDeBarras:
          type: string
          description: Número do código de barras do boleto
      description: Dados do boleto
    NovoContratoGet.PedidoPagamentoPix:
      type: object
      properties:
        qrCode:
          type: string
          description: Código do QrCode
        qrCodeExpiracao:
          type: string
          description: Data de expiração do QrCode
          format: date-time
        qrCodeUrl:
          type: string
          description: Url do QrCode
        qrCodeUrlPagamento:
          type: string
          description: Url de pagamento do QrCode
      description: Dados do boleto
    NovoContratoGet.PedidoPagamentoCartaoCredito:
      type: object
      properties:
        numeroCartao:
          type: string
          description: Número criptografado do cartão de crédito
        nomeTitular:
          type: string
          description: Nome do titular criptografado do cartão de crédito
        dataValidade:
          type: string
          description: Dado de validade do cartão de crédito
        codigoSeguranca:
          type: string
          description: Código de segurança criptografado do cartão de crédito
        documentoCartaoCredito:
          type: string
          description: Documento criptografado do cartão de crédito
        token:
          type: string
          description: Token do cartão crédito
        info:
          type: string
          description: Informações adicionais
        bandeira:
          type: string
          description: Bandeira do cartão
      description: Dados do cartão de crédito
    NovoContratoGet.PedidoPagamentoStatus:
      type: object
      properties:
        numeroAutorizacao:
          type: string
          description: Número de autorização de pagamento
        numeroComprovanteVenda:
          type: string
          description: Número do comprovante de autorização de pagamento
        dataAtualizacao:
          type: string
          description: Data da última atualização do status
          format: date-time
        dataUltimoStatus:
          type: string
          description: Data do último status
          format: date-time
        adquirente:
          type: string
          description: Adquirente da autorização do pagamento
        tid:
          type: string
          description: Auth da autorização do pagamento
      description: Dados do status de pagamento
    NovoContratoGet.PedidoPagamentoInformacoesAdicionais:
      type: object
      properties:
        chave:
          type: string
          description: Nome da informação adicional
        valor:
          type: string
          description: Descrição da informação adicional
      description: Dados das informaçãoes adicionais da forma de pagemento
    NovoContratoGet.PedidoFreteCotacaoFilha:
      type: object
      properties:
        centroDistribuicaoId:
          type: integer
          format: int32
        freteContrato:
          type: string
        valor:
          type: number
          format: double
        volume:
          type: number
          format: double
        tabelaFreteId:
          type: integer
          format: int32
    NovoContratoPost.PedidoPost:
      required:
      - data
      - fretes
      - isMobile
      - pagamento
      - produtos
      - situacaoPedidoId
      - valorDesconto
      - valorJuros
      type: object
      properties:
        pedidoId:
          type: integer
          description: Id do pedido que está sendo inserido. Caso seja informado deve
            ser um Id disponível na loja. Caso não seja informado um Id será gerado.
          format: int64
        carrinhoId:
          type: string
          description: Id do carrinho que foi utilizado no pedido.
        situacaoPedidoId:
          type: integer
          description: Define em qual situação está o pedido. A lista completa das
            possíveis situações se encontra no <a href="#resource_SituacaoPedido">GET
            /situacoesPedido</a>
          format: int32
        data:
          type: string
          description: Data em que o pedido foi realizado
          format: date-time
        valorTotal:
          type: number
          description: "Valor total do pedido. Se informado deve ser igual a soma\
            \ de todos os valores inclusos no pedido (preços dos produtos, ajuses,\
            \ frete, etc)"
          format: double
        valorJuros:
          type: number
          description: Informação do juros do pedido
          format: double
        valorDesconto:
          type: number
          description: Informação de desconto do pedido
          format: double
        usuarioId:
          type: integer
          description: Id do usuário que realizou a compra. É possível recuperar o
            Id de um usuário no <a href="#">GET /usuarios</a>
          format: int64
        enderecoId:
          type: integer
          description: "Id do endereço do usuário que deve ser utilizado como endereç\
            o de entrega. Para buscar os endereços de um usuário utilize o <a href=\"\
            #\">GET /usuarios/{usuarioId}/enderecos</a>"
          format: int64
        isMobile:
          type: boolean
          description: Define se o pedido foi feito através de um dispositivo móvel
            ou não
        eventoId:
          type: integer
          description: Id do evento ao qual o pedido está vinculado (opcional)
          format: int64
        produtos:
          type: array
          description: Lista contendo os produtos do pedido
          items:
            $ref: '#/components/schemas/NovoContratoPost.PedidoProdutoPost'
        fretes:
          type: array
          description: Informações de frete do pedido
          items:
            $ref: '#/components/schemas/NovoContratoPost.PedidoFretePost'
        pagamento:
          $ref: '#/components/schemas/NovoContratoPost.PedidoPagamentoPost'
        canalId:
          type: integer
          description: ParceiroId vinculado ao pedido
          format: int32
        omniChannel:
          $ref: '#/components/schemas/NovoContratoPost.PedidoOmniChannelPost'
        transacaoId:
          type: integer
          description: Id da transação
          format: int64
        observacao:
          type: string
          description: Observação do pedido
        valido:
          type: boolean
          description: Se um pedido é valido
        cupomDesconto:
          type: string
        ip:
          type: string
        usuarioMaster:
          type: integer
          description: "ID do usuário master que realizou o pedido, se houver."
          format: int64
        metadados:
          type: array
          description: Lista contendo todos os metadados do pedido
          items:
            $ref: '#/components/schemas/NovoContratoPost.Metadado'
        retiradaLojaId:
          type: integer
          description: Id da loja física na qual o pedido será retirado.
          format: int32
        usuario:
          $ref: '#/components/schemas/NovoContratoPost.UsuarioPost'
        endereco:
          $ref: '#/components/schemas/NovoContratoPost.EnderecoPost'
      description: Contrato de envio de pedido.
    NovoContratoPost.PedidoProdutoPost:
      required:
      - isBrinde
      - precoVenda
      - produtoVarianteId
      - quantidade
      type: object
      properties:
        produtoVarianteId:
          type: integer
          description: Id do produto variante que está vinculado a esse pedido.
          format: int64
        quantidade:
          $ref: '#/components/schemas/NovoContratoPost.PedidoProdutoQuantidade'
        precoVenda:
          type: number
          description: "Preço de venda do produto, sem adição ou subtração de valores."
          format: double
        isBrinde:
          type: boolean
          description: Define se esse produto é um brinde ou não.
        ajustes:
          type: array
          description: Lista contendo todos os ajustes de preço do produto.
          items:
            $ref: '#/components/schemas/NovoContratoPost.PedidoProdutoAjuste'
        metadados:
          type: array
          description: Lista contendo todos os metadados do produto
          items:
            $ref: '#/components/schemas/NovoContratoPost.Metadado'
      description: Representa um produto dentro de um pedido.
    NovoContratoPost.PedidoFretePost:
      required:
      - centroDistribuicaoId
      - prazoEnvio
      - valorFreteCliente
      type: object
      properties:
        centroDistribuicaoId:
          type: integer
          description: Identificador do centro de distribuição de origem.
          format: int32
        freteContratoId:
          type: integer
          description: Identificador do contrato de frete.
          format: int32
        peso:
          type: number
          description: Peso em gramas (g) do frete calculado.
          format: double
        pesoCobrado:
          type: number
          description: Peso em gramas cobrado do cliente.
          format: double
        volume:
          type: number
          description: Volume em metro cúbico (m³) calculado.
          format: double
        volumeCobrado:
          type: number
          description: Volume em metro cúbico (m³) cobrado do cliente.
          format: double
        prazoEnvio:
          type: integer
          description: Prazo do envio do frete em dias úteis.
          format: int32
        prazoHorasEnvio:
          type: integer
          description: Prazo do envio do frete em horas.
          format: int32
        valorFreteEmpresa:
          type: number
          description: Valor do frete.
          format: double
        valorFreteCliente:
          type: number
          description: Valor do frete cobrado do cliente.
          format: double
        dataEntrega:
          type: string
          description: Data estimada da entrega do produto.
          format: date-time
        informacoesAdicionais:
          type: array
          description: Informações adicionais do frete
          items:
            $ref: '#/components/schemas/NovoContratoPost.PedidoFreteInformacaoAdicionalPost'
        servico:
          type: string
          description: Nome Servico caso seja intelipost
        transportadora:
          type: string
          description: Transportadora caso seja intelipost
    NovoContratoPost.PedidoPagamentoPost:
      required:
      - formaPagamentoId
      - numeroParcelas
      - valorParcela
      type: object
      properties:
        formaPagamentoId:
          type: integer
          description: ""
          format: int32
        numeroParcelas:
          type: integer
          description: ""
          format: int32
        valorParcela:
          type: number
          description: ""
          format: double
        informacaoAdicional:
          type: array
          items:
            $ref: '#/components/schemas/NovoContratoPost.PedidoPagamentoInformacaoAdicionalPost'
    NovoContratoPost.PedidoOmniChannelPost:
      type: object
      properties:
        pedidoIdPublico:
          type: string
          description: Id do pedido que o cliente vê no momento que fecha a compra.
        pedidoIdPrivado:
          type: string
          description: Id interno do marketplace.
        integrador:
          $ref: '#/components/schemas/NovoContratoPost.PedidoOmniChannelIntegradorPost'
      description: Representa um produto dentro de um pedido.
    NovoContratoPost.Metadado:
      required:
      - chave
      - valor
      type: object
      properties:
        chave:
          type: string
          description: Chave do metadado
        valor:
          type: string
          description: Valor do metadado
      description: Metadado
    NovoContratoPost.UsuarioPost:
      required:
      - email
      - nome
      - origemContato
      - telefoneResidencial
      - tipoPessoa
      type: object
      properties:
        tipoPessoa:
          type: string
          description: ""
          enum:
          - Fisica
          - Juridica
        origemContato:
          type: string
          description: ""
          enum:
          - Google
          - Bing
          - Jornal
          - PatrocinioEsportivo
          - RecomendacaoAlguem
          - Revista
          - SiteInternet
          - Televisao
          - Outro
          - UsuarioImportadoViaAdmin
          - PayPalExpress
        tipoSexo:
          type: string
          description: ""
          enum:
          - Undefined
          - Masculino
          - Feminino
        nome:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome do usuário</para>"
        cpf:
          type: string
          description: "(Max Length: 50)\r\n<para>CPF do usuário caso seja pessoa\
            \ física</para>"
        email:
          type: string
          description: "(Max Length: 100)\r\n<para>Email do usuário</para>"
        rg:
          type: string
          description: "(Max Length: 50)\r\n<para>RG do usuário caso seja pessoa fí\
            sica</para>"
        telefoneResidencial:
          type: string
          description: "(Max Length: 50)\r\n<para>Telefone residencial do usuário.\
            \ Deve ser informado o DDD junto ao número.</para>"
        telefoneCelular:
          type: string
          description: "(Max Length: 50)\r\n<para>Telefone celular do usuário. Deve\
            \ ser informado o DDD junto ao número.</para>"
        telefoneComercial:
          type: string
          description: "(Max Length: 50)\r\n<para>Telefone comercial do usuário. Deve\
            \ ser informado o DDD junto ao número.</para>"
        dataNascimento:
          type: string
          description: ""
          format: date-time
        razaoSocial:
          type: string
          description: "(Max Length: 100)\r\n<para>Razão social do usuário, caso seja\
            \ uma pessoa jurídica.</para>"
        cnpj:
          type: string
          description: "(Max Length: 50)\r\n<para>CNPJ do usuário, caso seja uma pessoa\
            \ jurídica.</para>"
        inscricaoEstadual:
          type: string
          description: "(Max Length: 50)\r\n<para>Inscrição estadual do usuário, caso\
            \ seja uma pessoa jurídica.</para>"
        responsavel:
          type: string
          description: "(Max Length: 100)\r\n<para></para>"
        dataCriacao:
          type: string
          description: ""
          format: date-time
        dataAtualizacao:
          type: string
          description: ""
          format: date-time
        revendedor:
          type: boolean
          description: ""
        listaInformacaoCadastral:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/NovoContratoPost.UsuarioGrupoInformacaoCadastral'
        avatar:
          type: string
          description: "(Max Length: 50)\r\n<para></para>"
        ip:
          type: string
          description: "(Max Length: 20)\r\n<para></para>"
        aprovado:
          type: boolean
          description: Seta ou retorna o valor de Aprovado.
      description: ""
    NovoContratoPost.EnderecoPost:
      required:
      - bairro
      - cep
      - cidade
      - estado
      - nomeEndereco
      - numero
      - rua
      type: object
      properties:
        nomeEndereco:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome de identificação do endereç\
            o a ser cadastrado.</para>"
        rua:
          type: string
          description: "(Max Length: 500)\r\n<para> Nome da rua.</para>"
        numero:
          type: string
          description: "(Max Length: 50)\r\n<para>Número do local.</para>"
        complemento:
          type: string
          description: "(Max Length: 250)\r\n<para>Complemento.</para>"
        referencia:
          type: string
          description: "(Max Length: 500)\r\n<para>Referência para a localização do\
            \ endereço.</para>"
        bairro:
          type: string
          description: "(Max Length: 100)\r\n<para>Bairro do endereço.</para>"
        cidade:
          type: string
          description: "(Max Length: 100)\r\n<para>Cidade em que se localiza o endereç\
            o.</para>"
        estado:
          type: string
          description: "(Max Length: 100)\r\n<para>O estado.</para>"
        cep:
          type: string
          description: "(Max Length: 50)\r\n<para>Código do cep.</para>"
        pais:
          type: string
          description: "(Max Length: 500)\r\n<para>País do endereço.</para>"
      description: ""
    NovoContratoPost.PedidoProdutoQuantidade:
      required:
      - quantidadeTotal
      type: object
      properties:
        quantidadeTotal:
          type: integer
          description: ""
          format: int32
        quantidadePorCentroDeDistribuicao:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/NovoContratoPost.CentroDistribuicaoQuantidade'
      description: ""
    NovoContratoPost.PedidoProdutoAjuste:
      required:
      - tipo
      - valor
      type: object
      properties:
        tipo:
          type: string
          description: Define o tipo do ajuste de valor de um produto contido em um
            pedido.
          enum:
          - Frete
          - Pricing
          - Atacarejo
          - Personalizacao
          - Embalagem
          - Promocao
          - PromocaoFrete
          - ContaCorrente
          - FormaPagamento
          - PromocaoProduto
          - TipoFreteProduto
          - Formula
        valor:
          type: number
          description: Define o valor do ajuste a ser aplicado no produto. O valor
            pode ser positivo ou negativo.
          format: double
        observacao:
          type: string
          description: ""
        nome:
          type: string
          description: ""
      description: ""
    NovoContratoPost.PedidoFreteInformacaoAdicionalPost:
      type: object
      properties:
        chave:
          type: string
        valor:
          type: string
    NovoContratoPost.PedidoPagamentoInformacaoAdicionalPost:
      type: object
      properties:
        chave:
          type: string
        valor:
          type: string
    NovoContratoPost.PedidoOmniChannelIntegradorPost:
      type: object
      properties:
        nome:
          type: string
          description: Nome do parceiro integrador.
        pedidoId:
          type: string
          description: Numero do pedido dentro do integrador.
        pedidoUrl:
          type: string
          description: Url do pedido dentro painel do integrador.
      description: Representa um produto dentro de um pedido.
    NovoContratoPost.UsuarioGrupoInformacaoCadastral:
      type: object
      properties:
        chave:
          type: string
          description: ""
        valor:
          type: string
          description: ""
      description: ""
    NovoContratoPost.CentroDistribuicaoQuantidade:
      required:
      - centroDistribuicaoId
      - quantidade
      type: object
      properties:
        centroDistribuicaoId:
          type: integer
          description: ""
          format: int32
        quantidade:
          type: integer
          description: ""
          format: int32
      description: ""
    HistoricoSituacaoPedido:
      type: object
      properties:
        situacoes:
          type: array
          items:
            $ref: '#/components/schemas/PedidoSituacao'
    PedidoSituacao:
      type: object
      properties:
        situacaoPedidoId:
          type: integer
          format: int64
        nome:
          type: string
        situacaoPedidoProdutoId:
          type: integer
          format: int32
        dataAtualizacao:
          type: string
          format: date-time
    PedidoStatusRastreamento:
      required:
      - centroDistribuicaoId
      - pedidoId
      - situacaoPedidoId
      type: object
      properties:
        pedidoId:
          type: integer
          format: int64
        produtoVarianteId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int32
        situacaoPedidoId:
          type: integer
          format: int32
        rastreamento:
          type: string
        dataEvento:
          type: string
          format: date-time
        numeroNotaFiscal:
          type: string
        chaveAcessoNFE:
          type: string
        urlNFE:
          type: string
        serieNFE:
          type: string
        cfop:
          type: integer
          format: int64
        urlRastreamento:
          type: string
        centroDistribuicaoId:
          type: integer
          format: int32
    PedidoSituacaoPut:
      type: object
      properties:
        id:
          type: integer
          format: int32
    PedidoStatus:
      type: object
      properties:
        situacaoPedidoId:
          type: integer
          format: int64
        dataAtualizacao:
          type: string
          format: date-time
        notaFiscal:
          type: string
        cfop:
          type: integer
          format: int64
        dataEnviado:
          type: string
          format: date-time
        chaveAcessoNFE:
          type: string
        rastreamento:
          type: string
        urlRastreamento:
          type: string
        nomeTransportadora:
          type: string
        produtos:
          type: array
          items:
            $ref: '#/components/schemas/PedidoStatusProdutoVariante'
    PedidoStatusProdutoVariante:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        situacaoProdutoId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int64
        centroDistribuicaoId:
          type: integer
          format: int64
    PedidoStatusRastreamentoPedido:
      required:
      - centroDistribuicaoId
      - numeroNotaFiscal
      - situacaoPedidoId
      type: object
      properties:
        situacaoPedidoId:
          type: integer
          format: int32
        centroDistribuicaoId:
          type: integer
          format: int32
        rastreamento:
          type: string
        dataEvento:
          type: string
          format: date-time
        numeroNotaFiscal:
          type: string
        chaveAcessoNFE:
          type: string
        urlNFE:
          type: string
        serieNFE:
          type: string
        cfop:
          type: integer
          format: int64
        urlRastreamento:
          type: string
    PedidoRastreamento:
      type: object
      properties:
        pedidoRastreamentoId:
          type: integer
          format: int64
        dataAtualizacao:
          type: string
          format: date-time
        notaFiscal:
          type: string
        serieNF:
          type: string
        cfop:
          type: integer
          format: int64
        dataEnviado:
          type: string
          format: date-time
        urlNFE:
          type: string
        chaveAcessoNFE:
          type: string
        rastreamento:
          type: string
        urlRastreamento:
          type: string
        urlRastreamentoContratofrete:
          type: string
        transportadora:
          type: string
        dataEntrega:
          type: string
          format: date-time
    NovoContratoPut.PedidoProdutoRastreamento:
      required:
      - dataEntrega
      - rastreamento
      type: object
      properties:
        rastreamento:
          type: string
          description: Código de verificação do transporte do produto
        dataEntrega:
          type: string
          description: Data que a entrega foi realizada
          format: date-time
      description: Model que recebe os dados da requisição de atualização da data
        de entrega do pedido
    PedidoRastreamentoPut:
      required:
      - cfop
      - chaveAcessoNFE
      - dataEnviado
      - notaFiscal
      - transportadora
      type: object
      properties:
        notaFiscal:
          type: string
        cfop:
          type: integer
          format: int64
        dataEnviado:
          type: string
          format: date-time
        chaveAcessoNFE:
          type: string
        rastreamento:
          type: string
        urlRastreamento:
          type: string
        transportadora:
          type: string
        dataEntrega:
          type: string
          format: date-time
    PedidoRastreamentoParcialPut:
      type: object
      properties:
        rastreamento:
          type: string
        urlRastreamento:
          type: string
    PedidoStatusRastreamentoProdutoVariante:
      required:
      - centroDistribuicaoId
      - numeroNotaFiscal
      - situacaoPedidoId
      type: object
      properties:
        situacaoPedidoId:
          type: integer
          format: int32
        quantidade:
          type: integer
          format: int32
        centroDistribuicaoId:
          type: integer
          format: int32
        rastreamento:
          type: string
        dataEvento:
          type: string
          format: date-time
        numeroNotaFiscal:
          type: string
        chaveAcessoNFE:
          type: string
        urlNFE:
          type: string
        serieNFE:
          type: string
        cfop:
          type: integer
          format: int64
        urlRastreamento:
          type: string
    PedidoRastreamentoProdutoGet:
      type: object
      properties:
        pedidoRastreamentoProdutoId:
          type: integer
          format: int64
        pedidoId:
          type: integer
          format: int64
        produtoVarianteId:
          type: integer
          format: int64
        pedidoProdutoId:
          type: integer
          format: int64
        dataInclusao:
          type: string
          format: date-time
        dataAlteracao:
          type: string
          format: date-time
        notaFiscal:
          type: string
        cfop:
          type: integer
          format: int64
        dataEnviado:
          type: string
          format: date-time
        chaveAcessoNFE:
          type: string
        rastreamento:
          type: string
        urlRastreamento:
          type: string
        quantidade:
          type: integer
          format: int32
        urlNFE:
          type: string
        serieNFE:
          type: string
        tipoPostagem:
          type: string
        centroDistribuicao:
          type: string
        transportadora:
          type: string
        dataEntrega:
          type: string
          format: date-time
    PedidoRastreamentoProdutoPut:
      required:
      - cfop
      - chaveAcessoNFE
      - dataEnviado
      - notaFiscal
      - transportadora
      type: object
      properties:
        notaFiscal:
          type: string
        cfop:
          type: integer
          format: int64
        dataEnviado:
          type: string
          format: date-time
        chaveAcessoNFE:
          type: string
        rastreamento:
          type: string
        urlRastreamento:
          type: string
        transportadora:
          type: string
        dataEntrega:
          type: string
          format: date-time
    PedidoRastreamentoProdutoParcialPut:
      type: object
      properties:
        rastreamento:
          type: string
        urlRastreamento:
          type: string
    PedidoRastreamentoProduto:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        rastreamentos:
          type: array
          items:
            $ref: '#/components/schemas/PedidoRastreamentoProdutoDetalhe'
    PedidoRastreamentoProdutoDetalhe:
      type: object
      properties:
        pedidoRastreamentoProdutoId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int32
        dataAtualizacao:
          type: string
          format: date-time
        notaFiscal:
          type: string
        cfop:
          type: integer
          format: int64
        dataEnviado:
          type: string
          format: date-time
        chaveAcessoNFE:
          type: string
        rastreamento:
          type: string
        urlRastreamento:
          type: string
        transportadora:
          type: string
        centroDistribuicaoId:
          type: integer
          format: int32
        dataEntrega:
          type: string
          format: date-time
    NovoContratoPut.PedidoProdutoSituacao:
      type: object
      properties:
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição do produto
          format: int32
        quantidade:
          type: integer
          description: Quantidade de produtos do centro de distribuição
          format: int32
        situacaoPedidoProdutoId:
          type: integer
          description: Novo status da situação do produto (são os mesmo status do
            pedido)
          format: int32
      description: Dados de uma situação do produto de um pedido
    NovoContratoPut.ChangeOrder:
      type: object
      properties:
        produtoCancelado:
          $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoCanceladoChangeOrder'
        produtosNovos:
          type: array
          description: Dados dos novos produtos à serem inseridos no pedido
          items:
            $ref: '#/components/schemas/NovoContratoPut.PedidoProdutoNovoChangeOrder'
      description: Dados de trocar de produtos de um pedido
    NovoContratoPut.PedidoProdutoCanceladoChangeOrder:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          description: Id do variante do produto
          format: int32
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição do produto
          format: int32
        quantidade:
          type: integer
          description: Quantidade de produtos do centro de distribuição
          format: int32
        situacaoPedidoProdutoId:
          type: integer
          description: Novo status da situação do produto (são os mesmo status do
            pedido)
          format: int32
      description: Dados de uma situação do produto de um pedido
    NovoContratoPut.PedidoProdutoNovoChangeOrder:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          description: Id do variante do produto
          format: int32
        quantidade:
          type: integer
          description: Quantidade de unidades
          format: int32
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição do produto
          format: int32
        metadados:
          type: object
          additionalProperties:
            type: string
          description: Metadados do produto
        isBrinde:
          type: boolean
          description: Identificador de brinde. True = é brinde
      description: Dados do novo produto à ser inserido no pedido
    NovoContratoGet.PedidoCartaoCredito:
      type: object
      properties:
        nomeTitular:
          type: string
          description: Nome do titular impresso no cartão de crédito
        numeroCartao:
          type: string
          description: Número impresso no cartão de crédito
        codigoSeguranca:
          type: string
          description: Código de segurança impresso no cartão
        dataValidade:
          type: string
          description: Data de validade impresso no cartão
        documentoCartaoCredito:
          type: string
          description: Documento de verificação do cartão de crédito
        token:
          type: string
          description: Token de transação
        info:
          type: string
          description: Informações adicionais
      description: Dados do pedido
    PedidoNaoIntegrado:
      type: object
      properties:
        pedidoId:
          type: integer
          format: int64
    Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoPost:
      type: object
      properties:
        observacao:
          type: string
          description: Texto da observação
        usuario:
          type: string
          description: Nome do usuário que está inserindo a observação
        publica:
          type: boolean
          description: Se a observação é publica ou privada
    Fbits.API.Contratos.PedidoObservacao.PedidoObservacaoGet:
      type: object
      properties:
        observacao:
          type: string
          description: Texto da observação
        usuario:
          type: string
          description: Nome do usuário que inseriu a observação
        publica:
          type: boolean
          description: Se a observação é publica ou privada
        data:
          type: string
          description: Data / Hora da criação da observação
          format: date-time
    ChangeSellerCompleto:
      type: object
      properties:
        cotacao:
          type: string
          format: uuid
        responsavel:
          type: string
    ChangeSellerDTO:
      type: object
      properties:
        sucesso:
          type: boolean
        mensagem:
          type: string
        pedidos:
          type: array
          items:
            type: integer
            format: int64
    Estorno:
      type: object
      properties:
        valor:
          type: number
          format: double
    ChangeOrder:
      type: object
      properties:
        usuarioId:
          type: integer
          format: int64
        creditoContaCorrente:
          type: boolean
        produtosNovos:
          type: array
          items:
            $ref: '#/components/schemas/PedidoProdutoNovoChangeOrder'
        produtosCancelados:
          type: array
          items:
            $ref: '#/components/schemas/PedidoProdutoCanceladoChangeOrder'
    PedidoProdutoNovoChangeOrder:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int32
        precoPor:
          type: number
          format: double
        centroDistribuicaoId:
          type: integer
          format: int32
    PedidoProdutoCanceladoChangeOrder:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        centroDistribuicaoId:
          type: integer
          format: int32
        quantidade:
          type: integer
          format: int32
    NovoContratoGet.Portfolio:
      type: object
      properties:
        portfolioId:
          type: integer
          description: Identificador do portfolio
          format: int64
        nome:
          type: string
          description: Nome do portfolio
        ativo:
          type: boolean
          description: Status do portfolio (ativo ou inativo)
    NovoContratoPost.PortfolioPost:
      required:
      - nome
      type: object
      properties:
        nome:
          type: string
          description: Nome do portfolio
    NovoContratoGet.PortfolioProduto:
      type: object
      properties:
        produtoId:
          type: integer
          description: Id do produto
          format: int64
    NovoContratoPut.PortfolioProduto:
      required:
      - produtoId
      type: object
      properties:
        produtoId:
          type: integer
          description: Id do produto
          format: int64
    NovoContratoPut.PortfolioStatus:
      required:
      - ativo
      type: object
      properties:
        ativo:
          type: boolean
          description: Status do portfolio (ativo ou inativo)
    NovoContratoGet.Produto:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          description: Id do variante do produto
          format: int64
        produtoId:
          type: integer
          description: Id do produto do variante
          format: int64
        idPaiExterno:
          type: string
          description: Representa o ProdutoId agrupador por variante
        idVinculoExterno:
          type: string
          description: Representa o ParentId agrupador por parent
        sku:
          type: string
          description: Sku do produto
        nome:
          type: string
          description: Nome do produto variante
        nomeProdutoPai:
          type: string
          description: Nome do produto (pai do variante)
        urlProduto:
          type: string
          description: Url do produto
        exibirMatrizAtributos:
          type: string
          description: Tipo de exibição da matriz de atributos
          enum:
          - Sim
          - Nao
          - Neutro
        contraProposta:
          type: boolean
          description: Se o produto aceita contra proposta
        fabricante:
          type: string
          description: Nome do fabricante
        autor:
          type: string
          description: Nome do autor
        editora:
          type: string
          description: Nome da editora
        colecao:
          type: string
          description: Nome da coleção
        genero:
          type: string
          description: Nome do gênero
        precoCusto:
          type: number
          description: Preço de custo do produto variante
          format: double
        precoDe:
          type: number
          description: '"Preço De" do produto variante'
          format: double
        precoPor:
          type: number
          description: '"Preço Por" de venda do produto variante'
          format: double
        fatorMultiplicadorPreco:
          type: number
          description: "Fator multiplicador que gera o preço de exibição do produto.\
            \ Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa\
            \ no \"PrecoPor\". (1 por padrão)"
          format: double
        prazoEntrega:
          type: integer
          description: Prazo de entrega do produto variante
          format: int32
        valido:
          type: boolean
          description: Define se um produto variante é valido ou não
        exibirSite:
          type: boolean
          description: Define se um produto deve ser exibido no site
        freteGratis:
          type: string
          description: Define a qual regra de calculo de frete o produto vai pertencer
          enum:
          - Sempre
          - Nunca
          - Neutro
          - Desconsiderar_Regras
        trocaGratis:
          type: boolean
          description: Define se o produto variante tem troca grátis
        peso:
          type: number
          description: Peso do produto variante
          format: double
        altura:
          type: number
          description: Altura do produto variante
          format: double
        comprimento:
          type: number
          description: Comprimento do produto variante
          format: double
        largura:
          type: number
          description: Largura do produto variante
          format: double
        garantia:
          type: integer
          description: Define se o produto variante tem garantia
          format: int32
        isTelevendas:
          type: boolean
          description: Define se o produto contém televendas
        ean:
          type: string
          description: EAN do produto variante
        localizacaoEstoque:
          type: string
          description: Localização no estoque do produto variante
        listaAtacado:
          type: array
          description: Dados de atacado do produto variante
          items:
            $ref: '#/components/schemas/NovoContratoGet.Atacado'
        estoque:
          type: array
          description: Lista de estoque/centro de distribuição do produto. Obrigatório
            se valido for true
          items:
            $ref: '#/components/schemas/NovoContratoGet.Estoque'
        atributos:
          type: array
          description: Atributos do produto variante
          items:
            $ref: '#/components/schemas/NovoContratoGet.ProdutoAtributoSelecionar'
        quantidadeMaximaCompraUnidade:
          type: integer
          description: Quantidade máxima de compra do produto variante
          format: int32
        quantidadeMinimaCompraUnidade:
          type: integer
          description: Quantidade mínima de compra do produto variante
          format: int32
        condicao:
          type: string
          description: Condição do produto variante
          enum:
          - Novo
          - Usado
          - Renovado
          - Danificado
        informacoes:
          type: array
          description: Informações do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.ProdutoInformacaoCompleta'
        tabelasPreco:
          type: array
          description: Tabelas de preço do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.ProdutoVariantePrecoTabelaPreco'
        dataCriacao:
          type: string
          description: Data de criação do produto variante
          format: date-time
        dataAtualizacao:
          type: string
          description: Data de atualização do produto variante
          format: date-time
        urlVideo:
          type: string
          description: Url do vídeo do Produto
        spot:
          type: boolean
          description: Se o produto aparece no Spot
        paginaProduto:
          type: boolean
          description: Se o produto aparece na Url
        marketplace:
          type: boolean
          description: Se o produto aparece no Marketplace
        somenteParceiros:
          type: boolean
          description: Se o produto aparece somente para Parceiros
        reseller:
          $ref: '#/components/schemas/Reseller'
        buyBox:
          type: boolean
          description: Se o produto deve ser agrupado por EAN
        consumo:
          $ref: '#/components/schemas/NovoContratoPost.ConsumoProduto'
        prazoValidade:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int64
        urlImagem:
          type: string
    NovoContratoGet.Atacado:
      type: object
      properties:
        precoPor:
          type: number
          description: Preco Por do item por atacado
          format: double
        quantidade:
          type: integer
          description: Quanidade para compra de atacado
          format: int32
    NovoContratoGet.Estoque:
      type: object
      properties:
        estoqueFisico:
          type: integer
          description: Estoque fisíco do produto
          format: int32
        estoqueReservado:
          type: integer
          description: Estoque reservado do produto
          format: int32
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição do estoque do produto
          format: int32
        alertaEstoque:
          type: integer
          description: Quantidade do produto que irá disparar alertas de estoque
          format: int32
    NovoContratoGet.ProdutoAtributoSelecionar:
      type: object
      properties:
        tipoAtributo:
          type: string
          description: Tipo do atributo
          enum:
          - Selecao
          - Filtro
          - Comparacao
          - Configuracao
          - ExclusivoGoogle
        isFiltro:
          type: boolean
          description: Define se o atributo é filtro
        nome:
          type: string
          description: Define o nome do atributo
        valor:
          type: string
          description: Define o valor do atributo
        exibir:
          type: boolean
          description: Define se o atributo deverá ser exibido
    NovoContratoGet.ProdutoInformacaoCompleta:
      type: object
      properties:
        informacaoId:
          type: integer
          description: Id da informação do produto
          format: int64
        titulo:
          type: string
          description: Titulo da informação
        texto:
          type: string
          description: Conteúdo da informação
        tipoInformacao:
          type: string
          description: Tipo da informação
          enum:
          - Informacoes
          - Beneficios
          - Especificacoes
          - DadosTecnicos
          - Composicao
          - ModoDeUsar
          - Cuidados
          - ItensInclusos
          - Dicas
          - Video
          - Descricao
          - ValorReferente
          - PopUpReferente
          - Prescricao
          - TabelaDeMedidas
          - Spot
          - Sinopse
          - Carrinho
        exibirSite:
          type: boolean
          description: Tipo da informação
    NovoContratoGet.ProdutoVariantePrecoTabelaPreco:
      type: object
      properties:
        tabelaPrecoId:
          type: integer
          description: Identificador da tabela de preço
          format: int64
        nome:
          type: string
          description: Nome da tabela de preço
        precoDe:
          type: number
          description: '"PrecoDe" da tabela de preço'
          format: double
        precoPor:
          type: number
          description: PrecoPor" da tabela de preço
          format: double
    Reseller:
      type: object
      properties:
        resellerId:
          type: integer
          format: int64
        razaoSocial:
          type: string
        centroDistribuicaoId:
          type: integer
          format: int64
        ativo:
          type: boolean
        ativacaoAutomaticaProdutos:
          type: boolean
        autonomia:
          type: boolean
        buyBox:
          type: boolean
        nomeMarketPlace:
          type: string
    NovoContratoPost.ConsumoProduto:
      type: object
      properties:
        quantidadeDias:
          type: integer
          format: int32
        enviarEmail:
          type: boolean
    NovoContratoPost.ProdutoPost:
      required:
      - altura
      - comprimento
      - exibirSite
      - fabricante
      - freteGratis
      - largura
      - nome
      - peso
      - precoPor
      - sku
      - valido
      type: object
      properties:
        idPaiExterno:
          type: string
          description: Representa o ProdutoId agrupador por variante
        idVinculoExterno:
          type: string
          description: Representa o ParentId agrupador por parent
        sku:
          type: string
          description: "(Max Length: 50)\r\n<para>Sku do produto</para>"
        nome:
          type: string
          description: "(Max Length: 300)\r\n<para>Nome do produto variante</para>"
        nomeProdutoPai:
          type: string
          description: Nome do produto (pai do variante)
        exibirMatrizAtributos:
          type: string
          description: Tipo de exibição da matriz de atributos
          enum:
          - Sim
          - Nao
          - Neutro
        contraProposta:
          type: boolean
          description: Se o produto aceita contra proposta
        fabricante:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome do fabricante</para>"
        autor:
          type: string
          description: "(Max Length: 500)\r\n<para>Nome do autor</para>"
        editora:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome da editora</para>"
        colecao:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome da coleção</para>"
        genero:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome do gênero</para>"
        precoCusto:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Preço de custo\
            \ do produto variante</para>"
          format: double
        precoDe:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>\"Preço De\" do\
            \ produto variante</para>"
          format: double
        precoPor:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>\"Preço Por\" de\
            \ venda do produto variante</para>"
          format: double
        fatorMultiplicadorPreco:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Fator multiplicador\
            \ que gera o preço de exibição do produto.</para><para>Ex.: produtos que\
            \ exibem o preço em m² e cadastram o preço da caixa no \"PrecoPor\". (1\
            \ por padrão)</para>"
          format: double
        prazoEntrega:
          type: integer
          description: Prazo de entrega do produto variante
          format: int32
        valido:
          type: boolean
          description: Define se um produto variante é valido ou não
        exibirSite:
          type: boolean
          description: Define se um produto deve ser exibido no site
        freteGratis:
          type: string
          description: Define a qual regra de calculo de frete o produto vai pertencer
          enum:
          - Sempre
          - Nunca
          - Neutro
          - Desconsiderar_Regras
        trocaGratis:
          type: boolean
          description: Define se o produto variante tem troca grátis
        peso:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Peso do produto\
            \ variante</para>"
          format: double
        altura:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Altura do produto\
            \ variante</para>"
          format: double
        comprimento:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Comprimento do\
            \ produto variante</para>"
          format: double
        largura:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Largura do produto\
            \ variante</para>"
          format: double
        garantia:
          type: integer
          description: Define se o produto variante tem garantia
          format: int32
        isTelevendas:
          type: boolean
          description: Define se o produto contém televendas
        ean:
          maxLength: 25
          minLength: 0
          type: string
          description: "(Max Length: 25)\r\n<para>EAN do produto variante</para>"
        localizacaoEstoque:
          maxLength: 255
          minLength: 0
          type: string
          description: "(Max Length: 255)\r\n<para>Localização no estoque do produto\
            \ variante</para>"
        listaAtacado:
          type: array
          description: Dados de atacado do produto variante
          items:
            $ref: '#/components/schemas/NovoContratoPost.Atacado'
        estoque:
          type: array
          description: Lista de estoque/centro de distribuição do produto. Obrigatório
            se valido for true
          items:
            $ref: '#/components/schemas/NovoContratoPost.Estoque'
        listaAtributos:
          type: array
          description: Lista de atributos do produto
          items:
            $ref: '#/components/schemas/NovoContratoPost.ProdutoAtributo'
        quantidadeMaximaCompraUnidade:
          type: integer
          description: Quantidade máxima de compra do produto variante
          format: int32
        quantidadeMinimaCompraUnidade:
          type: integer
          description: Quantidade mínima de compra do produto variante
          format: int32
        condicao:
          type: string
          description: Condição do produto variante
          enum:
          - Novo
          - Usado
          - Renovado
          - Danificado
        urlVideo:
          type: string
          description: Url do vídeo do Produto
        spot:
          type: boolean
          description: Se o produto aparece no Spot
        paginaProduto:
          type: boolean
          description: Se o produto aparece na Url
        marketplace:
          type: boolean
          description: Se o produto aparece no Marketplace
        somenteParceiros:
          type: boolean
          description: Se o produto aparece somente nos Parceiros
          default: false
        buyBox:
          type: boolean
          description: Se o produto deve ser agrupado pelo EAN
          default: false
        prazoValidade:
          type: integer
          description: Prazo de validade ou consumo do produto
          format: int32
        consumo:
          $ref: '#/components/schemas/NovoContratoPost.ConsumoProduto'
      description: ""
    NovoContratoPost.Atacado:
      type: object
      properties:
        precoPor:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\") - Preco Por do item por\
            \ atacado"
          format: double
        quantidade:
          type: integer
          description: Quanidade para compra de atacado
          format: int32
    NovoContratoPost.Estoque:
      type: object
      properties:
        estoqueFisico:
          type: integer
          description: Estoque fisíco do produto
          format: int32
        estoqueReservado:
          type: integer
          description: Estoque reservado do produto
          format: int32
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição do estoque do produto
          format: int32
        alertaEstoque:
          type: integer
          description: Quantidade para ativar o alerta de estoque
          format: int32
    NovoContratoPost.ProdutoAtributo:
      required:
      - exibir
      - nome
      - valor
      type: object
      properties:
        nome:
          type: string
          description: "(Max Length: 100) - Define o nome do atributo"
        valor:
          type: string
          description: "(Max Length: 8, \"0000.0000,00\") -  Define o valor do atributo"
        exibir:
          type: boolean
          description: Define se o atributo deverá ser exibido
    Fbits.API.Contratos.ProdutoDelete.ProdutoDelete:
      type: object
      properties:
        identificadores:
          type: array
          description: ""
          items:
            type: string
      description: ""
    Fbits.API.Contratos.ProdutoPatch.ProdutoPatch:
      type: object
      properties:
        sku:
          type: string
          description: SKU
        dataCadastro:
          type: string
          description: Data de Cadastro
          format: date-time
        idPaiExterno:
          type: string
          description: ID Pai Externo
        idVinculoExterno:
          type: string
          description: ID Vínculo Externo
        nome:
          type: string
          description: Nome do Produto
        nomeProdutoPai:
          type: string
          description: Nome do Produto Pai
        exibirMatrizAtributos:
          type: string
          description: Exibir Matriz Atributos
          enum:
          - Sim
          - Nao
          - Neutro
        contraProposta:
          type: boolean
          description: Indicativo Contra Proposta
        fabricante:
          type: string
          description: Fabricante
        autor:
          type: string
          description: Autor
        editora:
          type: string
          description: Editora
        colecao:
          type: string
          description: Coleção
        genero:
          type: string
          description: Gênero
        precoCusto:
          type: number
          description: Preço de Custo
          format: double
        precoDe:
          type: number
          description: '"Preço De" do Produto'
          format: double
        precoPor:
          type: number
          description: '"Preço Por" do Produto'
          format: double
        fatorMultiplicadorPreco:
          type: number
          description: Fator Multiplicador do Preço
          format: double
        prazoEntrega:
          type: integer
          description: Prazo de Entrega
          format: int32
        valido:
          type: boolean
          description: Indicativo se produto é válido
        exibirSite:
          type: boolean
          description: Indicativo se produto será exibido no site
        freteGratis:
          type: string
          description: Frete Grátis
          enum:
          - Sempre
          - Nunca
          - Neutro
          - Desconsiderar_Regras
        trocaGratis:
          type: boolean
          description: Indicativo se Produto possui troca grátis
        peso:
          type: number
          description: Peso do Produto
          format: double
        altura:
          type: number
          description: Altura do Produto
          format: double
        comprimento:
          type: number
          description: Comprimento do Produto
          format: double
        largura:
          type: number
          description: Largura do Produto
          format: double
        garantia:
          type: integer
          description: Garantia
          format: int32
        isTelevendas:
          type: boolean
          description: Indicativo se é televendas
        ean:
          type: string
          description: EAN do Produto
        localizacaoEstoque:
          type: string
          description: Localização Estoque
        listaAtacado:
          type: array
          description: Lista atacado
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.AtacadoProdutoPatch'
        estoque:
          type: array
          description: Lista estoque
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.EstoqueProdutoPatch'
        atributos:
          type: array
          description: Lista atributos
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.AtributoProdutoPatch'
        quantidadeMaximaCompraUnidade:
          type: integer
          description: Quantidade máxima compra unidade
          format: int32
        quantidadeMinimaCompraUnidade:
          type: integer
          description: Quantidade mínima compra unidade
          format: int32
        condicao:
          type: string
          description: Condição
        urlVideo:
          type: string
          description: URL vídeo
        spot:
          type: boolean
          description: Indicativo SPOT
        paginaProduto:
          type: boolean
          description: Indicativo Página Produto
        marketplace:
          type: boolean
          description: Indicativo Marketplace
        somenteParceiros:
          type: boolean
          description: Indicativo Somente Parceiros
        buyBox:
          type: boolean
          description: Indicativo buy box
        prazoValidade:
          type: integer
          description: Prazo Validade
          format: int32
        consumo:
          $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.ConsumoProdutoPatch'
        categorias:
          $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.CategoriaProdutoPatch'
        informacoes:
          type: array
          description: Informações do produto
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.InformacaoProdutoPatch'
        imagens:
          type: array
          description: Imagens do Produto
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.ImagemProdutoPatch'
        seo:
          $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.SeoProdutoPatch'
      description: Produto Patch
    Fbits.API.Contratos.ProdutoPatch.AtacadoProdutoPatch:
      type: object
      properties:
        precoPor:
          type: number
          description: Preço por
          format: double
        quantidade:
          type: integer
          description: Quantidade
          format: int32
      description: Atacado
    Fbits.API.Contratos.ProdutoPatch.EstoqueProdutoPatch:
      type: object
      properties:
        estoqueFisico:
          type: integer
          description: Estoque físico
          format: int32
        estoqueReservado:
          type: integer
          description: Estoque reservado
          format: int32
        centroDistribuicaoId:
          type: integer
          description: ID do centro de distribuição
          format: int32
        alertaEstoque:
          type: integer
          description: Alerta estoque
          format: int32
      description: Estoque
    Fbits.API.Contratos.ProdutoPatch.AtributoProdutoPatch:
      type: object
      properties:
        nome:
          type: string
          description: Nome
        valor:
          type: string
          description: Valor
        exibir:
          type: boolean
          description: Indicativo Exibir
      description: Atributo
    Fbits.API.Contratos.ProdutoPatch.ConsumoProdutoPatch:
      type: object
      properties:
        quantidadeDias:
          type: integer
          description: Quantidade de dias
          format: int32
        enviarEmail:
          type: boolean
          description: Indicativo enviar e-mail
      description: Consumo
    Fbits.API.Contratos.ProdutoPatch.CategoriaProdutoPatch:
      type: object
      properties:
        categoriaPrincipalId:
          type: integer
          description: ID da categoria principal
          format: int32
        listaCategoriaId:
          type: array
          description: Lista de categorias
          items:
            type: integer
            format: int32
      description: Categoria
    Fbits.API.Contratos.ProdutoPatch.InformacaoProdutoPatch:
      type: object
      properties:
        titulo:
          type: string
          description: Título
        texto:
          type: string
          description: Texto
        exibirSite:
          type: boolean
          description: Indicativo Exibir Site
        tipoInformacao:
          type: string
          description: Tipo de Informação
      description: Informação
    Fbits.API.Contratos.ProdutoPatch.ImagemProdutoPatch:
      type: object
      properties:
        base64:
          type: string
          description: Base64
        formato:
          type: string
          description: Formato
        exibirMiniatura:
          type: boolean
          description: Exibir miniatura
        estampa:
          type: boolean
          description: Estampa
        ordem:
          type: integer
          description: Ordem
          format: int32
      description: Imagem
    Fbits.API.Contratos.ProdutoPatch.SeoProdutoPatch:
      type: object
      properties:
        tagCanonical:
          type: string
          description: Tag Canonical
        title:
          type: string
          description: Title
        metaTags:
          type: array
          description: MetaTags
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.ProdutoPatch.MetaTagProdutoPatch'
      description: SEO
    Fbits.API.Contratos.ProdutoPatch.MetaTagProdutoPatch:
      type: object
      properties:
        content:
          type: string
          description: Content
        httpEquiv:
          type: string
          description: HttpEquiv
        name:
          type: string
          description: Name
        scheme:
          type: string
          description: Scheme
      description: MetaTag
    NovoContratoPut.ProdutoPut:
      required:
      - altura
      - comprimento
      - fabricante
      - freteGratis
      - largura
      - nome
      - peso
      - precoPor
      - sku
      type: object
      properties:
        idPaiExterno:
          type: string
          description: Representa o ProdutoId agrupador por variante (Campo Obsoleto.
            Não é mais considerado na atualização do produto)
        idVinculoExterno:
          type: string
          description: Representa o ParentId agrupador por parent
        sku:
          type: string
          description: "(Max Length: 50)\r\n<para>Sku do produto</para>"
        nome:
          type: string
          description: "(Max Length: 300)\r\n<para>Nome do produto variante</para>"
        nomeProdutoPai:
          type: string
          description: Nome do produto (pai do variante)
        exibirMatrizAtributos:
          type: string
          description: Tipo de exibição da matriz de atributos
          enum:
          - Sim
          - Nao
          - Neutro
        contraProposta:
          type: boolean
          description: Se o produto aceita contra proposta
        fabricante:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome do fabricante</para>"
        autor:
          type: string
          description: "(Max Length: 500)\r\n<para>Nome do autor</para>"
        editora:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome da editora</para>"
        colecao:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome da coleção</para>"
        genero:
          type: string
          description: "(Max Length: 100)\r\n<para>Nome do gênero</para>"
        precoCusto:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Preço de custo\
            \ do produto variante</para>"
          format: double
        precoDe:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>\"Preço De\" do\
            \ produto variante</para>"
          format: double
        precoPor:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>\"Preço Por\" de\
            \ venda do produto variante</para>"
          format: double
        fatorMultiplicadorPreco:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Fator multiplicador\
            \ que gera o preço de exibição do produto.</para><para>Ex.: produtos que\
            \ exibem o preço em m² e cadastram o preço da caixa no \"PrecoPor\". (1\
            \ por padrão)</para>"
          format: double
        prazoEntrega:
          type: integer
          description: Prazo de entrega do produto variante
          format: int32
        valido:
          type: boolean
          description: Define se um produto variante é valido ou não
        exibirSite:
          type: boolean
          description: Define se um produto deve ser exibido no site
        freteGratis:
          type: string
          description: Define a qual regra de calculo de frete o produto vai pertencer
          enum:
          - Sempre
          - Nunca
          - Neutro
          - Desconsiderar_Regras
        trocaGratis:
          type: boolean
          description: Define se o produto variante tem troca grátis
        peso:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Peso do produto\
            \ variante</para>"
          format: double
        altura:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Altura do produto\
            \ variante</para>"
          format: double
        comprimento:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Comprimento do\
            \ produto variante</para>"
          format: double
        largura:
          type: number
          description: "(Max Length: 8, \"0000.0000,00\")\r\n<para>Largura do produto\
            \ variante</para>"
          format: double
        garantia:
          type: integer
          description: Define se o produto variante tem garantia
          format: int32
        isTelevendas:
          type: boolean
          description: Define se o produto contém televendas
        ean:
          maxLength: 25
          minLength: 0
          type: string
          description: "(Max Length: 25)\r\n<para>EAN do produto variante</para>"
        localizacaoEstoque:
          maxLength: 255
          minLength: 0
          type: string
          description: "(Max Length: 255)\r\n<para>Localização no estoque do produto\
            \ variante</para>"
        listaAtacado:
          type: array
          description: Dados de atacado do produto variante
          items:
            $ref: '#/components/schemas/NovoContratoPost.Atacado'
        estoque:
          type: array
          description: Lista de estoque/centro de distribuição do produto. Obrigatório
            se valido for true
          items:
            $ref: '#/components/schemas/NovoContratoPost.Estoque'
        listaAtributos:
          type: array
          description: Lista de atributos do produto
          items:
            $ref: '#/components/schemas/NovoContratoPost.ProdutoAtributo'
        quantidadeMaximaCompraUnidade:
          type: integer
          description: Quantidade máxima de compra do produto variante
          format: int32
        quantidadeMinimaCompraUnidade:
          type: integer
          description: Quantidade mínima de compra do produto variante
          format: int32
        condicao:
          type: string
          description: Condição do produto variante
          enum:
          - Novo
          - Usado
          - Renovado
          - Danificado
        urlVideo:
          type: string
          description: Url do vídeo do Produto
        spot:
          type: boolean
          description: Se o produto aparece no Spot
        paginaProduto:
          type: boolean
          description: Se o produto aparece na Url
        marketplace:
          type: boolean
          description: Se o produto aparece no Marketplace
        somenteParceiros:
          type: boolean
          description: Se o produto aparece somente nos Parceiros
          default: false
        buyBox:
          type: boolean
          description: Se o produto deve ser agrupado pelo EAN
          default: false
        prazoValidade:
          type: integer
          description: Prazo de validade ou consumo do produto
          format: int32
        consumo:
          $ref: '#/components/schemas/NovoContratoPost.ConsumoProduto'
      description: ""
    ProdutosRelacionados:
      type: object
      properties:
        produtoId:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        produtoVarianteId:
          type: integer
          format: int64
        sku:
          type: string
    NovoContratoGet.ProdutoAlterado:
      type: object
      properties:
        produtoId:
          type: integer
          description: Id do produto do variante
          format: int64
        produtoVarianteId:
          type: integer
          description: Id do variante do produto
          format: int64
        sku:
          type: string
          description: Sku do produto
        precoDe:
          type: number
          description: Preço "De" base do variante
          format: double
        precoPor:
          type: number
          description: Preço "Por" base do variante
          format: double
        disponivel:
          type: boolean
          description: Define se um produto variante é valido ou não
        valido:
          type: boolean
          description: Define se um produto variante é valido ou não
        exibirSite:
          type: boolean
          description: Define se um produto deve ser exibido no site
        estoque:
          type: array
          description: Lista de estoque/centro de distribuição do produto. Obrigatório
            se valido for true
          items:
            $ref: '#/components/schemas/NovoContratoGet.Estoque'
        tabelasPreco:
          type: array
          description: Tabelas de preço do produto
          items:
            $ref: '#/components/schemas/NovoContratoGet.ProdutoVariantePrecoTabelaPreco'
    ProdutoDataCadastro:
      type: object
      properties:
        dataCadastro:
          type: string
          format: date-time
    ProdutoEstoque:
      type: object
      properties:
        identificador:
          type: string
        prazoEntrega:
          type: integer
          format: int32
        listaEstoque:
          type: array
          items:
            $ref: '#/components/schemas/Estoque'
    Estoque:
      type: object
      properties:
        estoqueFisico:
          type: integer
          format: int32
        estoqueReservado:
          type: integer
          format: int32
        centroDistribuicaoId:
          type: integer
          format: int32
        produtoVarianteId:
          type: integer
          format: int64
        alertaEstoque:
          type: integer
          format: int32
    ResultadoAtualizacaoEstoque:
      type: object
      properties:
        produtosNaoAtualizados:
          type: array
          items:
            $ref: '#/components/schemas/ProdutoResultadoAtualizacaoEstoque'
        produtosAtualizados:
          type: array
          items:
            $ref: '#/components/schemas/ProdutoResultadoAtualizacaoEstoque'
    ProdutoResultadoAtualizacaoEstoque:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        sku:
          type: string
        centroDistribuicaoId:
          type: integer
          format: int32
        resultado:
          type: boolean
        detalhes:
          type: string
    NovoContratoPut.ProdutoPreco:
      type: object
      properties:
        identificador:
          type: string
          description: Identificador do produto (ProdutoVarianteId ou SKU)
        precoCusto:
          type: number
          description: Preço de custo do produto variante
          format: double
        precoDe:
          type: number
          description: '"PrecoDe" do produto variante'
          format: double
        precoPor:
          type: number
          description: '"PrecoPor" do produto variante'
          format: double
        fatorMultiplicadorPreco:
          type: number
          description: "Fator multiplicador que gera o preço de exibição do produto.\
            \ Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa\
            \ no \"PrecoPor\". (1 por padrão)"
          format: double
    ResultadoAtualizacaoPreco:
      type: object
      properties:
        produtosNaoAtualizados:
          type: array
          items:
            $ref: '#/components/schemas/ProdutoResultadoAtualizacaoPreco'
        produtosAtualizados:
          type: array
          items:
            $ref: '#/components/schemas/ProdutoResultadoAtualizacaoPreco'
    ProdutoResultadoAtualizacaoPreco:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        sku:
          type: string
        resultado:
          type: boolean
        detalhes:
          type: string
    NovoContratoPut.ProdutoPrecoLote:
      required:
      - precoDe
      - precoPor
      - sku
      type: object
      properties:
        sku:
          type: string
          description: Identificador do produto (SKU)
        precoCusto:
          type: number
          description: "Preço de custo do produto variante. Se passado 0 irá setar\
            \ os valores para zero, se for NULO, não irá atualizar o preço de custo."
          format: double
        precoDe:
          type: number
          description: '"PrecoDe" do produto variante'
          format: double
        precoPor:
          type: number
          description: '"PrecoPor" do produto variante'
          format: double
        fatorMultiplicadorPreco:
          type: number
          description: "Fator multiplicador que gera o preço de exibição do produto.\
            \ Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa\
            \ no \"PrecoPor\". (1 por padrão)"
          format: double
    ProdutoInformacaoCompleta:
      type: object
      properties:
        informacaoId:
          type: integer
          format: int64
        titulo:
          type: string
        texto:
          type: string
        exibirSite:
          type: boolean
        tipoInformacao:
          type: string
          enum:
          - Informacoes
          - Beneficios
          - Especificacoes
          - DadosTecnicos
          - Composicao
          - ModoDeUsar
          - Cuidados
          - ItensInclusos
          - Dicas
          - Video
          - Descricao
          - ValorReferente
          - PopUpReferente
          - Prescricao
          - TabelaDeMedidas
          - Spot
          - Sinopse
          - Carrinho
    ProdutoInformacaoProduto:
      type: object
      properties:
        titulo:
          type: string
        texto:
          type: string
        exibirSite:
          type: boolean
        tipoInformacao:
          type: string
          enum:
          - Informacoes
          - Beneficios
          - Especificacoes
          - DadosTecnicos
          - Composicao
          - ModoDeUsar
          - Cuidados
          - ItensInclusos
          - Dicas
          - Video
          - Descricao
          - ValorReferente
          - PopUpReferente
          - Prescricao
          - TabelaDeMedidas
          - Spot
          - Sinopse
          - Carrinho
    CategoriaCaminho:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nome:
          type: string
        categoriaPaiId:
          type: integer
          format: int32
        categoriaERPId:
          type: string
        ativo:
          type: boolean
        isReseller:
          type: boolean
        exibirMatrizAtributos:
          type: string
          enum:
          - Sim
          - Nao
          - Neutro
        quantidadeMaximaCompraUnidade:
          type: integer
          format: int32
        valorMinimoCompra:
          type: number
          format: double
        exibeMenu:
          type: boolean
        urlHotSite:
          type: string
        caminhoHierarquia:
          type: string
        ordem:
          type: integer
          format: int32
        categoriaPrincipal:
          type: boolean
    ProdutoCategoria:
      type: object
      properties:
        categoriaPrincipalId:
          type: integer
          format: int32
        listaCategoriaId:
          type: array
          items:
            type: integer
            format: int32
    ProdutoAlterarCategoriaPrincipal:
      type: object
      properties:
        categoriaId:
          type: integer
          format: int32
    ProdutoCategoriaOrdem:
      type: object
      properties:
        produtoId:
          type: integer
          format: int64
        categoriaId:
          type: integer
          format: int64
        ordem:
          type: integer
          format: int32
    ResultadoAtualizacaoProdutoCategoriaOrdem:
      type: object
      properties:
        sucesso:
          type: boolean
        produtoId:
          type: integer
          format: int64
        categoriaId:
          type: integer
          format: int64
        mensagem:
          type: string
    ProdutoImagem:
      type: object
      properties:
        idImagem:
          type: integer
          format: int64
        nomeArquivo:
          type: string
        url:
          type: string
        ordem:
          type: integer
          format: int32
        estampa:
          type: boolean
        exibirMiniatura:
          type: boolean
    ProdutoImagemPost:
      type: object
      properties:
        base64:
          type: string
        formato:
          type: string
        exibirMiniatura:
          type: boolean
        estampa:
          type: boolean
        ordem:
          type: integer
          format: int32
    ProdutoImagemEstampaPut:
      type: object
      properties:
        idImagem:
          type: integer
          format: int64
    ProdutoVariantePreco:
      type: object
      properties:
        precoDe:
          type: number
          format: double
        precoPor:
          type: number
          format: double
        fatorMultiplicadorPreco:
          type: number
          format: double
    ProdutoVarianteEstoque:
      type: object
      properties:
        estoqueFisico:
          type: integer
          format: int64
        estoqueReservado:
          type: integer
          format: int64
        listProdutoVarianteCentroDistribuicaoEstoque:
          type: array
          items:
            $ref: '#/components/schemas/ProdutoVarianteCentroDistribuicaoEstoque'
    ProdutoVarianteCentroDistribuicaoEstoque:
      type: object
      properties:
        centroDistribuicaoId:
          type: integer
          format: int64
        nome:
          type: string
        estoqueFisico:
          type: integer
          format: int64
        estoqueReservado:
          type: integer
          format: int64
    Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoGet:
      required:
      - avaliacao
      - comentario
      - email
      - nome
      - status
      type: object
      properties:
        produtoVarianteId:
          type: integer
          description: Identificador do produto variante
          format: int64
        sku:
          type: string
          description: Identificador do produto variante
        produtoAvaliacaoId:
          type: integer
          description: Identificador da avaliação de um produto
          format: int64
        comentario:
          type: string
          description: Texto referente a avaliação do produto
        avaliacao:
          type: integer
          description: Escala de 1 a 5 para avaliar o produto.
          format: int32
        usuarioId:
          type: integer
          description: Identificado do usuário
          format: int64
        dataAvaliacao:
          type: string
          description: Referente a data que a avaliação foi criada
          format: date-time
        nome:
          type: string
          description: Nome do usuário que avaliou
        email:
          type: string
          description: Email do usuário que avaliou
        status:
          type: string
          description: Referente ao status que libera a visualização da avaliação
            no site
          enum:
          - Pendente
          - NaoAprovado
          - Aprovado
    AtacadoGet:
      type: object
      properties:
        produtoVarianteAtacadoId:
          type: integer
          format: int64
        precoAtacado:
          type: number
          format: double
        quantidade:
          type: integer
          format: int32
    AtacadoPost:
      type: object
      properties:
        precoAtacado:
          type: number
          format: double
        quantidade:
          type: integer
          format: int32
    Situacao:
      type: object
      properties:
        status:
          type: boolean
    ProdutoVariantePrecos:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        sku:
          type: string
        precoDe:
          type: number
          format: double
        precoPor:
          type: number
          format: double
        fatorMultiplicadorPreco:
          type: number
          format: double
        precosTabelaPreco:
          type: array
          items:
            $ref: '#/components/schemas/ProdutoVariantePrecoTabelaPreco'
    ProdutoVariantePrecoTabelaPreco:
      type: object
      properties:
        produtoVarianteId:
          type: integer
          format: int64
        tabelaPrecoId:
          type: integer
          format: int64
        nome:
          type: string
        precoDe:
          type: number
          format: double
        precoPor:
          type: number
          format: double
    ProdutoSeo:
      type: object
      properties:
        tagCanonical:
          type: string
        title:
          type: string
        metatags:
          type: array
          items:
            $ref: '#/components/schemas/ProdutoSeoMetatag'
    ProdutoSeoMetatag:
      type: object
      properties:
        metatagId:
          type: integer
          format: int64
        content:
          type: string
        httpEquiv:
          type: string
        name:
          type: string
        scheme:
          type: string
    NovoContratoPost.ProdutoSeoPost:
      type: object
      properties:
        tagCanonical:
          type: string
          description: "Informe a URL a ser inserida na TAG Canonical. Caso nenhum\
            \ dado seja inserido, a TAG Canonical não será inserida na Página do Produto."
        title:
          type: string
          description: Informe o title da página do produto.
        metaTags:
          type: array
          description: Informe os dados da Meta Tag.
          items:
            $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoMetaTag'
      description: ""
    NovoContratoPost.ProdutoSeoMetaTag:
      type: object
      properties:
        content:
          type: string
          description: Dados da Meta Tag.
        httpEquiv:
          type: string
          description: Dados da Meta Tag.
        name:
          type: string
          description: Dados da Meta Tag.
        scheme:
          type: string
          description: Dados da Meta Tag.
      description: ""
    NovoContratoPost.MetatagsPost:
      type: object
      properties:
        metas:
          type: array
          description: Lista de Meta Tags.
          items:
            $ref: '#/components/schemas/NovoContratoPost.ProdutoSeoMetaTag'
      description: ""
    NovoContratoPost.MetatagsDelete:
      type: object
      properties:
        metatags:
          type: array
          description: Lista de identificadores de Meta Tags.
          items:
            $ref: '#/components/schemas/NovoContratoPost.Metatag'
      description: ""
    NovoContratoPost.Metatag:
      type: object
      properties:
        metatagId:
          type: integer
          description: Identificador do MetaTag
          format: int64
      description: ""
    Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacaoPut:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          enum:
          - Pendente
          - NaoAprovado
          - Aprovado
      description: Objeto referente a atualização de um status de uma avaliação
    Fbits.API.Contratos.ProdutoAvaliacao.ProdutoAvaliacao:
      required:
      - avaliacao
      - comentario
      - email
      - nome
      - status
      type: object
      properties:
        comentario:
          type: string
          description: Texto referente a avaliação do produto
        avaliacao:
          type: integer
          description: Escala de 1 a 5 para avaliar o produto.
          format: int32
        usuarioId:
          type: integer
          description: Identificado do usuário
          format: int64
        dataAvaliacao:
          type: string
          description: Referente a data que a avaliação foi criada
          format: date-time
        nome:
          type: string
          description: Nome do usuário que avaliou
        email:
          type: string
          description: Email do usuário que avaliou
        status:
          type: string
          description: Referente ao status que libera a visualização da avaliação
            no site
          enum:
          - Pendente
          - NaoAprovado
          - Aprovado
      description: Referente ao dados de uma avaliação de um produto
    ObterPromocoesDTO:
      type: object
      properties:
        promocoes:
          type: array
          items:
            $ref: '#/components/schemas/PromocaoDTO'
        total:
          type: integer
          format: int64
    PromocaoDTO:
      type: object
      properties:
        promocaoId:
          type: integer
          format: int64
        nome:
          type: string
        dataInicio:
          type: string
          format: date-time
        dataTermino:
          type: string
          format: date-time
        cupons:
          type: array
          items:
            type: string
        permiteMultiplosCupons:
          type: boolean
        permiteAcumular:
          type: boolean
        ordem:
          type: integer
          format: int32
        ativo:
          type: boolean
        limiteCupomPorCliente:
          type: integer
          format: int64
        limiteCupomTotal:
          type: integer
          format: int64
        quantidadeTotalCuponsUtilizados:
          type: integer
          format: int64
    VincularCuponsDTO:
      type: object
      properties:
        cupons:
          type: array
          items:
            type: string
        permiteReutilizarCupom:
          type: boolean
        limiteCupomPorCliente:
          type: integer
          format: int32
        limiteCupomTotal:
          type: integer
          format: int32
        tokenApiPublica:
          type: string
    PromocaoBaseDTO:
      type: object
      properties:
        dados:
          $ref: '#/components/schemas/PromocaoBaseDadosDTO'
        mensagem:
          type: string
    PromocaoBaseDadosDTO:
      type: object
      properties:
        estrutura:
          $ref: '#/components/schemas/PromocaoBaseEstruturaDTO'
        condicoes:
          type: array
          items:
            $ref: '#/components/schemas/PromocaoBaseCondicaoDTO'
        acoes:
          type: array
          items:
            $ref: '#/components/schemas/PromocaoBaseAcaoDTO'
        divulgacoes:
          type: array
          items:
            $ref: '#/components/schemas/PromocaoBaseDivulgacaoDTO'
        selos:
          type: array
          items:
            $ref: '#/components/schemas/PromocaoBaseSeloDTO'
        parceiros:
          type: array
          items:
            $ref: '#/components/schemas/PromocaoBaseParceiroDTO'
    PromocaoBaseEstruturaDTO:
      required:
      - ativo
      - dataInicio
      - dataTermino
      - nome
      - permiteAcumular
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        dataInicio:
          type: string
          format: date-time
        dataTermino:
          type: string
          format: date-time
        permiteAcumular:
          type: boolean
        permiteReutilizarCupom:
          type: boolean
        limiteCupomPorCliente:
          type: integer
          format: int32
        limiteCupomTotal:
          type: integer
          format: int32
        ativo:
          type: boolean
        ordem:
          type: integer
          format: int32
        cupons:
          type: array
          items:
            type: string
    PromocaoBaseCondicaoDTO:
      required:
      - promocaoCondicaoId
      - promocaoLogicaId
      type: object
      properties:
        promocaoCondicaoId:
          type: integer
          format: int64
        promocaoLogicaId:
          type: integer
          format: int32
        argumentos:
          type: array
          items:
            $ref: '#/components/schemas/PromocaoBaseCondicaoArgumentoDTO'
    PromocaoBaseAcaoDTO:
      required:
      - promocaoAcaoId
      type: object
      properties:
        promocaoAcaoId:
          type: integer
          format: int64
        argumentos:
          type: array
          items:
            $ref: '#/components/schemas/PromocaoBaseAcaoArgumentoDTO'
    PromocaoBaseDivulgacaoDTO:
      required:
      - conteudo
      - titulo
      type: object
      properties:
        tipoDivulgacao:
          type: integer
          format: int32
        conteudo:
          type: string
        titulo:
          type: string
    PromocaoBaseSeloDTO:
      type: object
      properties:
        seloId:
          type: integer
          format: int32
        ordem:
          type: integer
          format: int32
    PromocaoBaseParceiroDTO:
      required:
      - parceiroId
      type: object
      properties:
        parceiroId:
          type: integer
          format: int32
    PromocaoBaseCondicaoArgumentoDTO:
      required:
      - nrOrdem
      - valor
      type: object
      properties:
        nrOrdem:
          type: integer
          format: int32
        valor:
          type: string
    PromocaoBaseAcaoArgumentoDTO:
      required:
      - nrOrdem
      - valor
      type: object
      properties:
        nrOrdem:
          type: integer
          format: int32
        valor:
          type: string
    Regiao:
      type: object
      properties:
        regiaoId:
          type: integer
          format: int64
        nome:
          type: string
        descricao:
          type: string
        ativo:
          type: boolean
        arquivado:
          type: boolean
        ordem:
          type: integer
          format: int32
        usuario:
          type: string
        dataCriacao:
          type: string
          format: date-time
        tipoRegiao:
          type: string
          enum:
          - Vitrine
          - Preco
          - PrecoEVitrine
        nomePriorizacao:
          type: string
        cDsPriorizacao:
          type: array
          items:
            $ref: '#/components/schemas/CDPriorizacao'
        regioesFaixasCep:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoFaixaCep'
        regioesGoogle:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoGoogle'
        tabelaPreco:
          $ref: '#/components/schemas/TabelaPrecoRegionalizacao'
    CDPriorizacao:
      type: object
      properties:
        centroDistribuicaoId:
          type: integer
          format: int32
        nome:
          type: string
    RegiaoFaixaCep:
      type: object
      properties:
        regiaoFaixaCepId:
          type: integer
          format: int64
        nomeArea:
          type: string
        tipoRegiaoFaixaCep:
          type: string
          enum:
          - Manual
          - PorEndereco
          - PorPriorizacaoCD
        cepInicial:
          type: string
        cepFinal:
          type: string
        ativo:
          type: boolean
        dataCriacao:
          type: string
          format: date-time
    RegiaoGoogle:
      type: object
      properties:
        regiaoGoogleId:
          type: integer
          format: int64
        nomeArea:
          type: string
        regiaoGoogleValor:
          type: integer
          format: int64
        ativo:
          type: boolean
        dataCriacao:
          type: string
          format: date-time
    TabelaPrecoRegionalizacao:
      type: object
      properties:
        tabelaPrecoId:
          type: integer
          format: int32
        nome:
          type: string
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
        ativo:
          type: boolean
        site:
          type: boolean
        produtosImportados:
          type: boolean
        prioridade:
          type: integer
          format: int32
        processado:
          type: boolean
    RegionalizacaoPutDTO:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        ativo:
          type: boolean
        arquivado:
          type: boolean
        ordem:
          type: integer
          format: int32
        tabelaPrecoId:
          type: integer
          format: int32
        tipoRegiao:
          type: string
          enum:
          - Vitrine
          - Preco
          - PrecoEVitrine
        nomePriorizacao:
          type: string
        regioesFaixasCep:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoFaixaCepPutDTO'
        regioesGoogle:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoGooglePutDTO'
    RegiaoFaixaCepPutDTO:
      type: object
      properties:
        regiaoFaixaCepId:
          type: integer
          format: int64
        nomeArea:
          type: string
        tipoRegiaoFaixaCep:
          type: string
          enum:
          - Manual
          - PorEndereco
          - PorPriorizacaoCD
        cepInicial:
          type: integer
          format: int32
        cepFinal:
          type: integer
          format: int32
        ativo:
          type: boolean
    RegiaoGooglePutDTO:
      type: object
      properties:
        regiaoGoogleId:
          type: integer
          format: int64
        nomeArea:
          type: string
        regiaoGoogleValor:
          type: integer
          format: int64
        ativo:
          type: boolean
    RegiaoPaginacao1:
      type: object
      properties:
        totalAtivo:
          type: integer
          format: int32
        totalInativo:
          type: integer
          format: int32
        totalArquivado:
          type: integer
          format: int32
        totalItensCadastrados:
          type: integer
          format: int32
        totalItens:
          type: integer
          format: int32
        totalItensExibidos:
          type: integer
          format: int32
        totalPaginas:
          type: integer
          format: int32
        paginaAtual:
          type: integer
          format: int32
        itens:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoItem'
    RegiaoItem:
      type: object
      properties:
        regiaoId:
          type: integer
          format: int64
        tipoRegiao:
          type: string
          enum:
          - Vitrine
          - Preco
          - PrecoEVitrine
        nome:
          type: string
        descricao:
          type: string
        ativo:
          type: boolean
        arquivado:
          type: boolean
        ordem:
          type: integer
          format: int32
        usuario:
          type: string
        tabelaPrecoId:
          type: integer
          format: int64
        tabelaPreco:
          type: string
        dataCriacao:
          type: string
          format: date-time
        dataCriacaoFormatada:
          type: string
        nomePriorizacao:
          type: string
        regiaoFaixaCepInicial:
          type: string
        regiaoFaixaCepFinal:
          type: string
        regiaoGoogle:
          type: string
        totalFaixasCeps:
          type: integer
          format: int32
        totalRegioesGoogle:
          type: integer
          format: int32
        regioesFaixasCep:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoFaixaCepItem'
        regioesGoogle:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoGoogleItem'
    RegiaoFaixaCepItem:
      type: object
      properties:
        regiaoFaixaCepId:
          type: integer
          format: int64
        nomeArea:
          type: string
        tipoRegiaoFaixaCep:
          type: string
          enum:
          - Manual
          - PorEndereco
          - PorPriorizacaoCD
        cepInicial:
          type: string
        cepFinal:
          type: string
        ativo:
          type: boolean
        dataCriacao:
          type: string
          format: date-time
    RegiaoGoogleItem:
      type: object
      properties:
        regiaoGoogleId:
          type: integer
          format: int64
        nomeArea:
          type: string
        regiaoGoogleValor:
          type: integer
          format: int64
        ativo:
          type: boolean
        dataCriacao:
          type: string
          format: date-time
    RegionalizacaoPostDTO:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        ativo:
          type: boolean
        arquivado:
          type: boolean
        ordem:
          type: integer
          format: int32
        usuario:
          type: string
        tabelaPrecoId:
          type: integer
          format: int32
        tipoRegiao:
          type: string
          enum:
          - Vitrine
          - Preco
          - PrecoEVitrine
        nomePriorizacao:
          type: string
        regioesFaixasCep:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoFaixaCepPostDTO'
        regioesGoogle:
          type: array
          items:
            $ref: '#/components/schemas/RegiaoGooglePostDTO'
    RegiaoFaixaCepPostDTO:
      type: object
      properties:
        nomeArea:
          type: string
        tipoRegiaoFaixaCep:
          type: string
          enum:
          - Manual
          - PorEndereco
          - PorPriorizacaoCD
        cepInicial:
          type: integer
          format: int32
        cepFinal:
          type: integer
          format: int32
        ativo:
          type: boolean
    RegiaoGooglePostDTO:
      type: object
      properties:
        nomeArea:
          type: string
        regiaoGoogleValor:
          type: integer
          format: int64
        ativo:
          type: boolean
    RegionalizacaoPostResult:
      type: object
      properties:
        id:
          type: integer
          format: int32
    RegiaoArquivar:
      type: object
      properties:
        arquivado:
          type: boolean
    RegiaoArquivarResultado:
      type: object
      properties:
        sucesso:
          type: boolean
    NovoContratoGet.Reseller:
      type: object
      properties:
        resellerId:
          type: integer
          description: Id do reseller
          format: int64
        razaoSocial:
          type: string
          description: Razão Social/Nome do Reseller
        centroDistribuicaoId:
          type: integer
          description: Id do centro de distribuição do reseller
          format: int64
        ativo:
          type: boolean
          description: Reseller Ativo/Inativo
        ativacaoAutomaticaProdutos:
          type: boolean
          description: Se o reseller tem ativação automática dos produtos
        autonomia:
          type: boolean
          description: Se o reseller tem autononia
        buyBox:
          type: boolean
          description: Se o reseller tem buybox
        nomeMarketPlace:
          type: string
          description: Retorna o Nome do marketplace
    NovoContratoPost.ResellerPost:
      required:
      - ativacaoAutomaticaProdutos
      - ativo
      - buyBox
      - cep
      - cnpj
      - email
      - inscricaoEstadual
      - isento
      - razaoSocial
      - split
      - telefone
      - tipoAutonomia
      type: object
      properties:
        razaoSocial:
          type: string
          description: Razão Social/Nome do Reseller
        cnpj:
          type: string
          description: CNPJ do Seller
        inscricaoEstadual:
          type: string
          description: Inscrição Estadual do Seller
        isento:
          type: boolean
          description: Seller isento de inscrição estadual
        email:
          type: string
          description: Email de contato do Seller
        telefone:
          type: string
          description: Telefone de contato do seller com ddd (xx) xxxx-xxxx
        tipoAutonomia:
          type: string
          description: Tipo de autonomia do vendedor
          enum:
          - ComAutonomia
          - SemAutonomia
        ativo:
          type: boolean
          description: Seller Ativo
        split:
          type: boolean
          description: Se irá ter Split de frete
          default: false
        buyBox:
          type: boolean
          description: Se o produto deverá ser apresentado em BuyBox (apenas para
            Seller's e Marketplace's TrayCorp)
          default: false
        ativacaoAutomaticaProdutos:
          type: boolean
          description: Se os produtos deverão sem ativados automaticamente no marketplace
          default: false
        cep:
          type: string
          description: Cep do Seller (utilizado para o calculo de frete)
    NovoContratoPost.ResellerPostResponse:
      type: object
      properties:
        token:
          type: string
          description: Token de acesso do seller
        resellerId:
          type: integer
          format: int64
    NovoContratoPut.ResellerPut:
      required:
      - ativacaoAutomaticaProdutos
      - ativo
      - buyBox
      - cep
      - cnpj
      - email
      - inscricaoEstadual
      - isento
      - razaoSocial
      - split
      - telefone
      - tipoAutonomia
      type: object
      properties:
        razaoSocial:
          type: string
          description: Razão Social/Nome do Reseller
        cnpj:
          type: string
          description: CNPJ do Seller
        inscricaoEstadual:
          type: string
          description: Inscrição Estadual do Seller
        isento:
          type: boolean
          description: Seller isento de inscrição estadual
        email:
          type: string
          description: Email de contato do Seller
        telefone:
          type: string
          description: Telefone de contato do seller com ddd (xx) xxxx-xxxx
        tipoAutonomia:
          type: string
          description: Tipo de autonomia do vendedor
          enum:
          - ComAutonomia
          - SemAutonomia
        ativo:
          type: boolean
          description: Seller Ativo
        split:
          type: boolean
          description: Se irá ter Split de frete
          default: false
        buyBox:
          type: boolean
          description: Se o produto deverá ser apresentado em BuyBox (apenas para
            Seller's e Marketplace's TrayCorp)
          default: false
        ativacaoAutomaticaProdutos:
          type: boolean
          description: Se os produtos deverão sem ativados automaticamente no marketplace
          default: false
        cep:
          type: string
          description: Cep do Seller (utilizado para o calculo de frete)
    ResellerStatus:
      type: object
      properties:
        ativo:
          type: boolean
    SituacaoPedido:
      type: object
      properties:
        situacaoPedidoId:
          type: integer
          format: int64
        nome:
          type: string
        descricao:
          type: string
        observacao:
          type: string
    TabelaPreco:
      type: object
      properties:
        tabelaPrecoId:
          type: integer
          format: int64
        nome:
          type: string
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
        ativo:
          type: boolean
        isSite:
          type: boolean
    TabelaPrecoPost:
      required:
      - ativo
      - dataFinal
      - dataInicial
      - nome
      type: object
      properties:
        nome:
          type: string
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
        ativo:
          type: boolean
    TabelaPrecoProdutoVariante:
      type: object
      properties:
        tabelaPrecoProdutoVarianteId:
          type: integer
          format: int64
        tabelaPrecoId:
          type: integer
          format: int64
        sku:
          type: string
        produtoVarianteId:
          type: integer
          format: int64
        precoDe:
          type: number
          format: double
        precoPor:
          type: number
          format: double
    TabelaPrecoProdutoVariantePost:
      required:
      - precoDe
      - precoPor
      - sku
      type: object
      properties:
        sku:
          type: string
        precoDe:
          type: number
          format: double
        precoPor:
          type: number
          format: double
    TabelaPrecoProdutoVariantePostRetorno:
      type: object
      properties:
        sucesso:
          type: array
          items:
            $ref: '#/components/schemas/TabelaPrecoProdutoVarianteResultado'
        erro:
          type: array
          items:
            $ref: '#/components/schemas/TabelaPrecoProdutoVarianteResultado'
    TabelaPrecoProdutoVarianteResultado:
      type: object
      properties:
        sku:
          type: string
        resultado:
          type: boolean
        detalhes:
          type: string
    TipoEventoSugestaoProduto:
      type: object
      properties:
        tipoEventoId:
          type: integer
          format: int64
        produtoVariantePrincipalId:
          type: integer
          format: int64
        quantidade:
          type: integer
          format: int32
    Fbits.API.Contratos.VinculoProdutoTipoEvento.PostSugestaoProdutoTipoEvento:
      required:
      - produtos
      type: object
      properties:
        produtos:
          type: array
          description: Lista de produtos variantes.
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.VinculoProdutoTipoEvento.SugestaoProduto'
      description: ""
    ResultadoInsercaoSugestaoProdutoTipoEvento:
      type: object
      properties:
        sugestaoProdutosInseridos:
          type: array
          items:
            $ref: '#/components/schemas/SugestaoProdutoResultadoInsercao'
        produtosNaoInseridos:
          type: array
          items:
            $ref: '#/components/schemas/SugestaoProdutoResultadoInsercao'
    SugestaoProdutoResultadoInsercao:
      type: object
      properties:
        tipoEventoId:
          type: integer
          format: int64
        produtoVarianteId:
          type: integer
          format: int64
        detalhes:
          type: string
    Fbits.API.Contratos.TipoEvento.TipoEventoGet:
      type: object
      properties:
        tipoEventoId:
          type: integer
          description: ""
          format: int64
        nome:
          type: string
          description: ""
        tipoEntrega:
          type: string
          description: ""
          enum:
          - EntregaAgendada
          - EntregaConformeCompraRealizada
          - Todos
          - Nenhum
        tipoDisponibilizacao:
          type: string
          description: ""
          enum:
          - DisponibilizacaoDeCreditos
          - DisponibilizacaoDeProdutos
          - Todos
        permitirRemocaoAutomaticaProdutos:
          type: boolean
          description: ""
        corHexTituloInformacoes:
          type: string
          description: ""
        corHexCorpoInformacoes:
          type: string
          description: ""
        numeroAbasInformacoes:
          type: integer
          description: ""
          format: int32
        quantidadeDiasParaEventoExpirar:
          type: integer
          description: ""
          format: int32
        numeroLocaisEvento:
          type: integer
          description: ""
          format: int32
        ativo:
          type: boolean
          description: ""
        disponivel:
          type: boolean
          description: ""
        tipoBeneficiarioFrete:
          type: string
          description: ""
          enum:
          - DonodaLista
          - Convidado
        caminhoLogoEvento:
          type: string
          description: ""
        caminhoSubTemplate:
          type: string
          description: ""
        sugestaoProdutos:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/NovoContratoPost.TipoEventoSugestaoProduto'
      description: ""
    NovoContratoPost.TipoEventoSugestaoProduto:
      required:
      - produtoVarianteId
      - tipoEventoId
      type: object
      properties:
        tipoEventoId:
          type: integer
          description: ""
          format: int64
        produtoVarianteId:
          type: integer
          description: ""
          format: int64
        quantidade:
          type: integer
          description: ""
          format: int32
      description: ""
    Fbits.API.Contratos.TipoEvento.TipoEventoPost:
      required:
      - ativo
      - corHexCorpoInformacoes
      - corHexTituloInformacoes
      - disponivel
      - imagemLogoEvento
      - nome
      - numeroAbasInformacoes
      - numeroLocaisEvento
      - permitirRemocaoAutomaticaProdutos
      - quantidadeDiasParaEventoExpirar
      - tipoBeneficiarioFrete
      - tipoDisponibilizacao
      - tipoEntrega
      type: object
      properties:
        nome:
          type: string
          description: Nome do Tipo de Evento.
        tipoEntrega:
          type: string
          description: Tipo de entrega.
          enum:
          - EntregaAgendada
          - EntregaConformeCompraRealizada
          - Todos
          - Nenhum
        tipoDisponibilizacao:
          type: string
          description: Disponibilização do Tipo de Evento.
          enum:
          - DisponibilizacaoDeCreditos
          - DisponibilizacaoDeProdutos
          - Todos
        permitirRemocaoAutomaticaProdutos:
          type: boolean
          description: Permissão para remoção automática de produtos.
        corHexTituloInformacoes:
          type: string
          description: Cor em hexadecimal para o titulo de informações.
        corHexCorpoInformacoes:
          type: string
          description: Cor em hexadecimal para o corpo de informações.
        numeroAbasInformacoes:
          type: integer
          description: "Número de abas de informações, podendo ser de 1 a 2."
          format: int32
        quantidadeDiasParaEventoExpirar:
          type: integer
          description: Quantidade de dias para que o evento expire.
          format: int32
        numeroLocaisEvento:
          type: integer
          description: Quantidade de locais do evento.
          format: int32
        ativo:
          type: boolean
          description: Informa se o evento está ativo ou inativo.
        disponivel:
          type: boolean
          description: Informa a disponibilidade do evento.
        tipoBeneficiarioFrete:
          type: string
          description: O beneficiario do frete.
          enum:
          - DonodaLista
          - Convidado
        imagemLogoEvento:
          type: string
          description: Imagem da logo do evento em base64.
        sugestaoProdutos:
          type: array
          description: Produtos Sugeridos para este evento.
          items:
            $ref: '#/components/schemas/NovoContratoPost.TipoEventoSugestaoProduto'
      description: ""
    Usuario:
      required:
      - email
      - nome
      - origemContato
      - telefoneResidencial
      - tipoPessoa
      type: object
      properties:
        usuarioId:
          type: integer
          format: int64
        bloqueado:
          type: boolean
        grupoInformacaoCadastral:
          type: array
          items:
            $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastral'
        tipoPessoa:
          type: string
          enum:
          - Fisica
          - Juridica
        origemContato:
          type: string
          enum:
          - Google
          - Bing
          - Jornal
          - PatrocinioEsportivo
          - RecomendacaoAlguem
          - Revista
          - SiteInternet
          - Televisao
          - Outro
          - UsuarioImportadoViaAdmin
          - PayPalExpress
        tipoSexo:
          type: string
          enum:
          - Undefined
          - Masculino
          - Feminino
        nome:
          type: string
        cpf:
          type: string
        email:
          type: string
        rg:
          type: string
        telefoneResidencial:
          type: string
        telefoneCelular:
          type: string
        telefoneComercial:
          type: string
        dataNascimento:
          type: string
          format: date-time
        razaoSocial:
          type: string
        cnpj:
          type: string
        inscricaoEstadual:
          type: string
        responsavel:
          type: string
        dataCriacao:
          type: string
          format: date-time
        dataAtualizacao:
          type: string
          format: date-time
        revendedor:
          type: boolean
        listaInformacaoCadastral:
          type: array
          items:
            $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastral'
        avatar:
          type: string
        ip:
          type: string
        aprovado:
          type: boolean
    UsuarioGrupoInformacaoCadastral:
      type: object
      properties:
        chave:
          type: string
        valor:
          type: string
    UsuarioPost:
      required:
      - email
      - nome
      - origemContato
      - telefoneResidencial
      - tipoPessoa
      type: object
      properties:
        tipoPessoa:
          type: string
          enum:
          - Fisica
          - Juridica
        origemContato:
          type: string
          enum:
          - Google
          - Bing
          - Jornal
          - PatrocinioEsportivo
          - RecomendacaoAlguem
          - Revista
          - SiteInternet
          - Televisao
          - Outro
          - UsuarioImportadoViaAdmin
          - PayPalExpress
        tipoSexo:
          type: string
          enum:
          - Undefined
          - Masculino
          - Feminino
        nome:
          type: string
        cpf:
          type: string
        email:
          type: string
        rg:
          type: string
        telefoneResidencial:
          type: string
        telefoneCelular:
          type: string
        telefoneComercial:
          type: string
        dataNascimento:
          type: string
          format: date-time
        razaoSocial:
          type: string
        cnpj:
          type: string
        inscricaoEstadual:
          type: string
        responsavel:
          type: string
        dataCriacao:
          type: string
          format: date-time
        dataAtualizacao:
          type: string
          format: date-time
        revendedor:
          type: boolean
        listaInformacaoCadastral:
          type: array
          items:
            $ref: '#/components/schemas/UsuarioGrupoInformacaoCadastral'
        avatar:
          type: string
        ip:
          type: string
        aprovado:
          type: boolean
    UsuarioGrupoInformacaoCadastralEmLote:
      type: object
      properties:
        usuarioIdentificador:
          type: string
        informacoesCadastrais:
          type: array
          items:
            $ref: '#/components/schemas/GrupoInformacaoCadastralEmLote'
    GrupoInformacaoCadastralEmLote:
      type: object
      properties:
        grupoInformacaoCadastral:
          type: string
          enum:
          - PessoaFisica
          - PessoaJuridica
          - NewsLetter
          - CadastroPersonalizado
        chave:
          type: string
        valor:
          type: string
    ResultadoAtualizacaoUsuarioInformacaoCadastral:
      type: object
      properties:
        usuariosNaoAtualizados:
          type: array
          items:
            $ref: '#/components/schemas/ResultadoAtualizacao'
        usuariosAtualizados:
          type: array
          items:
            $ref: '#/components/schemas/ResultadoAtualizacao'
    ResultadoAtualizacao:
      type: object
      properties:
        indice:
          type: integer
          format: int32
        identificador:
          type: string
        chave:
          type: string
        valor:
          type: string
        grupoInformacaoCadastralId:
          type: integer
          format: int32
        resultado:
          type: boolean
        detalhes:
          type: string
    Endereco:
      required:
      - bairro
      - cep
      - cidade
      - estado
      - nomeEndereco
      - numero
      - rua
      type: object
      properties:
        enderecoId:
          type: integer
          format: int64
        nomeEndereco:
          type: string
        rua:
          type: string
        numero:
          type: string
        complemento:
          type: string
        referencia:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        cep:
          type: string
        utilizadoUltimoPedido:
          type: boolean
        pais:
          type: string
    EnderecoStatus:
      type: object
      properties:
        status:
          type: boolean
    Post:
      type: object
      properties:
        parceiroId:
          type: integer
          format: int64
        vinculoVitalicio:
          type: boolean
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
    Put:
      type: object
      properties:
        vinculoVitalicio:
          type: boolean
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
    Fbits.API.Contratos.UsuarioDelete.UsuarioParceiroDelete:
      type: object
      properties:
        parceiroId:
          type: integer
          description: "(Max Length: 4)\r\n<para>Número identificador do parceiro</para>"
          format: int64
    UsuarioLimiteCredito:
      type: object
      properties:
        usuarioId:
          type: integer
          format: int64
        valor:
          type: number
          format: double
        saldo:
          type: number
          format: double
    UsuarioNewsletter:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
        sexo:
          type: string
        status:
          type: boolean
        grupoInformacao:
          type: array
          items:
            $ref: '#/components/schemas/UsuarioNewsletterGrupoInformacao'
    UsuarioNewsletterGrupoInformacao:
      type: object
      properties:
        nome:
          type: string
        valor:
          type: string
    PedidoHATEOAS:
      type: object
      properties:
        pedidoId:
          type: integer
          format: int64
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Link:
      type: object
      properties:
        href:
          type: string
        rel:
          type: string
        method:
          type: string
    NovoContratoGet.UsuarioComunicacao:
      type: object
      properties:
        recebimentoNewsletter:
          type: boolean
          description: Retorna se o usuário ativou o o recebimento de newsletter
      description: ""
    UsuarioComunicacao:
      type: object
      properties:
        recebimentoNewsletter:
          type: boolean
        nome:
          type: string
        tipoSexo:
          type: string
          enum:
          - Undefined
          - Masculino
          - Feminino
    NovoContratoGet.UsuarioListaDesejos:
      type: object
      properties:
        produtoId:
          type: integer
          description: Id do produto
          format: int64
        produtoVarianteId:
          type: integer
          description: Id do produto variante
          format: int64
        quantidade:
          type: integer
          description: Quantidade do produto
          format: int32
        dataAdicao:
          type: string
          description: Data da adição do produto na lista de desejo
          format: date-time
    UsuarioImagemPost:
      type: object
      properties:
        base64:
          type: string
        formato:
          type: string
    NovoContratoGet.UsuarioAvatar:
      type: object
      properties:
        urlAvatar:
          type: string
          description: Retorna a url de avatar do usuário
      description: ""
    NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral:
      required:
      - nome
      - obrigatorio
      - ordem
      - tipo
      type: object
      properties:
        nome:
          type: string
          description: <para>Nome do campo</para>
        tipo:
          type: string
          description: ""
          enum:
          - TextoLivre
          - ValoresPredefinidos
          - RadioButton
        obrigatorio:
          type: boolean
          description: ""
        ordem:
          type: integer
          description: ""
          format: int32
        valorPreDefinido:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/NovoContratoPost.UsuarioValoresDefinidosCampoGrupoInformacao'
      description: ""
    NovoContratoPost.UsuarioValoresDefinidosCampoGrupoInformacao:
      type: object
      properties:
        valor:
          type: string
        ordem:
          type: integer
          format: int32
    UsuarioCamposGrupoInformacaoCadastral:
      type: object
      properties:
        grupoInformacaoCadastralId:
          type: integer
          format: int64
        nome:
          type: string
        tipo:
          type: string
          enum:
          - TextoLivre
          - ValoresPredefinidos
          - RadioButton
        obrigatorio:
          type: boolean
        ordem:
          type: integer
          format: int32
        valorPreDefinido:
          type: array
          items:
            $ref: '#/components/schemas/UsuarioValoresDefinidosCampoGrupoInformacao'
    UsuarioValoresDefinidosCampoGrupoInformacao:
      type: object
      properties:
        valoresDefinidosCampoGrupoInformacaoId:
          type: integer
          format: int64
        valor:
          type: string
        ordem:
          type: integer
          format: int32
    UsuarioCamposGrupoInformacaoCadastralPut:
      type: object
      properties:
        nome:
          type: string
        obrigatorio:
          type: boolean
        ordem:
          type: integer
          format: int32
    UsuarioValoresDefinidosCampoGrupoInformacaoPut:
      type: object
      properties:
        valor:
          type: string
        ordem:
          type: integer
          format: int32
    UsuarioAprovar:
      required:
      - aprovado
      - identificador
      type: object
      properties:
        identificador:
          type: string
        aprovado:
          type: boolean
    ResultadoAprovacaoUsuarios:
      type: object
      properties:
        usuariosAtualizados:
          type: array
          items:
            type: string
        usuariosNaoAtualizados:
          type: array
          items:
            type: string
    BloquearUsuario:
      type: object
      properties:
        email:
          type: string
        bloqueado:
          type: boolean
    ResultadoBloquearUsuario:
      type: object
      properties:
        usuariosAtualizados:
          type: array
          items:
            type: string
        usuariosNaoAtualizados:
          type: array
          items:
            type: string
    InscricaoGet:
      type: object
      properties:
        inscricaoId:
          type: integer
          format: int64
        nome:
          type: string
        appUrl:
          type: string
        ativo:
          type: boolean
        emailResponsavel:
          type: string
        topico:
          type: array
          items:
            type: string
        usuario:
          type: string
        header:
          type: array
          items:
            $ref: '#/components/schemas/HeaderGet'
    HeaderGet:
      type: object
      properties:
        headerId:
          type: integer
          format: int64
        chave:
          type: string
        valor:
          type: string
    Fbits.API.Contratos.Webhook.PostInscricao:
      required:
      - appUrl
      - ativo
      - emailResponsavel
      - nome
      - topicos
      - usuario
      type: object
      properties:
        nome:
          type: string
          description: Nome da inscrição.
        appUrl:
          type: string
          description: Url para qual deve ser enviada as notificações.
        topicos:
          type: array
          description: Tópicos em que deseja se inscrever.
          items:
            type: string
        usuario:
          type: string
          description: Usuário que está realizando a inscrição.
        ativo:
          type: boolean
          description: "Status da inscrição, se ativada ou desativada."
        emailResponsavel:
          type: string
          description: Email do responsável para notificá-lo quando não seja possível
            notificá-lo pelo AppUrl informado.
        headers:
          type: array
          description: "Headers que devam ser adicionados ao realizar a requisiçã\
            o para o AppUrl. Headers de Conteúdo como 'ContentType' não são necessá\
            rio. As requisições realizada\r\nsempre serão no formato 'application/json'."
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PostHeader'
      description: ""
    Fbits.API.Contratos.Webhook.PostHeader:
      required:
      - chave
      - valor
      type: object
      properties:
        chave:
          type: string
          description: "Chave do header, por exemplo: 'Authorization'."
        valor:
          type: string
          description: "Valor / Conteúdo do header, por exemplo: 'Basic 0G3EQWD-W324F-234SD-2421OFSD'"
      description: ""
    Fbits.API.Contratos.Webhook.PutInscricao:
      required:
      - appUrl
      - ativo
      - emailResponsavel
      - nome
      - topicos
      - usuario
      type: object
      properties:
        nome:
          type: string
          description: Nome da inscrição.
        appUrl:
          type: string
          description: Url para qual deve ser enviada as notificações.
        topicos:
          type: array
          description: Tópicos em que deseja se inscrever.
          items:
            type: string
        usuario:
          type: string
          description: Usuário que está realizando a inscrição.
        ativo:
          type: boolean
          description: "Status da inscrição, se ativada ou desativada."
        emailResponsavel:
          type: string
          description: Email do responsável para notificá-lo quando não seja possível
            notificá-lo pelo AppUrl informado.
        observacao:
          type: string
          description: Observação que deseje fazer com relação a atualização da inscrição.
        headers:
          type: array
          description: "Headers que devam ser adicionados ao realizar a requisiçã\
            o para o AppUrl. Headers de Conteúdo como 'ContentType' não são necessá\
            rio. As requisições realizada\r\nsempre serão no formato 'application/json'."
          items:
            $ref: '#/components/schemas/Fbits.API.Contratos.Webhook.PostHeader'
      description: ""
    Fbits.API.Contratos.Webhook.PutAtivarInscricao:
      required:
      - ativo
      - usuario
      type: object
      properties:
        ativo:
          type: boolean
          description: Status que deseja atualizar a inscrição. True (Ativada) ou
            False (desativada).
        usuario:
          type: string
          description: Usuário que está realizando a atualização.
        observacao:
          type: string
          description: Observação que deseje fazer com relação a ativação/desativação
            da inscrição.
      description: ""
    TopicoGet:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        payload:
          type: string
  securitySchemes:
    apiKey:
      type: apiKey
      description: API Key Authentication
      name: Authorization
      in: header
x-original-swagger-version: "2.0"
