{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Fbits.API"
    },
    "host": "api.fbits.net",
    "schemes": [
        "https"
    ],
    "paths": {
        "/atributos": {
            "get": {
                "tags": [
                    "Atributo"
                ],
                "summary": "Retorna todos os atributos",
                "operationId": "Atributo_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de atributos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Atributo"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Atributo"
                ],
                "summary": "Insere um novo atributo",
                "operationId": "Atributo_PostByatributo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "atributo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Atributo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do atributo gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/atributos/{nome}": {
            "get": {
                "tags": [
                    "Atributo"
                ],
                "summary": "Retorna um atributo específico",
                "operationId": "Atributo_GetBynome",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "nome",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Atributo encontrado",
                        "schema": {
                            "$ref": "#/definitions/Atributo"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Atributo"
                ],
                "summary": "Atualiza um atributo",
                "operationId": "Atributo_PutBynomeatributo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "nome",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "atributo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Atributo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Atributo atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Atributo"
                ],
                "summary": "Atualiza um atributo",
                "operationId": "Atributo_DeleteBynome",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "nome",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Atributo excluído com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/autenticacao/login": {
            "post": {
                "tags": [
                    "Autenticacao"
                ],
                "summary": "Realiza a autenticação de usuário no IDM (Identity Manager).",
                "operationId": "Autenticacao_LoginBydadosLogin",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "dadosLogin",
                        "in": "body",
                        "description": "Login e Senha.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Autenticacao"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autenticação realizada com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/UsuarioIdentificadoAPI"
                        }
                    },
                    "401": {
                        "description": "Usuário não autorizado."
                    },
                    "500": {
                        "description": "Erro no processamento da operação.",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/autenticacao/refresh": {
            "post": {
                "tags": [
                    "Autenticacao"
                ],
                "summary": "Gera um novo access token baseado em um access token expirado por data.",
                "operationId": "Autenticacao_Refresh",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Access token atualizado com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/UsuarioIdentificadoAPI"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação.",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/autenticacao/trocarLoja/{novaLoja}": {
            "post": {
                "tags": [
                    "Autenticacao"
                ],
                "summary": "Troca o usuário de loja e gera um novo access_token para acesso a nova loja.",
                "operationId": "Autenticacao_TrocarLojaBynovaLoja",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "novaLoja",
                        "in": "path",
                        "description": "Loja para qual o usuário deseja autenticar.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Novo token gerado com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/UsuarioIdentificadoAPI"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação.",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/autores": {
            "get": {
                "tags": [
                    "Autor"
                ],
                "summary": "Buscar todos os autores.",
                "operationId": "Autor_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Autor"
                ],
                "summary": "Inserir autor.",
                "operationId": "Autor_PostByrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Dados do autor.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/autores/{autorId}": {
            "get": {
                "tags": [
                    "Autor"
                ],
                "summary": "Buscar autor por id.",
                "operationId": "Autor_GetbyIdByautorId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "autorId",
                        "in": "path",
                        "description": "Identificador do autor.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Autor"
                ],
                "summary": "Atualizar autor.",
                "operationId": "Autor_PutByautorIdrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "autorId",
                        "in": "path",
                        "description": "Identificador do autor.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Dados atualizados.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Autor"
                ],
                "summary": "Deletar autor.",
                "operationId": "Autor_DeleteByautorId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "autorId",
                        "in": "path",
                        "description": "Identificador do autor",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/categorias": {
            "get": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Retorna todos as categorias",
                "operationId": "Categoria_GetByhierarquiaapenasResellerapenasUltimoNivelsomenteFilhos",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "hierarquia",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "apenasReseller",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "apenasUltimoNivel",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "somenteFilhos",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de categorias",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Categoria"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Insere uma nova categoria.",
                "operationId": "Categoria_PostBycategoria",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoria",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoriaEnvio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id da categoria gerada",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/categorias/{id}": {
            "get": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Retorna uma categoria específica",
                "operationId": "Categoria_GetByidhierarquiasomenteFilhos",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "hierarquia",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "somenteFilhos",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria encontrada",
                        "schema": {
                            "$ref": "#/definitions/Categoria"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Atualiza uma categoria.",
                "operationId": "Categoria_PutByidcategoria",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "categoria",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoriaEnvio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria atualizada com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Exclui uma categoria.",
                "operationId": "Categoria_DeleteByid",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria excluída com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/categorias/{categoriaId}/produtos": {
            "get": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Retorna lista de produtos vinculados à categoria de forma ordenada",
                "operationId": "Categoria_GetProdutosCategoriaBycategoriaIdpaginaquantidadeRegistrosdirecaoOrdenacao",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "description": "Id da categoria na qual os produtos devem ser consultados",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "direcaoOrdenacao",
                        "in": "query",
                        "description": "Define se a ordenação deverá ser feita de forma Ascendente ou Descendente. Caso não seja informado o comportamento padrão é Ascendente",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto(s) vinculado(s) a categoria com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Atualiza a ordem de exibição de um ou mais produtos de uma categoria",
                "operationId": "Categoria_OrdenarProdutosCategoriaBycategoriaIdprodutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "description": "Id da categoria a qual os produtos deverão ser ordenados.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "produtos",
                        "in": "body",
                        "description": "Lista de identificadores dos produtos e sua respectiva ordenação na categoria.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoriaProduto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ordem do(s) produto(s) atualizado(s) na categoria com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Vincula um ou mais produtos em uma categoria",
                "operationId": "Categoria_InserirProdutosCategoriaBycategoriaIdprodutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "description": "Id da categoria a qual os produtos deverão ser vinculados.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "produtos",
                        "in": "body",
                        "description": "Lista de identificadores dos produtos e sua respectiva ordenação na categoria.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoriaProduto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto(s) vinculado(s) a categoria com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Exclui o vínculo de um ou mais produtos de uma categoria",
                "operationId": "Categoria_DeletarProdutosCategoriaBycategoriaIdresetprodutosId",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "description": "Id da categoria a qual os produtos deverão ser desvinculados.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "reset",
                        "in": "query",
                        "description": "Se 'true', deverá desvincular TODOS os produtos vinculados a categoria. Se 'false' deverá desvincular APENAS os produtos que constam na listagem.",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "produtosId",
                        "in": "body",
                        "description": "Lista de identificadores dos produtos que deverão ser desvinculados da categoria. Campo opcional caso reset seja true",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vinculo da categoria com o(s) produto(s) excluído(s) com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/categorias/erp/{id}": {
            "get": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Retorna uma categoria específica utilizando o id do erp como identificador",
                "operationId": "Categoria_SelecionaCategoriaErpByidhierarquiasomenteFilhos",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "hierarquia",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "somenteFilhos",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria encontrada",
                        "schema": {
                            "$ref": "#/definitions/Categoria"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Atualiza uma categoria utilizando o id do erp como identificador.",
                "operationId": "Categoria_AtualizaCategoriaErpByidcategoria",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "categoria",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoriaEnvio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria atualizada com sucesso.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categoria"
                ],
                "summary": "Exclui uma categoria utilizando o id do erp como identificador.",
                "operationId": "Categoria_DeletaCategoriaErpByid",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria excluída com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/centrosdistribuicao": {
            "get": {
                "tags": [
                    "CentroDistribuicao"
                ],
                "summary": "Retorna todos os centros de distribuição",
                "operationId": "CentroDistribuicao_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de centros de distribuição",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CentroDistribuicao"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/centrosdistribuicao/{centroDistribuicaoId}/prioridade": {
            "put": {
                "tags": [
                    "CentroDistribuicao"
                ],
                "summary": "Executa uma atualização da prioridade do centro de distribuição",
                "operationId": "CentroDistribuicao_AtualizarPrioridadeBycentroDistribuicaoIdcentroDistribuicaoPrioridade",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "centroDistribuicaoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "centroDistribuicaoPrioridade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CentroDistribuicaoPrioridade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Atualiza a prioridade de um centro de distribuição",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CentroDistribuicao"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/contascorrentes/{email}": {
            "get": {
                "tags": [
                    "ContaCorrente"
                ],
                "summary": "Retorna o saldo de um usuário.",
                "operationId": "ContaCorrente_GetByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de emails e saldos de conta corrente",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ContaCorrente"
                ],
                "summary": "Realiza um novo lançamento na conta corrente do cliente.",
                "operationId": "ContaCorrente_PostByemailcontaCorrente",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contaCorrente",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContaCorrente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id da conta corrente gerada",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/contascorrentes/{email}/extrato": {
            "get": {
                "tags": [
                    "ContaCorrente"
                ],
                "summary": "Busca todas as movimentações de conta corrente de um usuário.",
                "operationId": "ContaCorrente_ExtratoByemaildataInicialdataFinal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extrato retornado com sucesso",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContaCorrenteCompleta"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/conteudos": {
            "get": {
                "tags": [
                    "Conteudo"
                ],
                "summary": "Busca todos os  conteúdos",
                "operationId": "Conteudo_GetConteudoBypaginaquantidadePorPagina",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadePorPagina",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto encontrado",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Conteudo"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Conteudo"
                ],
                "summary": "Insere um novo conteúdo na loja.",
                "operationId": "Conteudo_ConteudoPostByconteudoPost",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "conteudoPost",
                        "in": "body",
                        "description": "JSON representando todos os dados de um conteúdo.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do conteúdo gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/conteudos/{conteudoId}": {
            "get": {
                "tags": [
                    "Conteudo"
                ],
                "summary": "Busca o  conteúdo pelo seu id",
                "operationId": "Conteudo_GetConteudoByIdByconteudoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "conteudoId",
                        "in": "path",
                        "description": "Identificador do conteúdo.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto encontrado",
                        "schema": {
                            "$ref": "#/definitions/Conteudo"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Conteudo"
                ],
                "summary": "Atualiza um  conteúdo.",
                "operationId": "Conteudo_ConteudoPutByconteudoIdconteudoPut",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "conteudoId",
                        "in": "path",
                        "description": "Identificador do conteúdo.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "conteudoPut",
                        "in": "body",
                        "description": "JSON representando todos os dados de um conteúdo.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conteúdo atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/eventos": {
            "get": {
                "tags": [
                    "Evento"
                ],
                "summary": "Retorna lista de eventos",
                "operationId": "Evento_GetEventosBydataInicialdataFinaldisponiveltitulousuarioEmailtipoEventoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data de inicio do evento.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data do termino do evento.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "disponivel",
                        "in": "query",
                        "description": "Status do evento.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "titulo",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "usuarioEmail",
                        "in": "query",
                        "description": "Email do Usuário",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tipoEventoId",
                        "in": "query",
                        "description": "Identificador do Tipo de Evento",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Evento"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Evento"
                ],
                "summary": "Cria um Novo Evento",
                "operationId": "Evento_PostEventoByevento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "evento",
                        "in": "body",
                        "description": "JSON representando todos os dados de um evento. Para saber mais acesse a <a href=\"#\">documentação</a>",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.EventoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/eventos/{eventoId}": {
            "get": {
                "tags": [
                    "Evento"
                ],
                "summary": "Retorna um evento especifico",
                "operationId": "Evento_GetEventosByIdByeventoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "eventoId",
                        "in": "path",
                        "description": "Identifiador do evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Evento"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Evento"
                ],
                "summary": "Atualiza um evento",
                "operationId": "Evento_PutEventoByeventoIdevento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "eventoId",
                        "in": "path",
                        "description": "Identificador do evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "evento",
                        "in": "body",
                        "description": "Dados atualizados do evento.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPut.EventoPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/eventos/{eventoId}/produtos": {
            "get": {
                "tags": [
                    "Evento"
                ],
                "summary": "Busca produtos vinculados a um evento.",
                "operationId": "Evento_GetProdutosByEventoIdByeventoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "eventoId",
                        "in": "path",
                        "description": "Identificador do evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventoProdutoSelecionadoGet"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Evento"
                ],
                "summary": "Atauliza lista de produtos vinculados a um evento removendo os itens vinculados anteriormente e mantendo apenas os enviados pelo request",
                "operationId": "Evento_PutVincularProdutosByEventoByeventoIdprodutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "eventoId",
                        "in": "path",
                        "description": "Identificador do evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtos",
                        "in": "body",
                        "description": "Identificadores dos produtos variantes a serem vinculados ao evento desejado.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Evento"
                ],
                "summary": "Vincula um ou mais produtos a um evento sem remover os produtos vinculados anteriormente.",
                "operationId": "Evento_PostVincularProdutosByEventoByeventoIdprodutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "eventoId",
                        "in": "path",
                        "description": "Identificador do evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtos",
                        "in": "body",
                        "description": "Identificadores dos produtos variantes a serem vinculados ao evento desejado.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/eventos/{eventoId}/produto/{produtoVarianteId}": {
            "delete": {
                "tags": [
                    "Evento"
                ],
                "summary": "Deleta o vinculo de um produto a um evento.",
                "operationId": "Evento_DeleteProdutoDeVinculoByEventoByeventoIdprodutoVarianteId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "eventoId",
                        "in": "path",
                        "description": "Identificador do tipo de evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoVarianteId",
                        "in": "path",
                        "description": "Identificador do variante do produto.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/eventos/{eventoId}/produtos/recebido": {
            "put": {
                "tags": [
                    "Evento"
                ],
                "summary": "Atualiza o campo Recebido de um produto vinculado a um evento",
                "operationId": "Evento_PutVincularProdutosRecebidoByEventoByeventoIdprodutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "eventoId",
                        "in": "path",
                        "description": "Identificador do evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtos",
                        "in": "body",
                        "description": "Identificadores dos produtos variantes a serem vinculados ao evento desejado.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fabricantes": {
            "get": {
                "tags": [
                    "Fabricante"
                ],
                "summary": "Retorna todos os fabricantes",
                "operationId": "Fabricante_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de fabricantes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Fabricante"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Fabricante"
                ],
                "summary": "Insere um novo fabricante.",
                "operationId": "Fabricante_PostByfabricante",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "fabricante",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FabricantePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do fabricante gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fabricantes/{fabricanteId}": {
            "get": {
                "tags": [
                    "Fabricante"
                ],
                "summary": "Retorna um fabricante específico pelo id.",
                "operationId": "Fabricante_GetByfabricanteId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "fabricanteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fabricante encontrado",
                        "schema": {
                            "$ref": "#/definitions/Fabricante"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Fabricante"
                ],
                "summary": "Atualiza um fabricante",
                "operationId": "Fabricante_PutByfabricanteIdfabricante",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "fabricanteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "fabricante",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FabricantePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fabricante atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Fabricante"
                ],
                "summary": "Exclui um fabricante",
                "operationId": "Fabricante_DeleteByfabricanteId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "fabricanteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fabricante excluído com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/formasPagamento": {
            "get": {
                "tags": [
                    "FormaPagamento"
                ],
                "summary": "Retorna todas as formas de pagamento da loja",
                "operationId": "FormaPagamento_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de formas de pagamento",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FormaPagamento"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fretes": {
            "get": {
                "tags": [
                    "Frete"
                ],
                "summary": "Retorna uma lista de fretes",
                "operationId": "Frete_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de fretes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FreteCompleto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Frete"
                ],
                "summary": "Insere um novo contrato de frete.",
                "operationId": "Frete_PostByfrete",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "frete",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Frete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do frete gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fretes/{freteId}": {
            "get": {
                "tags": [
                    "Frete"
                ],
                "summary": "Retorna um contrato de frete",
                "operationId": "Frete_GetByfreteId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "freteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Frete encontrado",
                        "schema": {
                            "$ref": "#/definitions/FreteCompleto"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Frete"
                ],
                "summary": "Atualiza um contrato de frete.",
                "operationId": "Frete_PutByfreteIdfrete",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "freteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "frete",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Frete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Frete atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Frete"
                ],
                "summary": "Atualiza um contrato de frete.",
                "operationId": "Frete_DeleteByfreteId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "freteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Frete excluído com sucesso",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/fretes/{freteId}/Ativo": {
            "put": {
                "tags": [
                    "Frete"
                ],
                "summary": "Ativa ou Desativa um frete",
                "operationId": "Frete_AtivoByfreteIdfreteAtivo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "freteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "freteAtivo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FreteAtivo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Frete atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fretes/{freteId}/detalhes": {
            "get": {
                "tags": [
                    "Frete"
                ],
                "summary": "Retorna uma lista de detalhes de um contrato de frete",
                "operationId": "Frete_GetDetalhesByfreteId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "freteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de detalhes de frente",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FreteDetalhe"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Frete"
                ],
                "summary": "Insere um novo detalhe de frete vinculado a um contrato de frete",
                "operationId": "Frete_PostDetalhesByfreteIdfreteDetalhe",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "freteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "freteDetalhe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FreteDetalhePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Detalhes de frete inserido com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Frete"
                ],
                "summary": "Exclui os detalhes de um contrato de frete",
                "operationId": "Frete_DeleteDetalhesByfreteId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "freteId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detalhes excluídos com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fretes/cotacoes": {
            "post": {
                "tags": [
                    "Frete"
                ],
                "summary": "Realiza uma cotação de frete",
                "description": "Método que realiza uma cotação de frete via Fstore",
                "operationId": "Frete_PostCotacoesByceptipoIdentificadorcotacaoretiradaLoja",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cep",
                        "in": "query",
                        "description": "Cep de entrega",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "cotacao",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    },
                    {
                        "name": "retiradaLoja",
                        "in": "query",
                        "description": "Define se deve retornar as opções de retirada em loja (\"False\" por padrão).",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto com as cotações de frete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JaimitoResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fretes/pedidos/{pedidoId}/cotacoes": {
            "get": {
                "tags": [
                    "Frete"
                ],
                "summary": "Realiza uma cotação de frete para o carrinho do pedido",
                "operationId": "Frete_GetCotacoesPedidoBypedidoIdforcarCotacaoTodosCDs",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "forcarCotacaoTodosCDs",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto com as cotações de frete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JaimitoApiResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fretes/criteriosscore/ativos": {
            "get": {
                "tags": [
                    "Frete"
                ],
                "summary": "Busca os critérios score da loja",
                "operationId": "Frete_GetCriteriosScore",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Busca de critérios realizada com sucesso",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JaimitoCriterioScore"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/fretes/criteriosscore/valor": {
            "post": {
                "tags": [
                    "Frete"
                ],
                "summary": "Cria um critério de score para um centro de distribução",
                "operationId": "Frete_PostCriteriosScoreBycdScore",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cdScore",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JaimitoCentroDistribuicaoScore"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Critério criado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/gestorscripts/scripts": {
            "get": {
                "tags": [
                    "GestorScripts"
                ],
                "summary": "Busca todas os scripts inseridos.",
                "operationId": "GestorScripts_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de scripts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GestorScriptsGet"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GestorScripts"
                ],
                "summary": "Insere um novo script.",
                "operationId": "GestorScripts_PostByrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identificador do script",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/gestorscripts/scripts/{scriptId}": {
            "put": {
                "tags": [
                    "GestorScripts"
                ],
                "summary": "Atualiza um script existente",
                "operationId": "GestorScripts_PutScriptByscriptIdrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "scriptId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operação foi bem sucedida",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GestorScripts"
                ],
                "summary": "Exclui um Script",
                "operationId": "GestorScripts_GetConteudoVersaoByscriptId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "scriptId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exclui um script",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/gestorscripts/scripts/{scriptId}/versao/{versaoId}/conteudo": {
            "get": {
                "tags": [
                    "GestorScripts"
                ],
                "summary": "Busca o conteúdo de uma versão.",
                "operationId": "GestorScripts_GetConteudoVersaoByscriptIdversaoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "scriptId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "versaoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista o conteudo de uma versão",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConteudoVersaoScript"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/gestorscripts/scripts/{scriptId}/versoes": {
            "get": {
                "tags": [
                    "GestorScripts"
                ],
                "summary": "Busca todas as versões de um script.",
                "operationId": "GestorScripts_GetVersoesScriptByscriptId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "scriptId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de versões",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VersaoGestorScript"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GestorScripts"
                ],
                "summary": "Insere uma versão para um script existente.",
                "operationId": "GestorScripts_PostVersaoByscriptIdrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "scriptId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identificador da versao",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/grupoListaCompras": {
            "get": {
                "tags": [
                    "GrupoListaCompras"
                ],
                "summary": "Retorna todos os grupos de listas de compras",
                "operationId": "GrupoListaCompras_GetBypaginaquantidadeRegistrosnomedescricaoaliasHotSite",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nome",
                        "in": "query",
                        "description": "Nome do grupo de lista de compras",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "descricao",
                        "in": "query",
                        "description": "Descrição do grupo de lista de compras",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "aliasHotSite",
                        "in": "query",
                        "description": "Alias do hotsite do grupo de lista de compras",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de grupos de listas de compras",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GrupoListaCompra"
                            }
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "GrupoListaCompras"
                ],
                "summary": "Atualiza dados de um ou mais grupos de lista de compras",
                "description": "Atualiza dados de um ou mais grupos de lista de compras",
                "operationId": "GrupoListaCompras_PutBygruposListaCompras",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "gruposListaCompras",
                        "in": "body",
                        "description": "Objeto que representa o(s) grupo(s) de lista(s) de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GrupoListaComprasPut"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Grupo(s) de lista(s) de compras atualizado(s) com sucesso",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GrupoListaCompras"
                ],
                "summary": "Insere dados de um ou mais grupos de lista de compras",
                "description": "Insere dados de um ou mais grupos de lista de compras",
                "operationId": "GrupoListaCompras_PostBygruposListaCompras",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "gruposListaCompras",
                        "in": "body",
                        "description": "Objeto que representa o(s) grupo(s) de lista(s) de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GrupoListaComprasPost"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Grupo(s) de lista(s) de compras inserido(s) com sucesso",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GrupoListaCompras"
                ],
                "summary": "Deleta dados de um ou mais grupos de lista de compras",
                "description": "Deleta dados de um ou mais grupos de lista de compras",
                "operationId": "GrupoListaCompras_DeleteBygrupoListaCompraIds",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "grupoListaCompraIds",
                        "in": "body",
                        "description": "Objeto que representa o(s) grupo(s) de lista(s) de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Grupo(s) de lista(s) de compras deletado(s) com sucesso",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/grupoListaCompras/{grupoListaCompraId}": {
            "get": {
                "tags": [
                    "GrupoListaCompras"
                ],
                "summary": "Retorna dados de um grupo de lista de compras",
                "operationId": "GrupoListaCompras_GetPorIdBygrupoListaCompraId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "grupoListaCompraId",
                        "in": "path",
                        "description": "Identificador do grupo de lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grupo de lista de compras",
                        "schema": {
                            "$ref": "#/definitions/GrupoListaCompra"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/grupospersonalizacao": {
            "get": {
                "tags": [
                    "GrupoPersonalizacao"
                ],
                "summary": "Retorna uma lista de Grupos de Personalização",
                "operationId": "GrupoPersonalizacao_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Grupos de Personalização",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GrupoPersonalizacaoGet"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/grupospersonalizacao/{grupoPersonalizacaoId}/produtos": {
            "get": {
                "tags": [
                    "GrupoPersonalizacao"
                ],
                "summary": "Retorna uma lista de produtos vinculados a um Grupo de Personalização",
                "operationId": "GrupoPersonalizacao_GetProdutosBygrupoPersonalizacaoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "grupoPersonalizacaoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos de um Grupo de Personalização",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GrupoPersonalizacaoProdutosGet"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GrupoPersonalizacao"
                ],
                "summary": "Vincula produtos a um Grupo de Personalização",
                "operationId": "GrupoPersonalizacao_PostProdutosBygrupoPersonalizacaoIdprodutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "grupoPersonalizacaoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "produtos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GrupoPersonalizacaoProdutosPost"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Vincula de produto com um Grupo de Personalização",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GrupoPersonalizacao"
                ],
                "summary": "Remove o vinculo de produtos de um Grupo de Personalização",
                "operationId": "GrupoPersonalizacao_DeleteProdutosBygrupoPersonalizacaoIdprodutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "grupoPersonalizacaoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "produtos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GrupoPersonalizacaoProdutosPost"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Desvincula produtos de um Grupo de Personalização",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras": {
            "get": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Retorna as listas de compras",
                "operationId": "ListaCompras_GetBydataCadastropaginaquantidadeRegistrosativo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "dataCadastro",
                        "in": "query",
                        "description": "Data inicial das listas que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "ativo",
                        "in": "query",
                        "description": "Deverá retornar apenas listas ativa, inativas ou todas (caso não seja informado)",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de lista de compras",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ListaComprasSelecionar"
                            }
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Insere dados básicos de uma nova lista de compras",
                "description": "Insere dados básicos de uma nova lista de compras",
                "operationId": "ListaCompras_PostBylistaComprasDadosBasicos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasDadosBasicos",
                        "in": "body",
                        "description": "Objeto que representa a lista de compras",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListaComprasDadosBasicos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Lista de compras inserida com sucesso.",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras/{listaComprasId}": {
            "get": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Retorna as listas de compras",
                "operationId": "ListaCompras_GetPorIdBylistaComprasId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Id da lista de compras desejada",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de compras",
                        "schema": {
                            "$ref": "#/definitions/ListaComprasSelecionar"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Atualiza dados básicos de uma lista de compras",
                "description": "Atualiza dados básicos de uma lista de compras",
                "operationId": "ListaCompras_PutBylistaComprasIdlistaComprasDadosBasicos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaComprasDadosBasicos",
                        "in": "body",
                        "description": "Objeto que representa a lista de compras",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListaComprasDadosBasicos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de compras atualizada com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Lista de compras não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Excluir uma lista de compras",
                "operationId": "ListaCompras_DeleteBylistaComprasId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Id da lista de compras desejada",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de compras excluída com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras/{listaComprasId}/produtos": {
            "post": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Vincula produto(s) a uma lista de compras",
                "description": "<strong>Limite de 150 produto(s) por requisição</strong>",
                "operationId": "ListaCompras_PostListaComprasProdutoBylistaComprasIdlistaComprasProdutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaComprasProdutos",
                        "in": "body",
                        "description": "Objeto que representa o(s) produtos(s) que devem ser vinculado(s) a uma lista de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ListaComprasProdutosPost"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto(s) vinculado(s) com sucesso a lista de compras",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Exclui vínculo do(s) produto(s) de uma lista de compras",
                "description": "<strong>Limite de 150 produto(s) por requisição</strong>",
                "operationId": "ListaCompras_DeleteListaComprasProdutoBylistaComprasIdlistaCompraProdutoIds",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaCompraProdutoIds",
                        "in": "body",
                        "description": "Objeto que representa o(s) produtos(s) que devem ser excluído(s) de uma lista de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto(s) excluído(s) da lista de compras com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras/{listaComprasId}/grupoListaCompras": {
            "post": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Vincula grupo(s) de lista a uma lista de compras",
                "description": "<strong>Limite de 150 grupo(s) de lista(s) por requisição</strong>",
                "operationId": "ListaCompras_PostGrupoListaComprasBylistaComprasIdgrupoListaCompraIds",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "grupoListaCompraIds",
                        "in": "body",
                        "description": "Objeto que representa o(s) grupos(s) de lista(s) que devem ser vinculado(s) a uma lista de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grupo(s) de lista(s) vinculado(s) a lista de compras com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Exclui vínculo de grupo(s) de lista de uma lista de compras",
                "description": "<strong>Limite de 150 grupo(s) de lista(s) por requisição</strong>",
                "operationId": "ListaCompras_DeleteGrupoListaComprasBylistaComprasIdgrupoListaCompraIds",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "grupoListaCompraIds",
                        "in": "body",
                        "description": "Objeto que representa o(s) grupos(s) de lista(s) que devem ser excluido(s) de uma lista de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grupo(s) de lista(s) excluído(s) da lista de compras com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras/{listaComprasId}/seo/{listaCompraSEOId}": {
            "delete": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Exclui vínculo de SEO de uma lista de compras",
                "operationId": "ListaCompras_DeleteListaComprasSEOMetatagBylistaComprasIdlistaCompraSEOId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaCompraSEOId",
                        "in": "path",
                        "description": "Identificador do SEO que deve ser excluido de uma lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SEO excluído da lista de compras com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras/{listaComprasId}/seo": {
            "post": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Insere dados de SEO em uma lista de compras",
                "description": "Insere dados de SEO em uma lista de compras",
                "operationId": "ListaCompras_PostListaComprasSEOBylistaComprasIdlistaComprasSeo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaComprasSeo",
                        "in": "body",
                        "description": "Objeto que SEOs de uma lista de compras",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListaComprasSEOPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "SEO vinculado a lista de compras com sucesso ",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras/{listaComprasId}/seo/title": {
            "put": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Atualiza o title do SEO de uma lista de compras",
                "description": "Atualiza o title do SEO de uma lista de compras",
                "operationId": "ListaCompras_PutListaComprasSEOTitleBylistaComprasIdlistaComprasSeoTitle",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaComprasSeoTitle",
                        "in": "body",
                        "description": "Objeto que representa o title do SEO da lista de compras",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListaComprasSeoTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Title do SEO atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Lista de compras não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras/{listaComprasId}/imagens": {
            "post": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Vincula imagens a uma lista de compras",
                "description": "<strong>Limite de 20 imagens por requisição.</strong>",
                "operationId": "ListaCompras_PostListaComprasFotoBylistaComprasIdlistaComprasFotos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaComprasFotos",
                        "in": "body",
                        "description": "Objeto que representa as imagens que devem ser vinculadas a uma lista de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ListaComprasFotoPost"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imagem vinculada a lista de compras com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Lista de compras não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Exclui imagens de uma lista de compras",
                "description": "<strong>Limite de 20 imagens por requisição.</strong>",
                "operationId": "ListaCompras_DeleteListaComprasFotoBylistaComprasIdlistaCompraFotoIds",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaCompraFotoIds",
                        "in": "body",
                        "description": "Objeto que representa as imagens que devem ser excluídas de uma lista de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imagem vinculada a lista de compras com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Lista de compras não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/listacompras/{listaComprasId}/imagens/ordem": {
            "put": {
                "tags": [
                    "ListaCompras"
                ],
                "summary": "Atualiza a ordem das imagens de uma lista de compras",
                "operationId": "ListaCompras_AtualizaOrdemImagensBylistaComprasIdlistaCompraFotos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaComprasId",
                        "in": "path",
                        "description": "Identificador da lista de compras",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaCompraFotos",
                        "in": "body",
                        "description": "Objeto que representa as imagens que devem ser ordenadas de uma lista de compras",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ListaComprasImagemOrdem"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rdem das Imagens atualizada com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Lista de compras não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/loja": {
            "get": {
                "tags": [
                    "Loja"
                ],
                "summary": "Retorna dados da loja",
                "operationId": "Loja_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Dados da loja",
                        "schema": {
                            "$ref": "#/definitions/Loja"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/lojasFisicas": {
            "get": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Retorna todas as Lojas Físicas",
                "operationId": "LojaFisica_GetBypaginaquantidadeRegistros",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pagina",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Lojas Físicas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LojaFisica"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Insere uma Loja Física",
                "operationId": "LojaFisica_PostBylojaFisica",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lojaFisica",
                        "in": "body",
                        "description": "Loja Física",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resultado da Inserção da Loja Física",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/lojasFisicas/{lojaFisicaId}": {
            "get": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Retorna Loja Física pelo Id",
                "operationId": "LojaFisica_GetBylojaFisicaId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lojaFisicaId",
                        "in": "path",
                        "description": "Id da Loja Física",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loja Física",
                        "schema": {
                            "$ref": "#/definitions/LojaFisica"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Atualiza uma Loja Física",
                "operationId": "LojaFisica_PutBylojaFisicaIdlojaFisica",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lojaFisicaId",
                        "in": "path",
                        "description": "Id da Loja Física",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "lojaFisica",
                        "in": "body",
                        "description": "Loja Física",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resultado da Atualização da Loja Física",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Remove uma Loja Física",
                "operationId": "LojaFisica_DeleteBylojaFisicaId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lojaFisicaId",
                        "in": "path",
                        "description": "Id da Loja Física",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resultado da Remoção da Loja Física",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/lojasFisicas/{lojaFisicaId}/rangeCep": {
            "get": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Retorna todos ranges de cep que essa loja atende",
                "operationId": "LojaFisica_GetRangeCepBylojaFisicaId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lojaFisicaId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Ranges de Ceps de uma Loja Física",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Insere um range de cep em uma Loja Física",
                "operationId": "LojaFisica_PostRangeCepBylojaFisicaIdrangeCep",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lojaFisicaId",
                        "in": "path",
                        "description": "Id da Loja Física",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "rangeCep",
                        "in": "body",
                        "description": "Range de Cep",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resultado da Inserção de Range de Cep",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Remove uma lista de range de cep de uma Loja Física",
                "operationId": "LojaFisica_DeleteRangeCepBylojaFisicaIdlistaRangeCep",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lojaFisicaId",
                        "in": "path",
                        "description": "Id da Loja Física",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "listaRangeCep",
                        "in": "body",
                        "description": "Lista de range de cep a serem excluídos da loja física",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resultado da Remoção da Loja Física",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/lojasFisicas/estados": {
            "get": {
                "tags": [
                    "LojaFisica"
                ],
                "summary": "Busca os estados.",
                "operationId": "LojaFisica_GetEstados",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista dos estados",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Estado"
                            }
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/midias": {
            "get": {
                "tags": [
                    "Midia"
                ],
                "summary": "Retorna o xml com os dados de todas as midias entre duas datas",
                "operationId": "Midia_MidiaBydataInicialdataFinal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data inicial (aaaa-mm-dd)",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data final (aaaa-mm-dd)",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Xml com os dados das midias entre duas datas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MidiaInvestimentoApiModel"
                            }
                        }
                    }
                }
            }
        },
        "/midias/{identificador}": {
            "get": {
                "tags": [
                    "Midia"
                ],
                "summary": "Retorna o xml com os dados de uma mídia específicas entre duas datas",
                "operationId": "Midia_MidiaPorIdByidentificadordataInicialdataFinal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Identificar da mídia (ex.: 7-CPA)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data inicial (aaaa-mm-dd)",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data final (aaaa-mm-dd)",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Xml com os dados de uma mídia específicas entre duas datas",
                        "schema": {
                            "$ref": "#/definitions/MidiaApiModel"
                        }
                    }
                }
            }
        },
        "/parceiros": {
            "get": {
                "tags": [
                    "Parceiro"
                ],
                "summary": "Retorna todos os parceiros",
                "operationId": "Parceiro_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de parceiros",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Parceiro"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Parceiro"
                ],
                "summary": "Insere um novo parceiro.",
                "operationId": "Parceiro_PostByparceiro",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "parceiro",
                        "in": "body",
                        "description": "JSON representando todos os dados de um parceiro",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParceiroPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do parceiro gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/parceiros/comPedidos": {
            "get": {
                "tags": [
                    "Parceiro"
                ],
                "summary": "Retorna todos os parceiros com pedidos",
                "operationId": "Parceiro_GetBydataInicialdataFinal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data inicial dos pedidos (aaaa-mm-dd hh:mm:ss)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data final dos pedidos (aaaa-mm-dd hh:mm:ss)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de parceiros com pedidos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Parceiro"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/parceiros/{parceiroId}": {
            "get": {
                "tags": [
                    "Parceiro"
                ],
                "summary": "Retorna o parceiro pelo id",
                "operationId": "Parceiro_GetByparceiroId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "parceiroId",
                        "in": "path",
                        "description": "Id do parceiro",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parceiro encontrado",
                        "schema": {
                            "$ref": "#/definitions/Parceiro"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Parceiro"
                ],
                "summary": "Atualiza um parceiro",
                "operationId": "Parceiro_PutByparceiroIdparceiro",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "parceiroId",
                        "in": "path",
                        "description": "Id do parceiro",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "parceiro",
                        "in": "body",
                        "description": "JSON representando todos os dados de um parceiro",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParceiroPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parceiro atualizado com sucesso",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Resultado"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Parceiro"
                ],
                "summary": "Exclui um parceiro",
                "operationId": "Parceiro_DeleteByparceiroId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "parceiroId",
                        "in": "path",
                        "description": "Id do parceiro",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parceiro excluído com sucesso",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/parceiros/{parceiroId}/usuarios": {
            "get": {
                "tags": [
                    "Parceiro"
                ],
                "summary": "Retorna os usuários pelo id do parceiro",
                "operationId": "Parceiro_GetUsuariosPorParceiroByparceiroId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "parceiroId",
                        "in": "path",
                        "description": "Id do parceiro",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuários encontrados",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResultadoUsuarioParceiro"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna uma lista de pedido na ordem decrescente dentro do limite de datas passadas.",
                "operationId": "Pedido_GetBydataInicialdataFinalenumTipoFiltroDatasituacoesPedidoformasPagamentopaginaquantidadeRegistroslistaPedidosIdsemailvalidoskuapenasAssinaturasdirecaoOrdenacaocamposAdicionais",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data inicial dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss). Obrigatório se o campo \"listaPedidosIds\" não for informado.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss). Obrigatório se o campo \"listaPedidosIds\" não for informado.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "enumTipoFiltroData",
                        "in": "query",
                        "description": "Tipo de filtro da data (Ordenação \"desc\" - padrão: DataPedido)",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DataPedido",
                            "DataAprovacao",
                            "DataModificacaoStatus",
                            "DataAlteracao",
                            "DataCriacao",
                            "DataStatus"
                        ]
                    },
                    {
                        "name": "situacoesPedido",
                        "in": "query",
                        "description": "Lista de situações que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará todas as situações",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "formasPagamento",
                        "in": "query",
                        "description": "Lista de formas de pagamento que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará todas as formas de pagamento",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "listaPedidosIds",
                        "in": "query",
                        "description": "Lista com IDs dos pedidos desejados no retorno. Se este campo for informado, os filtros de data serão ignorados",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Deverá retornar apenas pedidos realizados pelo usuário com o email passado",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "valido",
                        "in": "query",
                        "description": "Deverá retornar apenas pedidos válidos, inválidos ou todos (caso não seja informado)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Deverá retornar apenas pedidos que o produto de determinado sku foi comprado",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "apenasAssinaturas",
                        "in": "query",
                        "description": "Quando passado o valor true, deverá retornar apenas pedidos de assinatura. QUando falso, deverá retornar todos os pedidos.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "direcaoOrdenacao",
                        "in": "query",
                        "description": "Define se a ordenação deverá ser feita de forma Ascendente ou Descendente. Caso não seja informado o comportamento padrão é Descendente",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    },
                    {
                        "name": "camposAdicionais",
                        "in": "query",
                        "description": "Campo opcional que define quais dados extras devem ser retornados em conjunto com os dados do pedido.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ProdutoAtributos",
                                "ProdutoEan",
                                "ProdutoImagens",
                                "ProdutoCategorias"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de pedidos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.Pedido"
                            }
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Insere um novo pedido na f-store.",
                "description": "Caso a loja utilize as formas de pagamento do gateway o campo \"formaPagamentoId\" do objeto \"pagamento\" deverá conter o valor <strong>\"200\"</strong>.",
                "operationId": "Pedido_PostBypedidoPost",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoPost",
                        "in": "body",
                        "description": "JSON representando todos os dados de um pedido. Para saber mais acesse a <a href=\"#\">documentação</a>",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.PedidoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do pedido gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna um pedido especifico",
                "operationId": "Pedido_GetBypedidoIdcamposAdicionais",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido que se deseja buscar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "camposAdicionais",
                        "in": "query",
                        "description": "Campo opcional que define quais dados extras devem ser retornados em conjunto com os dados do pedido.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ProdutoAtributos",
                                "ProdutoEan",
                                "ProdutoImagens",
                                "ProdutoCategorias"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pedido encontrado",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.Pedido"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/situacaoPedido/{situacoesPedido}": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna uma lista de pedido baseado nas situações de pedidos.",
                "operationId": "Pedido_GetPorSituacoesPedidoBysituacoesPedidodataInicialdataFinalenumTipoFiltroDataformasPagamentopaginaquantidadeRegistrosapenasAssinaturas",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "situacoesPedido",
                        "in": "path",
                        "description": "Lista de situações que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará todas as situações",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data inicial dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "enumTipoFiltroData",
                        "in": "query",
                        "description": "Tipo de filtro da data",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DataPedido",
                            "DataAprovacao",
                            "DataModificacaoStatus",
                            "DataAlteracao",
                            "DataCriacao",
                            "DataStatus"
                        ]
                    },
                    {
                        "name": "formasPagamento",
                        "in": "query",
                        "description": "Lista de formas de pagamento que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará todas as formas de pagamento",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de resgistros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "apenasAssinaturas",
                        "in": "query",
                        "description": "Quando passado o valor true, deverá retornar apenas pedidos de assinatura. Quando falso, deverá retornar todos os pedidos.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de pedidos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.Pedido"
                            }
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/historicoSituacao": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Busca o histórico de situações de um pedido",
                "operationId": "Pedido_GetHistoricoSituacaoPedidoBypedidoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Identificador do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de pedidos",
                        "schema": {
                            "$ref": "#/definitions/HistoricoSituacaoPedido"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/formaPagamento/{formasPagamento}": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna uma lista de pedido baseado nas formas de pagamento",
                "operationId": "Pedido_GetPorFormasPagamentoByformasPagamentodataInicialdataFinalenumTipoFiltroDatasituacoesPedidopaginaquantidadeRegistros",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "formasPagamento",
                        "in": "path",
                        "description": "Lista de formas de pagamento que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará todas as formas de pagamento",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data inicial dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "enumTipoFiltroData",
                        "in": "query",
                        "description": "Tipo de filtro da data",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DataPedido",
                            "DataAprovacao",
                            "DataModificacaoStatus",
                            "DataAlteracao",
                            "DataCriacao",
                            "DataStatus"
                        ]
                    },
                    {
                        "name": "situacoesPedido",
                        "in": "query",
                        "description": "Lista de situações que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará todas as situações",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de resgistros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de pedidos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.Pedido"
                            }
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/rastreamento": {
            "post": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Insere um rastreamento e status a um pedido",
                "operationId": "Pedido_PostBypedidoStatusRastreamento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoStatusRastreamento",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoStatusRastreamento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rastreamento inserido com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/pedidos/{pedidoId}/status": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna o último status de um pedido",
                "operationId": "Pedido_GetSituacaoPedidoBypedidoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Último status do pedido",
                        "schema": {
                            "$ref": "#/definitions/PedidoStatus"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza a situação do status do pedido",
                "operationId": "Pedido_PutBypedidoIdsituacaoPedido",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "situacaoPedido",
                        "in": "body",
                        "description": "Id da situação do pedido",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoSituacaoPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status do pedido atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/rastreamento": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna os dados de rastreamento/nf de um pedido",
                "operationId": "Pedido_GetRastreamentoPedidoBypedidoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido que se deseja buscar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de pedidos",
                        "schema": {
                            "$ref": "#/definitions/PedidoRastreamento"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza a data de entrega do pedido",
                "operationId": "Pedido_PutDataEntregaPedidoBypedidoIdpedidoProdutoRastreamento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoProdutoRastreamento",
                        "in": "body",
                        "description": "Objeto com os dados do rastreamento",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPut.PedidoProdutoRastreamento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data de entrega do pedido atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Insere um rastreamento e status a um pedido",
                "operationId": "Pedido_PostRatreamentoPorPedidoBypedidoIdpedidoStatusRastreamento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoStatusRastreamento",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoStatusRastreamentoPedido"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rastreamento inserido com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/rastreamento/{pedidoRastreamentoId}": {
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza rastreamento completo (com os dados da N.F.)",
                "operationId": "Pedido_AtualizarPedidoRastreamentoBypedidoIdpedidoRastreamentoIdpedidoRastreamento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamentoId",
                        "in": "path",
                        "description": "Id do Pedido Ratreamento",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamento",
                        "in": "body",
                        "description": "Objeto PedidoRastreamento",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoRastreamentoPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rastreamento atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/rastreamento/{pedidoRastreamentoId}/parcial": {
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza rastreamento parcial (Rastreamento e UrlRastreamento)",
                "operationId": "Pedido_AtualizarPedidoRastreamentoParcialBypedidoIdpedidoRastreamentoIdpedidoRastreamento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamentoId",
                        "in": "path",
                        "description": "Id do Pedido Ratreamento",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamento",
                        "in": "body",
                        "description": "Objeto PedidoRastreamento",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoRastreamentoParcialPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rastreamento atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/produtos/{produtoVarianteId}/rastreamento": {
            "post": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Insere um rastreamento e status a um produto variante",
                "operationId": "Pedido_PostRatreamentoPorProdutoVarianteBypedidoIdprodutoVarianteIdpedidoStatusRastreamentoProdutoVariante",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoVarianteId",
                        "in": "path",
                        "description": "Id do produto variante",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoStatusRastreamentoProdutoVariante",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoStatusRastreamentoProdutoVariante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id do PedidoRastreamentoProduto inserido",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/produtos/{produtoVarianteId}/rastreamento/{pedidoRastreamentoProdutoId}": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna um rastreamento de produto",
                "operationId": "Pedido_SelecionarPedidoRastreamentoProdutoBypedidoIdprodutoVarianteIdpedidoRastreamentoProdutoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoVarianteId",
                        "in": "path",
                        "description": "Id do Produto Variante",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamentoProdutoId",
                        "in": "path",
                        "description": "Id do Pedido Rastreamento Produto",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rastreamento de produto encontrado",
                        "schema": {
                            "$ref": "#/definitions/PedidoRastreamentoProdutoGet"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza rastreamento de produto completo (com os dados da N.F.)",
                "operationId": "Pedido_AtualizarPedidoRastreamentoProdutoBypedidoIdprodutoVarianteIdpedidoRastreamentoProdutoIdpedidoRastreamentoProduto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoVarianteId",
                        "in": "path",
                        "description": "Id do Produto Variante",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamentoProdutoId",
                        "in": "path",
                        "description": "Id do Pedido Rastreamento Produto",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamentoProduto",
                        "in": "body",
                        "description": "Objeto PedidoRastreamentoProduto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoRastreamentoProdutoPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rastreamento do produto atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/produtos/{produtoVarianteId}/rastreamento/{pedidoRastreamentoProdutoId}/parcial": {
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza rastreamento parcial (Rastreamento e UrlRastreamento)",
                "operationId": "Pedido_AtualizarPedidoRastreamentoProdutoParcialBypedidoIdprodutoVarianteIdpedidoRastreamentoProdutoIdpedidoRastreamentoProduto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do Pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoVarianteId",
                        "in": "path",
                        "description": "Id do Produto Variante",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamentoProdutoId",
                        "in": "path",
                        "description": "Id do Pedido Rastreamento Produto",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoRastreamentoProduto",
                        "in": "body",
                        "description": "Objeto PedidoRastreamentoProduto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoRastreamentoProdutoParcialPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rastreamento do produto atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/rastreamento/produtos": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna os dados de rastreamento/nf dos produtos de um pedido",
                "operationId": "Pedido_GetRastreamentoProdutoBypedidoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido que se deseja buscar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de pedidos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PedidoRastreamentoProduto"
                            }
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/{produtoVarianteId}/status": {
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza a situação do status de um produto do pedido",
                "operationId": "Pedido_PutSituacaoProdutoVarianteBypedidoIdprodutoVarianteIdpedidoProdutoSituacao",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoVarianteId",
                        "in": "path",
                        "description": "Id do produto variante",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoProdutoSituacao",
                        "in": "body",
                        "description": "Dados da situação do produto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPut.PedidoProdutoSituacao"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status do produto do pedido atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/changeorder": {
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza o status de um produto para removê-lo do pedido e depois adiciona uma lista de produtos no pedido",
                "operationId": "Pedido_PutChangeOrderBypedidoIdchangeOrder",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "changeOrder",
                        "in": "body",
                        "description": "Dados dos produtos a serem removidos e dos produtos a serem adicionados no pedido",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPut.ChangeOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alteração de produto de pedido atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/pedidos/{pedidoId}/cartao": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna os dados de cartão de crédito de um pedido",
                "operationId": "Pedido_GetDadosCartaoBypedidoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido que se deseja buscar os dados",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados de cartão de crédito do pedido",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.PedidoCartaoCredito"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/transacoes/{transacaoId}": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna os detalhes da transação de um pedido",
                "operationId": "Pedido_GetTransacoesBytransacaoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transacaoId",
                        "in": "path",
                        "description": "Número da Transação que se deseja buscar os dados",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados de transação do pedido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/frete": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Retorna os detalhes do serviço de frete",
                "operationId": "Pedido_GetFreteServicoBypedidoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido que se deseja buscar os dados",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados do serviço de frete do pedido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/liberarReservas": {
            "post": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Liberar reservas de pedidos",
                "operationId": "Pedido_LiberarReservasBypedidosIds",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidosIds",
                        "in": "body",
                        "description": "Números dos pedidos que se deseja buscar",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resultado da liberação de reservas de pedidos",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/naoIntegrados": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Busca pedidos que ainda não foram setado o complete",
                "operationId": "Pedido_SelecionarPedidosNaoIntegrado",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de números de pedidos ainda não integrados",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PedidoNaoIntegrado"
                            }
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/complete": {
            "post": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Seta o pedido como integrado",
                "operationId": "Pedido_InserirPedidoIntegradoBypedidoNaoIntegrado",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoNaoIntegrado",
                        "in": "body",
                        "description": "Pedido que se deseja inserir o \"complete\"",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PedidoNaoIntegrado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Após a inserção no complete o pedido não retorná no endpoint \"pedidos/naoIntegrados\"",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/observacao": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Busca observações de um pedido",
                "operationId": "Pedido_GetPedidoObservacaoBypedidoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de observações de um pedido",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Inseri uma observação a um pedido",
                "operationId": "Pedido_InserirPedidoObservacaoBypedidoIdpedidoObservacao",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Número do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pedidoObservacao",
                        "in": "body",
                        "description": "Objeto com os dados da observação",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Após a inserção no complete o pedido não retorná no endpoint \"pedidos/naoIntegrados\"",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/changesellercompleto": {
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza o CD de todos os produtos de um pedido através de uma cotação",
                "operationId": "Pedido_PutChangeSellerCompletoBypedidoIdchangeSellerCompleto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "changeSellerCompleto",
                        "in": "body",
                        "description": "Objeto com os dados de cotação e responsável",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeSellerCompleto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da ação de Change Seller",
                        "schema": {
                            "$ref": "#/definitions/ChangeSellerDTO"
                        }
                    },
                    "400": {
                        "description": "Erro no processamento dos dados enviados",
                        "schema": {
                            "$ref": "#/definitions/ChangeSellerDTO"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/changeseller": {
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Atualiza o CD de todos os produtos de um pedido através de uma cotação",
                "operationId": "Pedido_PutChangeSellerBypedidoIdchangeSellerCompleto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "changeSellerCompleto",
                        "in": "body",
                        "description": "Objeto com os dados de cotação e responsável",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeSellerCompleto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da ação de Change Seller",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/pedidos/estorno/{pedidoId}": {
            "post": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Cria um estorno de pagamento no gateway",
                "operationId": "Pedido_CriarEstornoBypedidoIdestorno",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "Id do pedido",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "estorno",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Estorno"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/changeseller/relacao": {
            "get": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Devolve a lista de pedidos relacionados com um changeseller e o pedido original",
                "operationId": "Pedido_GetPedidosRelacionadosChangeSellerBypedidoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da ação de Change Seller Relação",
                        "schema": {
                            "$ref": "#/definitions/ChangeSellerDTO"
                        }
                    },
                    "400": {
                        "description": "Erro no processamento dos dados enviados",
                        "schema": {
                            "$ref": "#/definitions/ChangeSellerDTO"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/pedidos/{pedidoId}/changeordercompleto": {
            "put": {
                "tags": [
                    "Pedido"
                ],
                "summary": "Troca ou insere um novo produto dentro do pedido",
                "operationId": "Pedido_PutChangeOrderCompletoBypedidoIdchangeOrder",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pedidoId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "changeOrder",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da ação de Change Order",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/portfolios": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Retorna todos os portfolios",
                "operationId": "Portfolio_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de portfolios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.Portfolio"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Insere um novo portfolio.",
                "operationId": "Portfolio_PostByportfolio",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "portfolio",
                        "in": "body",
                        "description": "Dados do novo portfolio",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.PortfolioPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do portfolio gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/portfolios/{portfolioId}": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Retorna o portfolio pelo id",
                "operationId": "Portfolio_GetByportfolioId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "description": "Id do portfolio que se deseja buscar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio encontrado",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.Portfolio"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Atualiza um portfolio",
                "operationId": "Portfolio_PutByportfolioIdportfolio",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "description": "Id do portfolio que se deseja atualizar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "portfolio",
                        "in": "body",
                        "description": "Novos dados do portfolio",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.PortfolioPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Deleta um portfolio",
                "operationId": "Portfolio_DeleteByportfolioId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "description": "Id do portfolio que se deseja excluir",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio excluído com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/portfolios/{portfolioId}/produtos": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Retorna a lista de produtos de um portfolio",
                "operationId": "Portfolio_GetProdutosByportfolioId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "description": "Id do portfolio que se deseja buscar os produtos",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna a lista de produtos de um portfolio",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.PortfolioProduto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Vinculo de produtos ao portfolio",
                "operationId": "Portfolio_PutProdutosByportfolioIdlistProdutoId",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "description": "Id do portfolio que se deseja atualizar os produtos",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "listProdutoId",
                        "in": "body",
                        "description": "Lista dos Id's dos produtos",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoPut.PortfolioProduto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos do portfolio",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/portfolios/{portfolioId}/status": {
            "put": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Altera o status de um portfolio",
                "operationId": "Portfolio_PutStatusByportfolioIdportfolioStatus",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "description": "Id do portfolio que se deseja atualizar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "portfolioStatus",
                        "in": "body",
                        "description": "Novo status do portfolio",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPut.PortfolioStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status do portfolio atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna todos os produtos",
                "operationId": "Produto_GetBypaginacategoriasfabricantescentrosDistribuicaoalteradosPartirDequantidadeRegistrossomenteValidoscamposAdicionais",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "categorias",
                        "in": "query",
                        "description": "Lista de categorias que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará todas as categorias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fabricantes",
                        "in": "query",
                        "description": "Lista de fabricantes que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará todas as situações",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "centrosDistribuicao",
                        "in": "query",
                        "description": "Lista de centros de distribuição que deverão retornar (lista seperada por \",\" ex.: 1,2,3), caso vazio retornará produtos de todos os cd's",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alteradosPartirDe",
                        "in": "query",
                        "description": "Retorna apenas os produtos que sofreram alguma alteração a partir da data/hora informada. <br /><strong>Formato: aaaa-mm-dd hh:mm:ss</strong><br /> com no máximo 48 horas de antecedência",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "somenteValidos",
                        "in": "query",
                        "description": "Retorna apenas os produtos que estão marcados como válido",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "camposAdicionais",
                        "in": "query",
                        "description": "Campos adicionais que se selecionados retornaram junto com o produto",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Atacado",
                                "Estoque",
                                "Atributo",
                                "Informacao",
                                "TabelaPreco"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.Produto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Produto"
                ],
                "summary": "Adiciona novo produto",
                "description": "Método que insere um produto na base da Fstore",
                "operationId": "Produto_PostByproduto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "produto",
                        "in": "body",
                        "description": "Objeto que contém os dados do produto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.ProdutoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do produto variante gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Produto"
                ],
                "summary": "Deleta um conjunto de produtos por sku ou produtovarianteid",
                "operationId": "Produto_DeleteBytipoIdentificadorprodutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtos",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna um produto buscando pelo seu identificador",
                "description": "Método responsável por retornar um produto específico buscando pelo seu identificador, que pode ser um sku ou produto variante. O tipo do identificador\r\npode ser definido no campo <strong>tipoIdentificador</strong>. Também é possível informar quais informações adicionais devem ser retornadas na consulta utilizando o campo\r\n<strong>campos adicionais</strong>.",
                "operationId": "Produto_GetByidentificadortipoIdentificadorcamposAdicionais",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId",
                            "ProdutoId"
                        ]
                    },
                    {
                        "name": "camposAdicionais",
                        "in": "query",
                        "description": "Campo opcional que define quais dados extras devem ser retornados em conjunto com os dados básicos do produto.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Atacado",
                                "Estoque",
                                "Atributo",
                                "Informacao",
                                "TabelaPreco"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto encontrado",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.Produto"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza um produto.",
                "description": "Atualiza um produto com base nos dados enviados",
                "operationId": "Produto_PutByidentificadortipoIdentificadorproduto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produto",
                        "in": "body",
                        "description": "Dados do produto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPut.ProdutoPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/relacionados": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Busca os produtos relacionados",
                "description": "Retorna todos os identificadores dos produtos/variantes relacionados ao produto pesquisado",
                "operationId": "Produto_GetRelacionadosByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um Sku, um ProdutoId (Agrupador de variantes) ou um ProdutoVarianteId.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoId",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos relacionados",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProdutosRelacionados"
                            }
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/alteracoes": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna todos os produtos",
                "operationId": "Produto_GetAlteracoesBypaginaquantidadeRegistrosalteradosPartirDe",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "alteradosPartirDe",
                        "in": "query",
                        "description": "Retorna apenas os produtos que sofreram alguma alteração a partir da data/hora informada. <br /><strong>Formato: aaaa-mm-dd hh:mm:ss</strong><br /> com no máximo 48 horas de antecedência",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de preços e estoque de produtos que sofreram alterações",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.ProdutoAlterado"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/DataCadastro": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza a data de cadastro de um produto.",
                "description": "Atualiza a data de cadastro um produto com base nos dados enviados",
                "operationId": "Produto_PutDataCadastroByidentificadortipoIdentificadorprodutoDataCadastro",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtoDataCadastro",
                        "in": "body",
                        "description": "data de cadastro de um produto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProdutoDataCadastro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/estoques": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza o estoque de vários produtos.",
                "description": "Atualiza o estoque de vários produtos com base na lista enviada.<br /><strong>Limite de 50 produtos por requisição</strong>",
                "operationId": "Produto_AtualizarEstoqueBytipoIdentificadorlistaProdutoEstoque",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "listaProdutoEstoque",
                        "in": "body",
                        "description": "Lista com os dados da atualização do estoque",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProdutoEstoque"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/ResultadoAtualizacaoEstoque"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/precos": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza o preço de vários produtos.",
                "description": "Atualiza o estoque de vários produtos com base na lista enviada.<br /><strong>Limite de 50 produtos por requisição</strong>",
                "operationId": "Produto_AtualizarPrecoBytipoIdentificadorlistaProdutoPreco",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "listaProdutoPreco",
                        "in": "body",
                        "description": "Lista com os dados da atualização do preço",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoPut.ProdutoPreco"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/ResultadoAtualizacaoPreco"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/precos/lote": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza para o mesmo preço, todos os variantes de um produto encontrado com o SKU informado.",
                "description": "Atualiza para o mesmo preço, todos os variantes de um produto encontrado com o SKU informado.<br /><strong>Limite de 50 produtos por requisição</strong>",
                "operationId": "Produto_AtualizarPrecoLoteBylistaProdutoPrecoLote",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaProdutoPrecoLote",
                        "in": "body",
                        "description": "Lista com os dados da atualização do preço por lote.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoPut.ProdutoPrecoLote"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/ResultadoAtualizacaoPreco"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/situacaoReseller": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna a situação reseller de um produto",
                "operationId": "Produto_SelecionarStatusResellerByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Situação do produto no reseller",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/informacoes": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna todas as informações de um produto",
                "description": "Retorna todas as informações de um produto específico",
                "operationId": "Produto_SelecionarInformacoesByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId",
                            "ProdutoId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de informações do produto",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProdutoInformacaoCompleta"
                            }
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Produto"
                ],
                "summary": "Adiciona uma nova informação.",
                "description": "Adiciona uma nova informação e vincula a um produto existente.",
                "operationId": "Produto_InserirInformacaoByidentificadortipoIdentificadorinformacaoProdutotipoRetorno",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "informacaoProduto",
                        "in": "body",
                        "description": "Objeto contendo os dados atualizados da informação do produto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProdutoInformacaoProduto"
                        }
                    },
                    {
                        "name": "tipoRetorno",
                        "in": "query",
                        "description": "Define o tipo de retorno a ser recebido. Id retorna o InformacaoProdutoId da informação inserida, Booleano retorna true ou false, de acordo com o resultado da operação. Valor padrão Booleano.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Id",
                            "Booleano"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informação inserida com sucesso.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/informacoes/{informacaoId}": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza uma informação de um produto",
                "description": "Atualiza uma informação de um produto específico",
                "operationId": "Produto_AtualizarInformacaoByidentificadortipoIdentificadorinformacaoIdinformacaoProduto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "informacaoId",
                        "in": "path",
                        "description": "Id da informação do produto",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "informacaoProduto",
                        "in": "body",
                        "description": "Objeto contendo os dados atualizados da informação do produto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProdutoInformacaoProduto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informação do produto atualizada com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado ou informação não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Produto"
                ],
                "summary": "Exclui uma informação de um produto",
                "operationId": "Produto_DeletarInformacaoByidentificadortipoIdentificadorinformacaoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "informacaoId",
                        "in": "path",
                        "description": "Id da informação do produto",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informação excluída com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado ou informação não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/categorias": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna todas as categorias de um produto",
                "operationId": "Produto_SelecionarProdutoCategoriaByidentificadortipoIdentificadorpaginaquantidadRegistros",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId",
                            "ProdutoId"
                        ]
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadRegistros",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de categorias de um produto",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoriaCaminho"
                            }
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Produto"
                ],
                "summary": "Adiciona o vínculo entre um produto e uma categoria",
                "description": "Adiciona o vínculo entre um produto e uma categoria com base na lista enviada",
                "operationId": "Produto_InserirProdutoCategoriaByidentificadortipoIdentificadorprodutoCategoria",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtoCategoria",
                        "in": "body",
                        "description": "Id da categoria a qual o produto deverá ser vinculado.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProdutoCategoria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto vinculado a categoria com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/categorias/{id}": {
            "delete": {
                "tags": [
                    "Produto"
                ],
                "summary": "Exclui o vínculo entre uma categoria e um produto",
                "operationId": "Produto_DeletarProdutoCategoriaByidentificadortipoIdentificadorid",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id da categoria a qual o produto deverá ser desvinculado.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vinculo do produto com a categoria excluído com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/categoriaPrincipal": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Define uma categoria de um produto como principal",
                "operationId": "Produto_AlterarCategoriaPrincipalByidentificadortipoIdentificadorprodutoCategoriaPrincipal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtoCategoriaPrincipal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProdutoAlterarCategoriaPrincipal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria principal atualizada com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/categorias/ordem/lote": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza a ordem de exibição dos produtos nas categorias",
                "description": "Atualiza a ordem de exibição dos produtos nas categorias. <strong>Limite de 150 categorias por requisição</strong>",
                "operationId": "Produto_AtualizarProdutoCategoriaOrdemLoteBylistaProdutoCategoriaOrdem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "listaProdutoCategoriaOrdem",
                        "in": "body",
                        "description": "Lista com os dados de atualização da ordem do produto na categoria",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProdutoCategoriaOrdem"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ordem de exibição do produto na categoria atualizado com sucesso.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/ResultadoAtualizacaoProdutoCategoriaOrdem"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/imagens": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna uma lista de imagens de um produto",
                "operationId": "Produto_SelecionarProdutoImagemByidentificadortipoIdentificadorprodutosIrmaos",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtosIrmaos",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de imagens vinculadas a um  produtos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProdutoImagem"
                            }
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Produto"
                ],
                "summary": "Adiciona uma nova imagem vinculada a um produto",
                "operationId": "Produto_InserirProdutoImagemByidentificadortipoIdentificadorlistaImagenstipoRetorno",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "listaImagens",
                        "in": "body",
                        "description": "Lista com as imagens do produto no formato base 64",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProdutoImagemPost"
                            }
                        }
                    },
                    {
                        "name": "tipoRetorno",
                        "in": "query",
                        "description": "Define o tipo de retorno a ser recebido. ListaIds retorna lista de Ids das imagens inseridas, Booleano retorna true ou false, de acordo com o resultado da operação. Valor padrão Booleano.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ListaIds",
                            "Booleano"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imagem adicionada ao produto com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/imagens/estampa": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza a imagem de estampa do produto",
                "operationId": "Produto_AtualizarProdutoImagemEstampaByidentificadortipoIdentificadorprodutoImagemEstampaPut",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtoImagemEstampaPut",
                        "in": "body",
                        "description": "Id da imagem que será marcada como estampa",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProdutoImagemEstampaPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estampa alterada com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/imagens/{id}": {
            "delete": {
                "tags": [
                    "Produto"
                ],
                "summary": "Exclui uma imagem de um produto",
                "operationId": "Produto_DeletarProdutoImagemByidentificadortipoIdentificadorid",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id da imagem do produto",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imagem do produto excluída com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado ou imagem não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/disponibilidade": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna se o produto variante está disponivel ou não",
                "operationId": "Produto_SelecionarProdutoVarianteDisponibilidadeByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Disponibilidade de um produto",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/preco": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna o precoDe e precoPor de um produto",
                "operationId": "Produto_SelecionarProdutoVariantePrecoByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto com o precoDe e precoPor de um produto variante",
                        "schema": {
                            "$ref": "#/definitions/ProdutoVariantePreco"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/estoque": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna o estoque total e o estoque por centro de distribuição",
                "operationId": "Produto_SelecionarProdutoVarianteEstoqueByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto com o estoque total e o estoque por centro de distribuição de um produto variante",
                        "schema": {
                            "$ref": "#/definitions/ProdutoVarianteEstoque"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/avaliacoes": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna uma lista de avaliações referente ao identificador informado",
                "operationId": "Produto_GetAvaliacoesPorIdentificadorByidentificadortipoIdentificadorstatuspaginaquantidadeRegistros",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Referente ao status que libera a visualização da avaliação no site = ['Pendente', 'NaoAprovado', 'Aprovado']",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Pendente",
                            "NaoAprovado",
                            "Aprovado"
                        ]
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de avaliações de produtos",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/atacarejo": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna Lista de Atacarejos do Produto Variante",
                "operationId": "Produto_SelecionarTodosProdutoAtacadoByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "SKU ou Id do Produto Variante",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um SKU ou um id de Produto Variante",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Atacarejos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AtacadoGet"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Produto"
                ],
                "summary": "Adiciona novos Atacarejos",
                "operationId": "Produto_InserirProdutoAtacadoByidentificadortipoIdentificadorlistaProdutoAtacado",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "SKU ou Id do Produto Variante",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um SKU ou um id de Produto Variante",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "listaProdutoAtacado",
                        "in": "body",
                        "description": "Lista de Atacarejos",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AtacadoPost"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Resultado da Inserção dos Atacarejos",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/atacarejo/{produtoVarianteAtacadoId}": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna um Atacarejo pelo Id",
                "operationId": "Produto_SelecionarPorIdProdutoAtacadoByidentificadortipoIdentificadorprodutoVarianteAtacadoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "SKU ou Id do Produto Variante",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um SKU ou um id de Produto Variante",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtoVarianteAtacadoId",
                        "in": "path",
                        "description": "Id do Atacarejo",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Atacarejo",
                        "schema": {
                            "$ref": "#/definitions/AtacadoGet"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza um Atacarejo",
                "operationId": "Produto_AtualizarProdutoAtacadoByidentificadortipoIdentificadorprodutoVarianteAtacadoIdprodutoAtacado",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "SKU ou Id do Produto Variante",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um SKU ou um id de Produto Variante",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtoVarianteAtacadoId",
                        "in": "path",
                        "description": "Id do Atacarejo",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoAtacado",
                        "in": "body",
                        "description": "Objeto Atacarejo com os dados que serão atualizados",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AtacadoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Resultado da Atualização do Atacarejo",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Produto"
                ],
                "summary": "Remove um Atacarejo",
                "operationId": "Produto_DeletarProdutoAtacadoByidentificadortipoIdentificadorprodutoVarianteAtacadoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "SKU ou Id do Produto Variante",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um SKU ou um id de Produto Variante",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtoVarianteAtacadoId",
                        "in": "path",
                        "description": "Id do Atacarejo",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resultado da Remoção do Atacarejo",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/principal": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Seta identificador como variante principal",
                "description": "Seta identificador como variante principal.",
                "operationId": "Produto_AtualizarProdutoVariantePrincipalIdByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto variante principal setado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/situacao": {
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Seta status ativo/inativo do produto variante",
                "description": "Seta status do produto variante como ativo ou inativo.",
                "operationId": "Produto_AtualizarProdutoVarianteStatusByidentificadortipoIdentificadorsituacao",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "situacao",
                        "in": "body",
                        "description": "Define se o produto variante informado será ativo ou inativo.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Situacao"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status do Produto variante atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/precos": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Retorna todos os preços referente ao produto variante, incluindo os preços de tabela de preço.",
                "operationId": "Produto_GetProdutoVariantePrecosByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preços do produto variante informado.",
                        "schema": {
                            "$ref": "#/definitions/ProdutoVariantePrecos"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/seo": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Busca o SEO de um produto específico.",
                "operationId": "Produto_GetSEOByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Identificador do produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Tipo de identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoId",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SEO do produto informado",
                        "schema": {
                            "$ref": "#/definitions/ProdutoSeo"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Produto"
                ],
                "summary": "Atualiza um SEO de um produto específico.",
                "operationId": "Produto_PutSEOByidentificadortipoIdentificadormodel",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Identificador do produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Tipo de identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoId",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.ProdutoSeoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da operação, se realizado com sucesso (true) ou não (false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Produto"
                ],
                "summary": "Insere um SEO para um produto específico.",
                "operationId": "Produto_PostSEOByidentificadortipoIdentificadormodel",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Identificador do produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Tipo de identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoId",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.ProdutoSeoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da operação, se realizado com sucesso (true) ou não (false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Produto"
                ],
                "summary": "Deleta o SEO de um produto específico.",
                "operationId": "Produto_DeleteSEOByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Identificador do produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Tipo de identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoId",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da operação, se realizado com sucesso (true) ou não (false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtos/{identificador}/seo/metaTag": {
            "get": {
                "tags": [
                    "Produto"
                ],
                "summary": "Busca os metatags de um produto específico.",
                "operationId": "Produto_GetSEOMetaTagByidentificadortipoIdentificador",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Identificador do produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Tipo de identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoId",
                            "ProdutoVarianteId"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Metatags do produto informado.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProdutoSeoMetatag"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Produto"
                ],
                "summary": "Insere um ou mais metatags para um produto.",
                "operationId": "Produto_PostSEOMetaTagByidentificadortipoIdentificadormodel",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Identificador do produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Tipo de identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoId",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Lista de metatags",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.MetatagsPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da operação, se realizado com sucesso (true) ou não (false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Produto"
                ],
                "summary": "Deleta um ou mais Metatags de produto.",
                "operationId": "Produto_DeleteSEOMetaTagByidentificadortipoIdentificadormodel",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "identificador do produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "tipo de identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoId",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Lista de identificadores de metatags",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.MetatagsDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status da operação, se realizado com sucesso (true) ou não (false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtoavaliacao": {
            "get": {
                "tags": [
                    "ProdutoAvaliacao"
                ],
                "summary": "Retorna todas as avaliações dos produtos variantes da loja",
                "operationId": "ProdutoAvaliacao_GetBystatuspaginaquantidadeRegistros",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Referente ao status que libera a visualização da avaliação no site = ['Pendente', 'NaoAprovado', 'Aprovado']",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Pendente",
                            "NaoAprovado",
                            "Aprovado"
                        ]
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de avaliações de produtos",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtoavaliacao/{produtoAvaliacaoId}/status": {
            "put": {
                "tags": [
                    "ProdutoAvaliacao"
                ],
                "summary": "Atualiza o status de uma avaliação de um produto variante",
                "operationId": "ProdutoAvaliacao_PutByprodutoAvaliacaoIdprodutoAvaliacao",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "produtoAvaliacaoId",
                        "in": "path",
                        "description": "Identificador de uma Avaliação de um produto variante",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoAvaliacao",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avaliação atualizada",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/produtoavaliacao/{identificador}": {
            "post": {
                "tags": [
                    "ProdutoAvaliacao"
                ],
                "summary": "Insere uma avaliação para um produto variante",
                "operationId": "ProdutoAvaliacao_PostByidentificadortipoIdentificadorprodutoAvaliacao",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o produto",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um sku ou um id interno da fstore.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Sku",
                            "ProdutoVarianteId"
                        ]
                    },
                    {
                        "name": "produtoAvaliacao",
                        "in": "body",
                        "description": "Objeto que contém os dados da avaliação do produto",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avaliação inserida",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/promocoes": {
            "get": {
                "tags": [
                    "Promocoes"
                ],
                "summary": "Retorna uma lista de promocoes",
                "operationId": "Promocoes_GetPromocoesBybuscadataIniciodataTerminotemCupomtemMultiplosCuponsativopodeAcumularcondicoesacoesordenaColunaordenaPorpaginalimit",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "busca",
                        "in": "query",
                        "description": "Esse campo realiza a busca nos campos : PromocaoId, Nome e nome dos Cupons",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dataInicio",
                        "in": "query",
                        "description": "Data de inicio da promocao",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataTermino",
                        "in": "query",
                        "description": "Data do termino da promocao",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "temCupom",
                        "in": "query",
                        "description": "Filtra as promoções que possuem ou não cupons",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "temMultiplosCupons",
                        "in": "query",
                        "description": "Filtra as promoções que possuem múltiplos cupons ou cupom único",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ativo",
                        "in": "query",
                        "description": "Status da promoção",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "podeAcumular",
                        "in": "query",
                        "description": "Filtra promoções que podem ou não acumular",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "condicoes",
                        "in": "query",
                        "description": "Filtra promoções que possuem vinculo com as Condições passando uma lista de ids de condições",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "acoes",
                        "in": "query",
                        "description": "Filtra promoções que possuem vinculo com as Ações passando uma lista de ids  de ações",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "ordenaColuna",
                        "in": "query",
                        "description": "Nome da Coluna que deseja ordenar.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Ativo",
                            "DataInicio",
                            "DataTermino",
                            "Nome",
                            "Ordem"
                        ]
                    },
                    {
                        "name": "ordenaPor",
                        "in": "query",
                        "description": "tipo de ordenação",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "numero da pagina",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limite de registro por página",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de promocoes",
                        "schema": {
                            "$ref": "#/definitions/ObterPromocoesDTO"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/promocoes/{promocaoId}/cupons": {
            "put": {
                "tags": [
                    "Promocoes"
                ],
                "summary": "Realiza o vinculo de cupons a uma promoção",
                "operationId": "Promocoes_PutVincularCuponsBypromocaoIdrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "promocaoId",
                        "in": "path",
                        "description": "Identificador da Promoção",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "objeto de dados a serem alterados",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VincularCuponsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vincular Cupons a uma Promocão",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/promocoes/{promocaoId}": {
            "get": {
                "tags": [
                    "Promocoes"
                ],
                "summary": "Retorna uma promoção completa pelo Id",
                "operationId": "Promocoes_GetPromocaoCompletaPorIdBypromocaoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "promocaoId",
                        "in": "path",
                        "description": "Identificador da Promoção",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retorna uma promoção completa pelo id",
                        "schema": {
                            "$ref": "#/definitions/PromocaoBaseDTO"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/regionalizacao/{regiaoId}": {
            "get": {
                "tags": [
                    "Regionalizacao"
                ],
                "summary": "Retorna uma região específica",
                "operationId": "Regionalizacao_GetRegiaoByIdAsyncByregiaoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "regiaoId",
                        "in": "path",
                        "description": "Id da região",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Região",
                        "schema": {
                            "$ref": "#/definitions/Regiao"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Regionalizacao"
                ],
                "summary": "Atualiza uma região específica",
                "operationId": "Regionalizacao_PutRegiaoAsyncByregiaoIdregionalizacaoDTO",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "regiaoId",
                        "in": "path",
                        "description": "Id da região",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "regionalizacaoDTO",
                        "in": "body",
                        "description": "Dados da região",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionalizacaoPutDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/regionalizacao/regiao": {
            "post": {
                "tags": [
                    "Regionalizacao"
                ],
                "summary": "Insere uma região",
                "operationId": "Regionalizacao_PostRegiaoAsyncByregionalizacaoDTO",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "regionalizacaoDTO",
                        "in": "body",
                        "description": "Dados da região",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionalizacaoPostDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Id da região",
                        "schema": {
                            "$ref": "#/definitions/RegionalizacaoPostResult"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/regionalizacao/{regiaoId}/arquivar": {
            "put": {
                "tags": [
                    "Regionalizacao"
                ],
                "summary": "Arquiva uma região",
                "operationId": "Regionalizacao_ArquivarRegiaoByregiaoIdregionalizacaoDTO",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "regiaoId",
                        "in": "path",
                        "description": "Id da região",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "regionalizacaoDTO",
                        "in": "body",
                        "description": "Dados da região",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegiaoArquivar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "$ref": "#/definitions/RegiaoArquivarResultado"
                        }
                    },
                    "422": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/resellers": {
            "get": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Retorna todos os Sellers da loja",
                "operationId": "Reseller_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de resellers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.Reseller"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Atualiza um novo Seller no marketplace",
                "operationId": "Reseller_PutByresellerIdreseller",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "resellerId",
                        "in": "query",
                        "description": "Valor único utilizado para identificar o seller",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "reseller",
                        "in": "body",
                        "description": "Dados do seller",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPut.ResellerPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de resellers",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Insere um novo Seller no marketplace",
                "operationId": "Reseller_PostByreseller",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reseller",
                        "in": "body",
                        "description": "Dados do seller",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.ResellerPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Lista de resellers",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.ResellerPostResponse"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/resellers/token": {
            "get": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Retorna um Seller específico da loja",
                "operationId": "Reseller_GetByToken",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Reseller específico",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.Reseller"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/resellers/{resellerId}": {
            "get": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Retorna um Seller específico da loja",
                "operationId": "Reseller_GetByIdByresellerId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "resellerId",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o seller",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reseller específico",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.Reseller"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/resellers/produtos/{identificador}": {
            "get": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Retorna produtos por Seller",
                "operationId": "Reseller_GetProductsByResellerByidentificadortipoIdentificadorpaginaquantidadeRegistrossomenteValidoscamposAdicionais",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificador",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o reseller",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Define se o identificador informado é um id interno da fstore ou a Razão social do Reseller.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ResellerId",
                            "RazaoSocial"
                        ]
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "somenteValidos",
                        "in": "query",
                        "description": "Se deve retornar apenas produtos válidos (padrão: false)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "camposAdicionais",
                        "in": "query",
                        "description": "Campos adicionais que se selecionados retornaram junto com o produto",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Atacado",
                                "Estoque",
                                "Atributo",
                                "Informacao",
                                "TabelaPreco"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.Produto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/resellers/{resellerId}/autonomia": {
            "put": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Atualiza a autonomia de um Seller",
                "operationId": "Reseller_PutAutonomiaByresellerIdstatusAutonomia",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "resellerId",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o seller",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "statusAutonomia",
                        "in": "body",
                        "description": "Status da autonomia do seller",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResellerStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Atualiza a autonomia de um reseller",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/resellers/{resellerId}/status": {
            "put": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Ativa ou desativa um Seller",
                "operationId": "Reseller_PutStatusByresellerIdstatusReseller",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "resellerId",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o seller",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "statusReseller",
                        "in": "body",
                        "description": "Status do seller (ativo / inativo)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResellerStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Atualiza o status de um reseller",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/resellers/{resellerId}/ativacaoAutomaticaProdutos": {
            "put": {
                "tags": [
                    "Reseller"
                ],
                "summary": "Atualiza a ativação automática de produtos de um Seller",
                "operationId": "Reseller_PutAtivacaoAutomaticaProdutosByresellerIdstatusAtivacaoAutomaticaProduto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "resellerId",
                        "in": "path",
                        "description": "Valor único utilizado para identificar o seller",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "statusAtivacaoAutomaticaProduto",
                        "in": "body",
                        "description": "Status da ativação automática de produtos",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResellerStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de resellers",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/situacoesPedido": {
            "get": {
                "tags": [
                    "SituacaoPedido"
                ],
                "summary": "Retorna todas as situações de pedido da loja",
                "operationId": "SituacaoPedido_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de situações de pedido",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SituacaoPedido"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/tabelaPrecos": {
            "get": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Retorna todas as tabelas de preços",
                "operationId": "TabelaPreco_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de tabelas de preços",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabelaPreco"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Insere uma nova tabela de preços.",
                "operationId": "TabelaPreco_PostBytabelaPreco",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tabelaPreco",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabelaPrecoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id da tabela de preços gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/tabelaPrecos/{tabelaPrecoId}": {
            "get": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Retorna uma tabela de preços",
                "operationId": "TabelaPreco_GetPorIdBytabelaPrecoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tabelaPrecoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tabela de preços específica",
                        "schema": {
                            "$ref": "#/definitions/TabelaPreco"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Atualiza uma tabela de preços",
                "operationId": "TabelaPreco_PutBytabelaPrecoIdtabelaPreco",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tabelaPrecoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "tabelaPreco",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TabelaPrecoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tabela de preços atualizada com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Exclui uma tabela de preços",
                "operationId": "TabelaPreco_DeleteBytabelaPrecoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tabelaPrecoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tabela de preços excluída com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/tabelaPrecos/{tabelaPrecoId}/produtos": {
            "get": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Retorna os produtos de uma tabela de preços",
                "operationId": "TabelaPreco_GetProdutosBytabelaPrecoIdpaginaquantidadeRegistros",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tabelaPrecoId",
                        "in": "path",
                        "description": "Id da tabela de preço",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de registros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos de uma tabela de preços",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabelaPrecoProdutoVariante"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Atualiza uma lista de produto variantes em uma tabela de preços",
                "operationId": "TabelaPreco_PutProdutoTabelaPrecoBytabelaPrecoIdtabelaPreco",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tabelaPrecoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "tabelaPreco",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabelaPrecoProdutoVariantePost"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista com o retorno do processamento dos produtos enviados",
                        "schema": {
                            "$ref": "#/definitions/TabelaPrecoProdutoVariantePostRetorno"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Inseri uma lista de produto variantes em uma tabela de preços",
                "operationId": "TabelaPreco_PostProdutoTabelaPrecoBytabelaPrecoIdtabelaPreco",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tabelaPrecoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "tabelaPreco",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TabelaPrecoProdutoVariantePost"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Lista com o retorno do processamento dos produtos enviados",
                        "schema": {
                            "$ref": "#/definitions/TabelaPrecoProdutoVariantePostRetorno"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/tabelaPrecos/{tabelaPrecoId}/{sku}": {
            "delete": {
                "tags": [
                    "TabelaPreco"
                ],
                "summary": "Remove um produto de uma tabela de preço",
                "operationId": "TabelaPreco_DeleteProdutoTabelaPrecoBytabelaPrecoIdsku",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tabelaPrecoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "sku",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Remove um produto de uma tabela de preço",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/templates": {
            "get": {
                "tags": [
                    "Template"
                ],
                "summary": "",
                "operationId": "Template_GetTemplates",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tiposEvento/{tipoEventoId}/produtos": {
            "get": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Busca os produtos sugeridos para a lista de evento.",
                "operationId": "TipoEvento_BuscarProdutosSugeridosPorTipoEventoIdBytipoEventoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoEventoId",
                        "in": "path",
                        "description": "Identificador do tipo de evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de produtos variantes vinculados aos tipo de evento",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TipoEventoSugestaoProduto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Atualiza os produtos sugeridos de um tipo de evento.",
                "operationId": "TipoEvento_AtualizarSugestaoProdutosDeTipoEventoBytipoEventoIdprodutosVariantes",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoEventoId",
                        "in": "path",
                        "description": "Identificador do tipo de evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtosVariantes",
                        "in": "body",
                        "description": "Identificadores dos produtos variantes a serem vinculados ao tipo evento desejado.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resposta informando se foi atualizado, true, ou se não foi atualizado, false.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Vincula um ou mais produtos como sugestão para um tipo de evento.",
                "operationId": "TipoEvento_InserirSugestaoDeProdutoParaTipoEventoBytipoEventoIdsugestaoProdutos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoEventoId",
                        "in": "path",
                        "description": "Identificador do tipo de evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "sugestaoProdutos",
                        "in": "body",
                        "description": "Identificadores dos produtos variantes a serem vinculados ao tipo evento desejado.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de resposta para cada produto vinculado",
                        "schema": {
                            "$ref": "#/definitions/ResultadoInsercaoSugestaoProdutoTipoEvento"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/tiposEvento/{tipoEventoId}/produto/{produtoVarianteId}": {
            "delete": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Deleta um produto da lista de sugestões de produtos de um tipo de evento.",
                "operationId": "TipoEvento_DesvincularSugestaoProdutoDeTipoEventoBytipoEventoIdprodutoVarianteId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoEventoId",
                        "in": "path",
                        "description": "Identificador do tipo de evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "produtoVarianteId",
                        "in": "path",
                        "description": "Identificador do variante do produto.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resposta informando se foi deletado, true, ou se não foi deletado, false.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/tiposEvento/{tipoEventoId}": {
            "get": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Retorna um tipo de evento especifico.",
                "operationId": "TipoEvento_BuscarTipoEventoPorIdBytipoEventoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoEventoId",
                        "in": "path",
                        "description": "Identificador do tipo de evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tipo evento buscado.",
                        "schema": {}
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Atualiza o tipo evento.",
                "operationId": "TipoEvento_AtualizarTipoEventoBytipoEventoIdtipoEvento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoEventoId",
                        "in": "path",
                        "description": "Identificador do tipo de evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "tipoEvento",
                        "in": "body",
                        "description": "Tipo evento com os novos dados.",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resposta informando se foi atualizado, true, ou se não foi atualizado, false.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/tiposEvento": {
            "get": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Retorna todos os tipos de eventos",
                "operationId": "TipoEvento_BuscarTiposEventosByativodisponivelnome",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "ativo",
                        "in": "query",
                        "description": "Filtro de busca",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "disponivel",
                        "in": "query",
                        "description": "Filtro de busca",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "nome",
                        "in": "query",
                        "description": "Filtro de busca",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de tipos de evento.",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Insere um novo tipo de evento",
                "operationId": "TipoEvento_InserirTipoEventoBytipoEvento",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Identificador do tipo evento inserido",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/tiposEvento/{tipoEventoId}/AlterarStatus": {
            "put": {
                "tags": [
                    "TipoEvento"
                ],
                "summary": "Atualiza o status do tipo de evento, ativando-o ou inativando-o.",
                "operationId": "TipoEvento_AtualizarStatusTipoEventoBytipoEventoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoEventoId",
                        "in": "path",
                        "description": "Identificador do tipo de evento.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resposta informando se foi alterado o status, true, ou se não foi alterado o status, false.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna todos os usuários",
                "operationId": "Usuario_GetBypaginaquantidadeRegistrosdataInicialdataFinalenumTipoFiltroDataaprovado",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quantidadeRegistros",
                        "in": "query",
                        "description": "Quantidade de resgistros que deverão retornar (max: 50)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data inicial da data de criação do usuario que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data final da data de criação do usuario que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "enumTipoFiltroData",
                        "in": "query",
                        "description": "Filtro do tipo de data",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DataAlteracao",
                            "DataCriacao"
                        ]
                    },
                    {
                        "name": "aprovado",
                        "in": "query",
                        "description": "Situação do usuário",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de usuários",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Usuario"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Insere um novo usuário.",
                "operationId": "Usuario_PostByusuario",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "usuario",
                        "in": "body",
                        "description": "Dados do novo usuário que está sendo inserido",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.UsuarioPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do usuário gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/email/{email}": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna um usuário específico pelo e-mail",
                "operationId": "Usuario_GetPorEmailByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário encontrado",
                        "schema": {
                            "$ref": "#/definitions/Usuario"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/usuarioId/{usuarioId}": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna um usuário específico pelo id",
                "operationId": "Usuario_GetPorUsuarioIdByusuarioId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "usuarioId",
                        "in": "path",
                        "description": "Identificador do usuário.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário encontrado",
                        "schema": {
                            "$ref": "#/definitions/Usuario"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/cpf/{cpf}": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna um usuário específico pelo cpf",
                "operationId": "Usuario_GetPorCPFBycpf",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do usuário, apenas números.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário encontrado",
                        "schema": {
                            "$ref": "#/definitions/Usuario"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/cnpj/{cnpj}": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna um usuário específico pelo cnpj",
                "operationId": "Usuario_GetPorCNPJBycnpj",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cnpj",
                        "in": "path",
                        "description": "cnpj do cliente somente números",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário encontrado",
                        "schema": {
                            "$ref": "#/definitions/Usuario"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{usuarioId}": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Atualiza um usuário pelo id",
                "operationId": "Usuario_PutByusuarioIdusuario",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "usuarioId",
                        "in": "path",
                        "description": "Identificador do usuário que será realizado a atualização.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "usuario",
                        "in": "body",
                        "description": "Dados para atualizar o usuário.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsuarioPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/informacoescadastrais": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Atualiza as informações cadastrais de um ou mais usuários",
                "description": "<strong>Limite de 50 usuários e 10 informações cadastrais por requisição</strong>",
                "operationId": "Usuario_PutBytipoIdentificadorusuarios",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Tipo do identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "UsuarioId",
                            "Email"
                        ]
                    },
                    {
                        "name": "usuarios",
                        "in": "body",
                        "description": "Usuários com informações cadastrais a serem atualizados.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsuarioGrupoInformacaoCadastralEmLote"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operação realizada com ou sem sucesso para os usuários",
                        "schema": {
                            "$ref": "#/definitions/ResultadoAtualizacaoUsuarioInformacaoCadastral"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{email}/enderecos": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna uma lista de endereços de um usuário pelo e-mail do usuário",
                "operationId": "Usuario_GetEnderecosByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email do usuário.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna usuário encontrado",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Endereco"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Insere um endereço para um usuário pelo e-mail",
                "operationId": "Usuario_PostEnderecoByemailendereco",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endereco",
                        "in": "body",
                        "description": "Dados de endereço do usuário.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.EnderecoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endereço de um usuário encontrado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{email}/enderecos/{enderecoId}": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Atualiza um endereço de um usuário pelo e-mail do usuário",
                "operationId": "Usuario_PutEnderecoByemailenderecoIdendereco",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "enderecoId",
                        "in": "path",
                        "description": "Identificador do endereço do usuário a ser atualizado.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "endereco",
                        "in": "body",
                        "description": "Dados do endereço para atualização.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.EnderecoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endereço de um usuário encontrado",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{usuarioId}/enderecos/{enderecoId}/ativar": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Ativa ou desativa um endereço de um usuário com base no id do usuário",
                "operationId": "Usuario_PutEnderecoAtivarByUsuarioIdByusuarioIdenderecoIdenderecoStatus",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "usuarioId",
                        "in": "path",
                        "description": "Id do usuário que se deseja alterar o status so endereço",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "enderecoId",
                        "in": "path",
                        "description": "Id do endereço que se deseja alterar o status",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "enderecoStatus",
                        "in": "body",
                        "description": "Status do endereço",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnderecoStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status endereço de um usuário atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{email}/parceiros": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna uma lista de vínculos entre usuário e parceiro",
                "operationId": "Usuario_GetParceiroByUsuarioByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Lista de vínculos entre usuário e parceiro",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{email}/parceiro": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Atualiza o vínculo entre usuário e parceiro",
                "operationId": "Usuario_AtualizarVinculoParceiroByemailparceiro",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário que se deseja vincular",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parceiro",
                        "in": "body",
                        "description": "Dados para vinculo com parceiro",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Put"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Usuário vinculado com o parceiro com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Adiciona um vínculo entre usuário e parceiro",
                "operationId": "Usuario_VincularParceiroByemailparceiro",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário que se deseja vincular",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parceiro",
                        "in": "body",
                        "description": "Dados para vinculo com parceiro",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Usuário vinculado com o parceiro com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Remove o vínculo entre usuário e parceiro",
                "operationId": "Usuario_DesvincularParceiroByemailparceiro",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário desvinculado com o parceiro com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/limiteCredito": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna uma lista de usuários com o limite de credito de cada um",
                "operationId": "Usuario_GetLimiteCredito",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Limite de crédito que estão vinculados aos usuários",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsuarioLimiteCredito"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/limiteCreditoPorUsuarioId/{usuarioId}": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna o limite de crédito de um usuário específico",
                "operationId": "Usuario_SelectLimiteCreditoByUsuarioIdByusuarioId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "usuarioId",
                        "in": "path",
                        "description": "Identificador do usuário.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Limite de crédito de um usuário específico",
                        "schema": {
                            "$ref": "#/definitions/UsuarioLimiteCredito"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/limiteCreditoPorEmail/{email}": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna o limite de crédito de um usuário específico",
                "operationId": "Usuario_SelectLimiteCreditoByUsuarioByEmailByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Limite de crédito de um usuário específico",
                        "schema": {
                            "$ref": "#/definitions/UsuarioLimiteCredito"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/limiteCredito/{usuarioId}": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Atualiza o limite de crédito de um usuário",
                "operationId": "Usuario_PutLimiteCreditoBycpf_cnpjusuarioIdvalor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cpf_cnpj",
                        "in": "query",
                        "description": "CPF ou CNPJ do usuário",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "usuarioId",
                        "in": "path",
                        "description": "Identificador do usuário.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "valor",
                        "in": "query",
                        "description": "Valor do limite de crédito.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Atualizado o limite de crédito com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/newsletter": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna lista de usuarios cadastrados/descadastrados na newsletter",
                "operationId": "Usuario_GetUsuariosNewsletterByordenarPordataInicialdataFinalpaginastatusdoubleOptIn",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "ordenarPor",
                        "in": "query",
                        "description": "Tipo de ordenação",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "DataCadastro",
                            "DataAtualizacao"
                        ]
                    },
                    {
                        "name": "dataInicial",
                        "in": "query",
                        "description": "Data inicial dos cadastros que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "dataFinal",
                        "in": "query",
                        "description": "Data final dos cadastros que deverão retonar (aaaa-mm-dd hh:mm:ss)",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "pagina",
                        "in": "query",
                        "description": "Página da lista (padrão: 1)",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status do usuario",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "doubleOptIn",
                        "in": "query",
                        "description": "DoubleOptIn aceito (verificar estado da configuração)",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna lista de usuarios cadastrados/descadastrados na newsletter (50 por página)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsuarioNewsletter"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{email}/pedidos": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna uma lista contendo o id dos pedidos de um usuário.",
                "operationId": "Usuario_GetPedidosPorUsuarioByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário cujos pedidos devem ser selecionados.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna lista contendo os Id's dos pedidos do usuário",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PedidoHATEOAS"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/documento/{documento}/pedidos": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna uma lista contendo o id dos pedidos de um usuário.",
                "operationId": "Usuario_GetPedidosPorDocumentoBydocumentotipoDocumento",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "documento",
                        "in": "path",
                        "description": "Documento (CPF ou CNPJ) do usuário cujos pedidos devem ser selecionados. Utilizar apenas números, sem caracteres especiais.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipoDocumento",
                        "in": "query",
                        "description": "Define se o documento informado é um CPF ou um CNPJ.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Cpf",
                            "Cnpj"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna lista contendo os Id's dos pedidos do usuário",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PedidoHATEOAS"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{email}/comunicacao": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna se o usuário ativou o recebimento de newsletter",
                "operationId": "Usuario_GetUsuarioComunicacaoByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário cujos pedidos devem ser selecionados.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna se o usuário ativou o recebimento de newsletter",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.UsuarioComunicacao"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Atualiza a comunicação de um usuário via newsletter",
                "operationId": "Usuario_PutUsuarioComunicacaoByemailusuarioComunicacao",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário cujos dados devem ser atualizados.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "usuarioComunicacao",
                        "in": "body",
                        "description": "Novo status da comunicação via newajuste realisletter.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsuarioComunicacao"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna se a atualização ocorreu com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{usuarioId}/listaDesejos": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna os dados da lista de desejos de um usuário",
                "operationId": "Usuario_GetUsuarioListadesejosByusuarioId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "usuarioId",
                        "in": "path",
                        "description": "Id do usuário.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados da lista de desejos de um usuário",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NovoContratoGet.UsuarioListaDesejos"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/{email}/avatar": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna a url do avatar de um usuário.",
                "operationId": "Usuario_GetAvatarUsuarioByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar do usuário encontrado",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.UsuarioAvatar"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Insere um novo avatar para o usuário.",
                "operationId": "Usuario_PostAvatarUsuarioByemailavatarUsuario",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "avatarUsuario",
                        "in": "body",
                        "description": "Imagem a ser enviada para o usuário",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsuarioImagemPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Nome do arquivo gerado",
                        "schema": {
                            "$ref": "#/definitions/NovoContratoGet.UsuarioAvatar"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Deleta um avatar de um usuário.",
                "operationId": "Usuario_DeleteAvatarUsuarioByemail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "E-mail do usuário",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar deletado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/CadastroPersonalizado": {
            "post": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Insere um novo campo de cadastro personalizado",
                "operationId": "Usuario_PostUsuarioCamposGrupoInformacaoCadastralBycamposGrupoInformacaoCadastral",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "camposGrupoInformacaoCadastral",
                        "in": "body",
                        "description": "Dados do novo campo que está sendo criado",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Id do campo de cadastro personalizado gerado",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/camposcadastropersonalizado": {
            "get": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Retorna os campos de cadastro personalizado existentes.",
                "operationId": "Usuario_GetCamposCadastroPersonalizado",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Campos de cadastro personalizado encontrados",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsuarioCamposGrupoInformacaoCadastral"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/camposcadastropersonalizado/{camposcadastropersonalizadoId}": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Atualiza um campo de cadastro personalizado pelo id",
                "operationId": "Usuario_PutCampoCadastroPersonalizadoBycamposcadastropersonalizadoIdcampo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "camposcadastropersonalizadoId",
                        "in": "path",
                        "description": "Identificador do campo.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "campo",
                        "in": "body",
                        "description": "Dados do campo.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsuarioCamposGrupoInformacaoCadastralPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campo atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Remove um campo de cadastro personalizado",
                "operationId": "Usuario_ExcluirCampoPersnonalizadoBycamposcadastropersonalizadoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "camposcadastropersonalizadoId",
                        "in": "path",
                        "description": "Identificador do campo de cadastro personalizado.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campo de cadastro personalizado excluido com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/valoresdefinidoscadastropersonalizado/{valoresDefinidosCampoGrupoInformacaoId}": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Atualiza um valor pré definido pelo id",
                "operationId": "Usuario_PutValorPreDefinidoCadastroPersonalizadoByvaloresDefinidosCampoGrupoInformacaoIdvalor",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "valoresDefinidosCampoGrupoInformacaoId",
                        "in": "path",
                        "description": "Id dos valores definidos no campo grupo informação",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "valor",
                        "in": "body",
                        "description": "Dados a serem atualizados",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsuarioValoresDefinidosCampoGrupoInformacaoPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campo atualizado com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Remove um valor pré definido",
                "operationId": "Usuario_ExcluirValorPreDefinidoByvaloresDefinidosCampoGrupoInformacaoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "valoresDefinidosCampoGrupoInformacaoId",
                        "in": "path",
                        "description": "Id dos valores definidos no campo grupo informação",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campo de valor pré definido excluido com sucesso",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/autorizar": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Aprova um cadastro de usuário",
                "operationId": "Usuario_AprovarUsuariosBytipoIdentificadorusuarios",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tipoIdentificador",
                        "in": "query",
                        "description": "Tipo do identificador",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "UsuarioId",
                            "Email"
                        ]
                    },
                    {
                        "name": "usuarios",
                        "in": "body",
                        "description": "Usuários a serem aprovados.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsuarioAprovar"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operação realizada com ou sem sucesso para os usuários",
                        "schema": {
                            "$ref": "#/definitions/ResultadoAprovacaoUsuarios"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/usuarios/bloquear": {
            "put": {
                "tags": [
                    "Usuario"
                ],
                "summary": "Bloqueia ou desbloqueia usuários",
                "operationId": "Usuario_BloquearUsuarioByusuarios",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "usuarios",
                        "in": "body",
                        "description": "Usuários a serem bloqueados.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BloquearUsuario"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campo atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/ResultadoBloquearUsuario"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/webhook/inscricao": {
            "get": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Busca todas as inscrições inseridas.",
                "operationId": "Webhook_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de inscrições",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InscricaoGet"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Insere uma inscrição.",
                "operationId": "Webhook_PostByrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Identificador da inscrição",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/webhook/inscricao/{inscricaoId}": {
            "get": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Busca a inscricao por seu identificador.",
                "operationId": "Webhook_GetByinscricaoId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "inscricaoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inscrição",
                        "schema": {
                            "$ref": "#/definitions/InscricaoGet"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Atualiza uma inscrição.",
                "operationId": "Webhook_PutAtualizarInscricaoByinscricaoIdrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "inscricaoId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status se a inscrição foi atualizada com sucesso (true) ou não (false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/webhook/inscricao/{inscricaoId}/Ativar": {
            "put": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Ativa ou inativa uma inscrição.",
                "operationId": "Webhook_PutAtivarInscricaoByinscricaoIdrequest",
                "consumes": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "inscricaoId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status se a inscrição foi ativada/desativada com sucesso (true) ou não (false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        },
        "/webhook/Topicos": {
            "get": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Busca os tópicos disponíveis para inscrição.",
                "operationId": "Webhook_GetTopicos",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "text/html",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Topicos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TopicoGet"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro no processamento da operação",
                        "schema": {
                            "$ref": "#/definitions/Resultado"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AssinaturaSimples": {
            "type": "object",
            "properties": {
                "assinaturaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "usuarioId": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataProximoPedido": {
                    "format": "date-time",
                    "type": "string"
                },
                "periodoRecorrencia": {
                    "type": "string"
                },
                "situacaoAssinatura": {
                    "enum": [
                        "Ativa",
                        "Pausada",
                        "Cancelada"
                    ],
                    "type": "string"
                },
                "dataAssinatura": {
                    "format": "date-time",
                    "type": "string"
                },
                "grupoAssinatura": {
                    "type": "string"
                },
                "enderecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "usuarioCartaoCreditoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "cupom": {
                    "type": "string"
                },
                "parceiro": {
                    "$ref": "#/definitions/AssinaturaParceiro"
                },
                "dataPausa": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCancelamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "formaPagamento": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormaPagamentoSimples"
                    }
                }
            }
        },
        "AssinaturaParceiro": {
            "type": "object",
            "properties": {
                "parceiroId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "FormaPagamentoSimples": {
            "type": "object",
            "properties": {
                "parcelamento": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Resultado": {
            "type": "object",
            "properties": {
                "resultadoOperacao": {
                    "type": "boolean"
                },
                "codigo": {
                    "format": "int64",
                    "type": "integer"
                },
                "mensagem": {
                    "type": "string"
                }
            }
        },
        "Assinatura": {
            "type": "object",
            "properties": {
                "assinaturaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "usuarioId": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataProximoPedido": {
                    "format": "date-time",
                    "type": "string"
                },
                "periodoRecorrencia": {
                    "type": "string"
                },
                "situacaoAssinatura": {
                    "enum": [
                        "Ativa",
                        "Pausada",
                        "Cancelada"
                    ],
                    "type": "string"
                },
                "dataAssinatura": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataPausa": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCancelamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "grupoAssinatura": {
                    "type": "string"
                },
                "enderecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "usuarioCartaoCreditoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "cupom": {
                    "type": "string"
                },
                "parcelamento": {
                    "format": "int32",
                    "type": "integer"
                },
                "produtos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssinaturaProduto"
                    }
                },
                "parceiro": {
                    "$ref": "#/definitions/AssinaturaParceiro"
                }
            }
        },
        "AssinaturaProduto": {
            "type": "object",
            "properties": {
                "assinaturaProdutoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "assinaturaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "removido": {
                    "type": "boolean"
                }
            }
        },
        "AssinaturaAtualizar": {
            "type": "object",
            "properties": {
                "enderecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "usuarioCartaoCreditoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "periodoRecorrencia": {
                    "type": "string"
                },
                "situacaoAssinatura": {
                    "enum": [
                        "Ativa",
                        "Pausada",
                        "Cancelada"
                    ],
                    "type": "string"
                },
                "cupom": {
                    "type": "string"
                }
            }
        },
        "AssinaturaRecorrencia": {
            "type": "object",
            "properties": {
                "recorrencias": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AssinaturaErro": {
            "type": "object",
            "properties": {
                "assinaturaErroId": {
                    "format": "int64",
                    "type": "integer"
                },
                "assinaturaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "usuarioId": {
                    "type": "string"
                },
                "visualizado": {
                    "type": "boolean"
                },
                "dataErro": {
                    "format": "date-time",
                    "type": "string"
                },
                "resolvido": {
                    "type": "boolean"
                },
                "codigoAssinaturaErro": {
                    "format": "int64",
                    "type": "integer"
                },
                "assinaturaErroNome": {
                    "type": "string"
                },
                "assinaturaErroDescricao": {
                    "type": "string"
                }
            }
        },
        "AssinaturaByPedido": {
            "type": "object",
            "properties": {
                "assinaturaPedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "assinaturaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "grupoAssinaturaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tipoPeriodo": {
                    "type": "string"
                },
                "tempoPeriodo": {
                    "format": "int32",
                    "type": "integer"
                },
                "pedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "data": {
                    "format": "date-time",
                    "type": "string"
                },
                "origemPedidoEnumId": {
                    "format": "int32",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "assinaturaProdutos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssinaturaProdutosByPedido"
                    }
                }
            }
        },
        "AssinaturaProdutosByPedido": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "GrupoAssinatura": {
            "type": "object",
            "properties": {
                "grupoAssinaturaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "recorrencias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Recorrencia"
                    }
                }
            }
        },
        "Recorrencia": {
            "type": "object",
            "properties": {
                "recorrenciaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "dias": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "GrupoAssinaturaAssinatura": {
            "type": "object",
            "properties": {
                "mensagem": {
                    "type": "string"
                }
            }
        },
        "Atributo": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "tipo": {
                    "enum": [
                        "Selecao",
                        "Filtro",
                        "Comparacao",
                        "Configuracao",
                        "ExclusivoGoogle"
                    ],
                    "type": "string"
                },
                "tipoExibicao": {
                    "enum": [
                        "Combo",
                        "Div",
                        "DivComCor",
                        "DivComFotoDoProdutoVariante",
                        "Javascript"
                    ],
                    "type": "string"
                },
                "prioridade": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Autenticacao": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "senha": {
                    "type": "string"
                }
            }
        },
        "UsuarioIdentificadoAPI": {
            "type": "object",
            "properties": {
                "lojas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "accessToken": {
                    "type": "string"
                },
                "dataExpiracaoAccessTokenUTC": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Imagem": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "base64": {
                    "type": "string"
                },
                "formato": {
                    "enum": [
                        "PNG",
                        "JPG",
                        "JPEG"
                    ],
                    "type": "string"
                }
            }
        },
        "Categoria": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "categoriaPaiId": {
                    "format": "int32",
                    "type": "integer"
                },
                "categoriaERPId": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "isReseller": {
                    "type": "boolean"
                },
                "exibirMatrizAtributos": {
                    "enum": [
                        "Sim",
                        "Nao",
                        "Neutro"
                    ],
                    "type": "string"
                },
                "quantidadeMaximaCompraUnidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "valorMinimoCompra": {
                    "format": "double",
                    "type": "number"
                },
                "exibeMenu": {
                    "type": "boolean"
                },
                "urlHotSite": {
                    "type": "string"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CategoriaEnvio": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "categoriaPaiId": {
                    "format": "int32",
                    "type": "integer"
                },
                "categoriaERPId": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "isReseller": {
                    "type": "boolean"
                },
                "exibirMatrizAtributos": {
                    "default": "Nao",
                    "enum": [
                        "Nao"
                    ],
                    "type": "string"
                },
                "quantidadeMaximaCompraUnidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "valorMinimoCompra": {
                    "format": "double",
                    "type": "number"
                },
                "exibeMenu": {
                    "type": "boolean"
                }
            }
        },
        "CategoriaProduto": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CentroDistribuicao": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "cep": {
                    "format": "int32",
                    "type": "integer"
                },
                "padrao": {
                    "type": "boolean"
                }
            }
        },
        "CentroDistribuicaoPrioridade": {
            "type": "object",
            "properties": {
                "incrementoOrdem": {
                    "format": "int32",
                    "type": "integer"
                },
                "desativarPriorizacao": {
                    "type": "boolean"
                }
            }
        },
        "ContaCorrente": {
            "type": "object",
            "properties": {
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "tipoLancamento": {
                    "enum": [
                        "Credito",
                        "Debito"
                    ],
                    "type": "string"
                },
                "observacao": {
                    "type": "string"
                },
                "visivelParaCliente": {
                    "type": "boolean"
                },
                "tipoContaCorrenteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "referencia": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ContaCorrenteCompleta": {
            "type": "object",
            "properties": {
                "data": {
                    "format": "date-time",
                    "type": "string"
                },
                "historico": {
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "tipoLancamento": {
                    "enum": [
                        "Credito",
                        "Debito"
                    ],
                    "type": "string"
                },
                "observacao": {
                    "type": "string"
                },
                "visivelParaCliente": {
                    "type": "boolean"
                },
                "tipoContaCorrenteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "referencia": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Conteudo": {
            "type": "object",
            "properties": {
                "conteudoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "titulo": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "dataInicio": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFim": {
                    "format": "date-time",
                    "type": "string"
                },
                "posicionamento": {
                    "enum": [
                        "Topo",
                        "Centro",
                        "Rodape",
                        "LateralDireita",
                        "LateralEsquerda",
                        "Ok",
                        "Erro",
                        "PersonalizadoSessaoExplre",
                        "MobileTopo",
                        "MobileRodape"
                    ],
                    "type": "string"
                },
                "codigoFonte": {
                    "type": "string"
                },
                "termoBusca": {
                    "type": "string"
                },
                "exibeTodasBuscas": {
                    "type": "boolean"
                },
                "naoExibeBuscas": {
                    "type": "boolean"
                },
                "exibeTodosHotsites": {
                    "type": "boolean"
                },
                "hotsitesId": {
                    "type": "array",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            }
        },
        "Faturamento": {
            "type": "object",
            "properties": {
                "indicadorReceita": {
                    "format": "double",
                    "type": "number"
                },
                "indicadorPedido": {
                    "format": "int32",
                    "type": "integer"
                },
                "indicadorTicketMedio": {
                    "format": "double",
                    "type": "number"
                },
                "indicadorReceitaComparativo": {
                    "format": "double",
                    "type": "number"
                },
                "indicadorPedidoComparativo": {
                    "format": "int32",
                    "type": "integer"
                },
                "indicadorTicketMedioComparativo": {
                    "format": "double",
                    "type": "number"
                },
                "indicadorReceitaFormatado": {
                    "type": "string"
                },
                "indicadorPedidoFormatado": {
                    "type": "string"
                },
                "indicadorTicketMedioFormatado": {
                    "type": "string"
                },
                "indicadorReceitaComparativoFormatado": {
                    "type": "string"
                },
                "indicadorPedidoComparativoFormatado": {
                    "type": "string"
                },
                "indicadorTicketMedioComparativoFormatado": {
                    "type": "string"
                },
                "indicadorReceitaPorcentagem": {
                    "type": "string"
                },
                "indicadorPedidoPorcentagem": {
                    "type": "string"
                },
                "indicadorTicketMedioPorcentagem": {
                    "type": "string"
                }
            }
        },
        "GraficoFaturamento": {
            "type": "object",
            "properties": {
                "parceiroId": {
                    "format": "int32",
                    "type": "integer"
                },
                "parceiro": {
                    "type": "string"
                },
                "receitaPagos": {
                    "format": "double",
                    "type": "number"
                },
                "transacoesPagos": {
                    "format": "int32",
                    "type": "integer"
                },
                "valorMedioPagos": {
                    "format": "double",
                    "type": "number"
                },
                "usuarioEnderecoEstado": {
                    "type": "string"
                }
            }
        },
        "UltimosPedidos": {
            "type": "object",
            "properties": {
                "pedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "situacaoPedidoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "situacaoNome": {
                    "type": "string"
                },
                "data": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFormatado": {
                    "type": "string"
                },
                "hora": {
                    "type": "string"
                },
                "valorTotal": {
                    "type": "string"
                }
            }
        },
        "ProdutosMaisVendidos": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nomeProduto": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "receita": {
                    "type": "string"
                }
            }
        },
        "IndicadorCompradores": {
            "type": "object",
            "properties": {
                "indicadorComprador": {
                    "type": "string"
                }
            }
        },
        "IndicadorProdutoEstoque": {
            "type": "object",
            "properties": {
                "indicadorProdutoComEstoque": {
                    "type": "string"
                },
                "indicadorProdutoSemEstoque": {
                    "type": "string"
                }
            }
        },
        "IndicadorCarrinhosAbandonado": {
            "type": "object",
            "properties": {
                "indicadorCarrinhoAbandonado": {
                    "type": "string"
                }
            }
        },
        "GraficoFormaPagamento": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "cor": {
                    "type": "string"
                }
            }
        },
        "RelatorioDadosReceita": {
            "type": "object",
            "properties": {
                "tipoAgrupamento": {
                    "enum": [
                        "Hora",
                        "Dia",
                        "Semana",
                        "Mes",
                        "Ano"
                    ],
                    "type": "string"
                },
                "dados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DadosReceita"
                    }
                }
            }
        },
        "DadosReceita": {
            "type": "object",
            "properties": {
                "data": {
                    "format": "date-time",
                    "type": "string"
                },
                "pedidosCaptados": {
                    "format": "double",
                    "type": "number"
                },
                "pedidosPagos": {
                    "format": "double",
                    "type": "number"
                },
                "pedidosEnviados": {
                    "format": "double",
                    "type": "number"
                },
                "pedidosCancelados": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Evento": {
            "type": "object",
            "properties": {
                "eventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tipoEventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "userId": {
                    "format": "int64",
                    "type": "integer"
                },
                "enderecoEntregaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "data": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "titulo": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "disponivel": {
                    "type": "boolean"
                },
                "diasDepoisEvento": {
                    "format": "int32",
                    "type": "integer"
                },
                "diasAntesEvento": {
                    "format": "int32",
                    "type": "integer"
                },
                "urlLogoEvento": {
                    "type": "string"
                },
                "urlCapaEvento": {
                    "type": "string"
                },
                "proprietarioEvento": {
                    "type": "string"
                },
                "abaInfo01Habilitado": {
                    "type": "boolean"
                },
                "textoInfo01": {
                    "type": "string"
                },
                "conteudoInfo01": {
                    "type": "string"
                },
                "abaInfo02Habilitado": {
                    "type": "boolean"
                },
                "textoInfo02": {
                    "type": "string"
                },
                "conteudoInfo02": {
                    "type": "string"
                },
                "abaMensagemHabilitado": {
                    "type": "boolean"
                },
                "fotos": {
                    "type": "string"
                },
                "enumTipoListaPresenteId": {
                    "enum": [
                        "Default"
                    ],
                    "type": "string"
                },
                "enumTipoEntregaId": {
                    "enum": [
                        "EntregaAgendada",
                        "EntregaConformeCompraRealizada",
                        "Todos",
                        "Nenhum"
                    ],
                    "type": "string"
                },
                "eventoProdutoSelecionado": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventoProdutoSelecionadoPost"
                    }
                },
                "enderecoEvento": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnderecoEvento"
                    }
                }
            }
        },
        "EventoProdutoSelecionadoPost": {
            "type": "object",
            "properties": {
                "eventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "recebidoForaLista": {
                    "type": "boolean"
                },
                "removido": {
                    "type": "boolean"
                }
            }
        },
        "EnderecoEvento": {
            "type": "object",
            "properties": {
                "enderecoEventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "eventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "endereco": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "estado": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.EventoPost": {
            "description": "Contrato de envio de evento.",
            "required": [
                "tipoEventoId",
                "enderecoEntregaId",
                "titulo",
                "url",
                "data",
                "usuarioEmail",
                "urlLogo",
                "urlCapa",
                "proprietario",
                "abaInfo01Habilitado",
                "abaInfo02Habilitado",
                "enumTipoListaPresenteId",
                "enumTipoEntregaId",
                "enderecoEvento"
            ],
            "type": "object",
            "properties": {
                "tipoEventoId": {
                    "format": "int64",
                    "description": "Identificador do tipo de evento",
                    "type": "integer"
                },
                "enderecoEntregaId": {
                    "format": "int64",
                    "description": "Identificador do endereço de entrega",
                    "type": "integer"
                },
                "titulo": {
                    "description": "Titulo do evento",
                    "type": "string"
                },
                "url": {
                    "description": "Url",
                    "type": "string"
                },
                "data": {
                    "format": "date-time",
                    "description": "Data do Evento",
                    "type": "string"
                },
                "usuarioEmail": {
                    "description": "Email do usuário",
                    "type": "string"
                },
                "disponivel": {
                    "description": "Disponibilidade",
                    "type": "boolean"
                },
                "diasAntesEvento": {
                    "format": "int32",
                    "description": "Quantos dias antes do evento ele será exibido",
                    "type": "integer"
                },
                "diasDepoisEvento": {
                    "format": "int32",
                    "description": "Até quantos dias depois do evento ele será exibido",
                    "type": "integer"
                },
                "urlLogo": {
                    "description": "Url do Logo. (Base64)",
                    "type": "string"
                },
                "urlCapa": {
                    "description": "Url da Capa. (Base64)",
                    "type": "string"
                },
                "proprietario": {
                    "description": "Quem é o proprietario",
                    "type": "string"
                },
                "abaInfo01Habilitado": {
                    "description": "",
                    "type": "boolean"
                },
                "textoInfo01": {
                    "description": "",
                    "type": "string"
                },
                "conteudoInfo01": {
                    "description": "",
                    "type": "string"
                },
                "abaInfo02Habilitado": {
                    "type": "boolean"
                },
                "textoInfo02": {
                    "description": "",
                    "type": "string"
                },
                "conteudoInfo02": {
                    "description": "",
                    "type": "string"
                },
                "abaMensagemHabilitado": {
                    "description": "",
                    "type": "boolean"
                },
                "enumTipoListaPresenteId": {
                    "description": "",
                    "enum": [
                        "ListaPronta",
                        "ListaManual"
                    ],
                    "type": "string"
                },
                "enumTipoEntregaId": {
                    "description": "",
                    "enum": [
                        "EntregaAgendada",
                        "EntregaConformeCompraRealizada",
                        "Todos",
                        "Nenhum"
                    ],
                    "type": "string"
                },
                "eventoProdutoSelecionado": {
                    "description": "Produtos",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.EventoProdutoSelecionadoPost"
                    }
                },
                "enderecoEvento": {
                    "description": "Endereço do Evento",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.EnderecoEventoPost"
                    }
                }
            }
        },
        "NovoContratoPost.EventoProdutoSelecionadoPost": {
            "required": [
                "produtoVarianteId"
            ],
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "recebidoForaLista": {
                    "type": "boolean"
                },
                "removido": {
                    "type": "boolean"
                }
            }
        },
        "NovoContratoPost.EnderecoEventoPost": {
            "required": [
                "nome",
                "endereco",
                "cep",
                "numero",
                "bairro",
                "cidade",
                "estado"
            ],
            "type": "object",
            "properties": {
                "nome": {
                    "description": "Nome",
                    "type": "string"
                },
                "endereco": {
                    "description": "Nome",
                    "type": "string"
                },
                "cep": {
                    "description": "CEP",
                    "type": "string"
                },
                "numero": {
                    "description": "Numero",
                    "type": "string"
                },
                "bairro": {
                    "description": "Bairro",
                    "type": "string"
                },
                "cidade": {
                    "description": "Cidade",
                    "type": "string"
                },
                "estado": {
                    "description": "Estado",
                    "type": "string"
                }
            }
        },
        "NovoContratoPut.EventoPut": {
            "description": "Contrato de envio de evento.",
            "required": [
                "tipoEventoId",
                "enderecoEntregaId",
                "titulo",
                "data",
                "usuarioEmail",
                "urlLogo",
                "urlCapa",
                "proprietario",
                "abaInfo01Habilitado",
                "abaInfo02Habilitado",
                "enumTipoListaPresenteId",
                "enumTipoEntregaId",
                "enderecoEvento"
            ],
            "type": "object",
            "properties": {
                "tipoEventoId": {
                    "format": "int64",
                    "description": "Identificador do tipo de evento",
                    "type": "integer"
                },
                "enderecoEntregaId": {
                    "format": "int64",
                    "description": "Identificador do endereço de entrega",
                    "type": "integer"
                },
                "titulo": {
                    "description": "Titulo do evento",
                    "type": "string"
                },
                "url": {
                    "description": "Atributo obsoleto",
                    "type": "string"
                },
                "data": {
                    "format": "date-time",
                    "description": "Data do Evento",
                    "type": "string"
                },
                "usuarioEmail": {
                    "description": "Email do usuário",
                    "type": "string"
                },
                "disponivel": {
                    "description": "Disponibilidade",
                    "type": "boolean"
                },
                "diasAntesEvento": {
                    "format": "int32",
                    "description": "Quantos dias antes do evento ele será exibido",
                    "type": "integer"
                },
                "diasDepoisEvento": {
                    "format": "int32",
                    "description": "Até quantos dias depois do evento ele será exibido",
                    "type": "integer"
                },
                "urlLogo": {
                    "description": "Url do Logo. (Base64)",
                    "type": "string"
                },
                "urlCapa": {
                    "description": "Url da Capa. (Base64)",
                    "type": "string"
                },
                "proprietario": {
                    "description": "Quem é o proprietario",
                    "type": "string"
                },
                "abaInfo01Habilitado": {
                    "description": "",
                    "type": "boolean"
                },
                "textoInfo01": {
                    "description": "",
                    "type": "string"
                },
                "conteudoInfo01": {
                    "description": "",
                    "type": "string"
                },
                "abaInfo02Habilitado": {
                    "type": "boolean"
                },
                "textoInfo02": {
                    "description": "",
                    "type": "string"
                },
                "conteudoInfo02": {
                    "description": "",
                    "type": "string"
                },
                "abaMensagemHabilitado": {
                    "description": "",
                    "type": "boolean"
                },
                "enumTipoListaPresenteId": {
                    "description": "",
                    "enum": [
                        "ListaPronta",
                        "ListaManual"
                    ],
                    "type": "string"
                },
                "enumTipoEntregaId": {
                    "description": "",
                    "enum": [
                        "EntregaAgendada",
                        "EntregaConformeCompraRealizada",
                        "Todos",
                        "Nenhum"
                    ],
                    "type": "string"
                },
                "eventoProdutoSelecionado": {
                    "description": "Produtos",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPut.EventoProdutoSelecionadoPut"
                    }
                },
                "enderecoEvento": {
                    "description": "Endereço do Evento",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPut.EnderecoEventoPut"
                    }
                }
            }
        },
        "NovoContratoPut.EventoProdutoSelecionadoPut": {
            "required": [
                "produtoVarianteId"
            ],
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "recebidoForaLista": {
                    "type": "boolean"
                },
                "removido": {
                    "type": "boolean"
                }
            }
        },
        "NovoContratoPut.EnderecoEventoPut": {
            "required": [
                "nome",
                "endereco",
                "cep",
                "numero",
                "bairro",
                "cidade",
                "estado"
            ],
            "type": "object",
            "properties": {
                "nome": {
                    "description": "Nome",
                    "type": "string"
                },
                "endereco": {
                    "description": "Nome",
                    "type": "string"
                },
                "cep": {
                    "description": "CEP",
                    "type": "string"
                },
                "numero": {
                    "description": "Numero",
                    "type": "string"
                },
                "bairro": {
                    "description": "Bairro",
                    "type": "string"
                },
                "cidade": {
                    "description": "Cidade",
                    "type": "string"
                },
                "estado": {
                    "description": "Estado",
                    "type": "string"
                }
            }
        },
        "EventoProdutoSelecionadoGet": {
            "type": "object",
            "properties": {
                "eventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "recebidoForaLista": {
                    "type": "boolean"
                },
                "removido": {
                    "type": "boolean"
                }
            }
        },
        "Fabricante": {
            "type": "object",
            "properties": {
                "fabricanteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                },
                "nome": {
                    "type": "string"
                },
                "urlLogoTipo": {
                    "type": "string"
                },
                "urlLink": {
                    "type": "string"
                },
                "urlCarrossel": {
                    "type": "string"
                }
            }
        },
        "FabricantePost": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "urlLogoTipo": {
                    "type": "string"
                },
                "urlLink": {
                    "type": "string"
                },
                "urlCarrossel": {
                    "type": "string"
                }
            }
        },
        "FormaPagamento": {
            "type": "object",
            "properties": {
                "formaPagamentoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "nomeExibicao": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "FreteCompleto": {
            "type": "object",
            "properties": {
                "freteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "volumeMaximo": {
                    "format": "int32",
                    "type": "integer"
                },
                "pesoCubado": {
                    "format": "double",
                    "type": "number"
                },
                "entregaAgendadaConfiguracaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "linkRastreamento": {
                    "type": "string"
                },
                "ehAssinatura": {
                    "type": "boolean"
                },
                "larguraMaxima": {
                    "format": "int32",
                    "type": "integer"
                },
                "alturaMaxima": {
                    "format": "int32",
                    "type": "integer"
                },
                "comprimentoMaximo": {
                    "format": "int32",
                    "type": "integer"
                },
                "limiteMaximoDimensoes": {
                    "format": "int32",
                    "type": "integer"
                },
                "limitePesoCubado": {
                    "format": "double",
                    "type": "number"
                },
                "tempoMinimoDespacho": {
                    "format": "int32",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "valorMinimoProdutos": {
                    "format": "double",
                    "type": "number"
                },
                "cotacaoEmHoras": {
                    "type": "boolean"
                },
                "horarioCorte": {
                    "type": "string"
                },
                "prazoAdicional": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Frete": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "volumeMaximo": {
                    "format": "int32",
                    "type": "integer"
                },
                "pesoCubado": {
                    "format": "double",
                    "type": "number"
                },
                "entregaAgendadaConfiguracaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "linkRastreamento": {
                    "type": "string"
                },
                "ehAssinatura": {
                    "type": "boolean"
                },
                "larguraMaxima": {
                    "format": "int32",
                    "type": "integer"
                },
                "alturaMaxima": {
                    "format": "int32",
                    "type": "integer"
                },
                "comprimentoMaximo": {
                    "format": "int32",
                    "type": "integer"
                },
                "limiteMaximoDimensoes": {
                    "format": "int32",
                    "type": "integer"
                },
                "limitePesoCubado": {
                    "format": "double",
                    "type": "number"
                },
                "tempoMinimoDespacho": {
                    "format": "int32",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "valorMinimoProdutos": {
                    "format": "double",
                    "type": "number"
                },
                "cotacaoEmHoras": {
                    "type": "boolean"
                },
                "horarioCorte": {
                    "type": "string"
                },
                "prazoAdicional": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "FreteAtivo": {
            "type": "object",
            "properties": {
                "ativo": {
                    "type": "boolean"
                }
            }
        },
        "FreteDetalhe": {
            "type": "object",
            "properties": {
                "freteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "cepInicial": {
                    "format": "int32",
                    "type": "integer"
                },
                "cepFinal": {
                    "format": "int32",
                    "type": "integer"
                },
                "variacoesFreteDetalhe": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariacoesFreteDetalhe"
                    }
                }
            }
        },
        "VariacoesFreteDetalhe": {
            "type": "object",
            "properties": {
                "pesoInicial": {
                    "format": "double",
                    "type": "number"
                },
                "pesoFinal": {
                    "format": "double",
                    "type": "number"
                },
                "valorFrete": {
                    "format": "double",
                    "type": "number"
                },
                "prazoEntrega": {
                    "format": "int32",
                    "type": "integer"
                },
                "valorPreco": {
                    "format": "double",
                    "type": "number"
                },
                "valorPeso": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "FreteDetalhePost": {
            "type": "object",
            "properties": {
                "cepInicial": {
                    "format": "int32",
                    "type": "integer"
                },
                "cepFinal": {
                    "format": "int32",
                    "type": "integer"
                },
                "variacoesFreteDetalhe": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariacoesFreteDetalhe"
                    }
                }
            }
        },
        "JaimitoResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "prazo": {
                    "format": "int32",
                    "type": "integer"
                },
                "tabelaFreteId": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "produtos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JaimitoResponseProdutos"
                    }
                }
            }
        },
        "JaimitoResponseProdutos": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "JaimitoApiResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "prazo": {
                    "format": "int32",
                    "type": "integer"
                },
                "tabelaFreteId": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "centroDistribuicao": {
                    "format": "int32",
                    "type": "integer"
                },
                "produtos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JaimitoApiResponseProdutos"
                    }
                }
            }
        },
        "JaimitoApiResponseProdutos": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "JaimitoCriterioScore": {
            "type": "object",
            "properties": {
                "criterioScoreId": {
                    "format": "int32",
                    "type": "integer"
                },
                "criterio": {
                    "type": "string"
                },
                "menorMelhor": {
                    "type": "boolean"
                },
                "descricao": {
                    "type": "string"
                },
                "inativo": {
                    "type": "boolean"
                },
                "peso": {
                    "format": "double",
                    "type": "number"
                },
                "calculadoAutomatico": {
                    "type": "boolean"
                }
            }
        },
        "JaimitoCentroDistribuicaoScore": {
            "type": "object",
            "properties": {
                "criterioScoreId": {
                    "format": "int32",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "GestorScriptsGet": {
            "type": "object",
            "properties": {
                "scriptId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "posicao": {
                    "enum": [
                        "HeaderPrimeiraLinha",
                        "HeaderUltimaLinha",
                        "BodyPrimeiraLinha",
                        "BodyUltimaLinha",
                        "FooterPrimeiraLinha",
                        "FooterUltimeLinha"
                    ],
                    "type": "string"
                },
                "tipoPagina": {
                    "enum": [
                        "Todas",
                        "Home",
                        "Busca",
                        "Categoria",
                        "Fabricante",
                        "Estaticas",
                        "Produto",
                        "Carrinho"
                    ],
                    "type": "string"
                },
                "dataInicial": {
                    "format": "date-time",
                    "type": "string"
                },
                "datafinal": {
                    "format": "date-time",
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "prioridade": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ConteudoVersaoScript": {
            "type": "object",
            "properties": {
                "scriptId": {
                    "format": "int64",
                    "type": "integer"
                },
                "versaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "conteudo": {
                    "type": "string"
                }
            }
        },
        "VersaoGestorScript": {
            "type": "object",
            "properties": {
                "versaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "scriptId": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "identificadorPagina": {
                    "type": "string"
                },
                "publicado": {
                    "type": "boolean"
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "GrupoListaComprasPost": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "GrupoListaComprasPut": {
            "type": "object",
            "properties": {
                "grupoListaCompraId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "GrupoListaCompra": {
            "type": "object",
            "properties": {
                "grupoListaCompraId": {
                    "format": "int64",
                    "type": "integer"
                },
                "aliasHotSite": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "GrupoPersonalizacaoGet": {
            "type": "object",
            "properties": {
                "grupoPersonalizacaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "obrigatorio": {
                    "type": "boolean"
                }
            }
        },
        "GrupoPersonalizacaoProdutosGet": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                }
            }
        },
        "GrupoPersonalizacaoProdutosPost": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "Meta": {
            "type": "object",
            "properties": {
                "conteudo": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "httpEquiv": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "ListaComprasDadosBasicos": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "exibirQuantidade": {
                    "type": "boolean"
                },
                "ativo": {
                    "type": "boolean"
                },
                "exibirProdutosIndisponiveis": {
                    "type": "boolean"
                },
                "gruposListaCompraId": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "tituloDescricao": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "ListaComprasSelecionar": {
            "type": "object",
            "properties": {
                "listaCompraId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "exibirQuantidade": {
                    "type": "boolean"
                },
                "exibirProdutosIndisponiveis": {
                    "type": "boolean"
                },
                "grupoListaCompras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GrupoListaComprasSelecionar"
                    }
                },
                "detalhes": {
                    "$ref": "#/definitions/DetalheListaComprasSelecionar"
                },
                "imagens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListaComprasImagensSelecionar"
                    }
                },
                "produtos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListaComprasProdutosSelecionar"
                    }
                },
                "seos": {
                    "$ref": "#/definitions/ListaComprasSEOsSelecionar"
                }
            }
        },
        "GrupoListaComprasSelecionar": {
            "type": "object",
            "properties": {
                "grupoListaCompraId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "aliasHotSite": {
                    "type": "string"
                }
            }
        },
        "DetalheListaComprasSelecionar": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "ListaComprasImagensSelecionar": {
            "type": "object",
            "properties": {
                "listaCompraFotoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ListaComprasProdutosSelecionar": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "exibirParent": {
                    "type": "boolean"
                }
            }
        },
        "ListaComprasSEOsSelecionar": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "metatags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListaComprasSEOMetatagSelecionar"
                    }
                }
            }
        },
        "ListaComprasSEOMetatagSelecionar": {
            "type": "object",
            "properties": {
                "listaCompraSEOId": {
                    "format": "int64",
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "httpequiv": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "ListaComprasProdutosPost": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "exibirParent": {
                    "type": "boolean"
                }
            }
        },
        "ListaComprasSEOPost": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "metatags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListaCompraSEOMetatagPost"
                    }
                }
            }
        },
        "ListaCompraSEOMetatagPost": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "httpEquiv": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "ListaComprasSeoTitle": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "ListaComprasFotoPost": {
            "type": "object",
            "properties": {
                "base64": {
                    "type": "string"
                },
                "formato": {
                    "type": "string"
                }
            }
        },
        "ListaComprasImagemOrdem": {
            "type": "object",
            "properties": {
                "listaComprasFotoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Loja": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "urlSite": {
                    "type": "string"
                },
                "urlCarrinho": {
                    "type": "string"
                }
            }
        },
        "LojaFisicaCentroDistribuicao": {
            "type": "object",
            "properties": {
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "prazoEntrega": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "LojaFisica": {
            "type": "object",
            "properties": {
                "lojaId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "ddd": {
                    "format": "int32",
                    "type": "integer"
                },
                "telefone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "logradouro": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "estadoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "prazoEntrega": {
                    "format": "int32",
                    "type": "integer"
                },
                "prazoMaximoRetirada": {
                    "format": "int32",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                },
                "valido": {
                    "type": "boolean"
                },
                "textoComplementar": {
                    "type": "string"
                },
                "retirarNaLoja": {
                    "type": "boolean"
                },
                "latitude": {
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "type": "number"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "centroDistribuicao": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LojaFisicaCentroDistribuicao"
                    }
                }
            }
        },
        "Estado": {
            "type": "object",
            "properties": {
                "estadoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "sigla": {
                    "type": "string"
                },
                "regiao": {
                    "type": "string"
                }
            }
        },
        "MidiaInvestimentoApiModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "investimento": {
                    "format": "double",
                    "type": "number"
                },
                "nome": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                }
            }
        },
        "MidiaApiModel": {
            "type": "object",
            "properties": {
                "dias": {
                    "$ref": "#/definitions/Dias"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                }
            }
        },
        "Dias": {
            "type": "object",
            "properties": {
                "diaMidiaApiModel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiaMidiaApiModel"
                    }
                }
            }
        },
        "DiaMidiaApiModel": {
            "type": "object",
            "properties": {
                "dia": {
                    "format": "date-time",
                    "type": "string"
                },
                "investimento": {
                    "$ref": "#/definitions/Investimento"
                },
                "pedidos": {
                    "$ref": "#/definitions/Pedidos"
                },
                "roi": {
                    "$ref": "#/definitions/ROI"
                },
                "receita": {
                    "$ref": "#/definitions/Receita"
                },
                "visitas": {
                    "$ref": "#/definitions/Visitas"
                }
            }
        },
        "Investimento": {
            "type": "object",
            "properties": {
                "meta": {
                    "format": "double",
                    "type": "number"
                },
                "realizado": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Pedidos": {
            "type": "object",
            "properties": {
                "meta": {
                    "format": "double",
                    "type": "number"
                },
                "realizado": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "ROI": {
            "type": "object",
            "properties": {
                "meta": {
                    "format": "double",
                    "type": "number"
                },
                "realizado": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Receita": {
            "type": "object",
            "properties": {
                "meta": {
                    "format": "double",
                    "type": "number"
                },
                "realizado": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Visitas": {
            "type": "object",
            "properties": {
                "meta": {
                    "format": "double",
                    "type": "number"
                },
                "realizado": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Parceiro": {
            "required": [
                "nome",
                "tipoEscopo",
                "ativo"
            ],
            "type": "object",
            "properties": {
                "parceiroId": {
                    "format": "int64",
                    "type": "integer"
                },
                "marketPlaceId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "tabelaPrecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "portfolioId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tipoEscopo": {
                    "enum": [
                        "Aberto",
                        "Fechado",
                        "PorCliente"
                    ],
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "isMarketPlace": {
                    "type": "boolean"
                },
                "origem": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "nomeMarketplace": {
                    "type": "string"
                }
            }
        },
        "ParceiroPost": {
            "required": [
                "nome",
                "tipoEscopo",
                "ativo"
            ],
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "tabelaPrecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "portfolioId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tipoEscopo": {
                    "enum": [
                        "Aberto",
                        "Fechado",
                        "PorCliente"
                    ],
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "isMarketPlace": {
                    "type": "boolean"
                },
                "origem": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "nomeMarketplace": {
                    "type": "string"
                }
            }
        },
        "ResultadoUsuarioParceiro": {
            "type": "object",
            "properties": {
                "usuarioId": {
                    "format": "int64",
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "dataInicial": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFinal": {
                    "format": "date-time",
                    "type": "string"
                },
                "vinculoVitalicio": {
                    "type": "boolean"
                }
            }
        },
        "NovoContratoGet.Pedido": {
            "description": "Dados do pedido",
            "type": "object",
            "properties": {
                "pedidoId": {
                    "format": "int64",
                    "description": "Número do pedido",
                    "type": "integer"
                },
                "situacaoPedidoId": {
                    "format": "int64",
                    "description": "Id da situação atual do pedido",
                    "type": "integer"
                },
                "tipoRastreamentoPedido": {
                    "description": "Tipo do rastreamento do pedido",
                    "enum": [
                        "SemRastreamento",
                        "Pedido",
                        "ProdutoVariante"
                    ],
                    "type": "string"
                },
                "transacaoId": {
                    "format": "int64",
                    "description": "Id da transação do pedido",
                    "type": "integer"
                },
                "data": {
                    "format": "date-time",
                    "description": "Data do pedido",
                    "type": "string"
                },
                "dataPagamento": {
                    "format": "date-time",
                    "description": "Data de pagamento do pedido",
                    "type": "string"
                },
                "dataUltimaAtualizacao": {
                    "format": "date-time",
                    "description": "Data da última atualização de status do pedido",
                    "type": "string"
                },
                "valorFrete": {
                    "format": "double",
                    "description": "Valor do frete do pedido",
                    "type": "number"
                },
                "valorTotalPedido": {
                    "format": "double",
                    "description": "Valor total do pedido",
                    "type": "number"
                },
                "valorDesconto": {
                    "format": "double",
                    "description": "Valor do desconto do pedido",
                    "type": "number"
                },
                "valorDebitoCC": {
                    "format": "double",
                    "description": "Valor do desconto aplicado na conta corrente",
                    "type": "number"
                },
                "cupomDesconto": {
                    "description": "Número do cupom de desconto do pedido",
                    "type": "string"
                },
                "marketPlacePedidoId": {
                    "description": "Número interno do pedido do marketplace",
                    "type": "string"
                },
                "marketPlacePedidoSiteId": {
                    "description": "Número site do pedido do marketplace",
                    "type": "string"
                },
                "canalId": {
                    "format": "int64",
                    "description": "Id do canal de venda do pedido",
                    "type": "integer"
                },
                "canalNome": {
                    "description": "Nome do canal cadastrado no FOC",
                    "type": "string"
                },
                "canalOrigem": {
                    "description": "Nome do canal de venda do pedido",
                    "type": "string"
                },
                "retiradaLojaId": {
                    "format": "int32",
                    "description": "Id do local de retirada do pedido",
                    "type": "integer"
                },
                "isPedidoEvento": {
                    "description": "Se é um pedido de algum evento",
                    "type": "boolean"
                },
                "usuario": {
                    "$ref": "#/definitions/NovoContratoGet.Usuario",
                    "description": "Dados do cliente"
                },
                "pedidoEndereco": {
                    "description": "Dados dos endereços do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoEndereco"
                    }
                },
                "frete": {
                    "$ref": "#/definitions/NovoContratoGet.PedidoFrete",
                    "description": "Dados do frete do pedido"
                },
                "itens": {
                    "description": "Produtos do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProduto"
                    }
                },
                "assinatura": {
                    "description": "Dados da assinatura do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoAssinatura"
                    }
                },
                "pagamento": {
                    "description": "Dados de pagamento do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoPagamento"
                    }
                },
                "observacao": {
                    "description": "Dados de obervações do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoObservacao"
                    }
                },
                "valorCreditoFidelidade": {
                    "format": "double",
                    "description": "Valor do Credito de Fidelidade",
                    "type": "number"
                },
                "valido": {
                    "description": "Informa se o pedido foi validado",
                    "type": "boolean"
                },
                "valorSubTotalSemDescontos": {
                    "format": "double",
                    "description": "Valor do pedido sem considerar descontos. Irá retornar apenas se o cliente utilizar a API de dados externos",
                    "type": "number"
                },
                "pedidoSplit": {
                    "description": "Ids dos pedidos que fazem parte do Split de pedido",
                    "type": "array",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "usuarioMasterId": {
                    "format": "int64",
                    "type": "integer"
                },
                "metadados": {
                    "description": "Metadados que fazem parte do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoMetadado"
                    }
                },
                "transacaoPaiId": {
                    "format": "int64",
                    "description": "Id da Transação Pai do pedido",
                    "type": "integer"
                },
                "detalhesContaCorrente": {
                    "description": "Lista de ContaCorrentes vinculado ao Pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DetalhesContaCorrente"
                    }
                },
                "pedidoPai": {
                    "format": "int64",
                    "description": "Id do pedido pai",
                    "type": "integer"
                }
            }
        },
        "NovoContratoGet.Usuario": {
            "description": "Dados de um usuário de um pedido",
            "type": "object",
            "properties": {
                "usuarioId": {
                    "format": "int64",
                    "description": "Id do cliente",
                    "type": "integer"
                },
                "grupoInformacaoCadastral": {
                    "description": "Dados do grupo cadastral",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.UsuarioGrupoInformacaoCadastral"
                    }
                },
                "tipoPessoa": {
                    "description": "Tipo de cliente",
                    "enum": [
                        "Fisica",
                        "Juridica"
                    ],
                    "type": "string"
                },
                "origemContato": {
                    "description": "Origem do cliente",
                    "enum": [
                        "Google",
                        "Bing",
                        "Jornal",
                        "PatrocinioEsportivo",
                        "RecomendacaoAlguem",
                        "Revista",
                        "SiteInternet",
                        "Televisao",
                        "Outro",
                        "UsuarioImportadoViaAdmin",
                        "PayPalExpress"
                    ],
                    "type": "string"
                },
                "tipoSexo": {
                    "description": "Sexo do cliente",
                    "enum": [
                        "Undefined",
                        "Masculino",
                        "Feminino"
                    ],
                    "type": "string"
                },
                "nome": {
                    "description": "Nome do cliente",
                    "type": "string"
                },
                "cpf": {
                    "description": "Número CPF do cliente",
                    "type": "string"
                },
                "email": {
                    "description": "E-mail do cliente",
                    "type": "string"
                },
                "rg": {
                    "description": "RG do cliente",
                    "type": "string"
                },
                "telefoneResidencial": {
                    "description": "Número do telefone principal do cliente",
                    "type": "string"
                },
                "telefoneCelular": {
                    "description": "Número do telefone secudário do cliente",
                    "type": "string"
                },
                "telefoneComercial": {
                    "description": "Número do telefone comercial do cliente",
                    "type": "string"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "description": "Data de nascimento do cliente",
                    "type": "string"
                },
                "razaoSocial": {
                    "description": "Razão social da empresa",
                    "type": "string"
                },
                "cnpj": {
                    "description": "Número CNPJ da empresa",
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "description": "Inscrição estadual da empresa",
                    "type": "string"
                },
                "responsavel": {
                    "description": "Responsável pelo pedido",
                    "type": "string"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "description": "Data de cadastro do cliente",
                    "type": "string"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "description": "Data de atualização de cadastro do cliente",
                    "type": "string"
                },
                "revendedor": {
                    "description": "Se o cliente é um revendedor",
                    "type": "boolean"
                },
                "listaInformacaoCadastral": {
                    "description": "Dados do grupo cadastral",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.UsuarioGrupoInformacaoCadastral"
                    }
                }
            }
        },
        "NovoContratoGet.PedidoEndereco": {
            "description": "Dados do endereço do pedido",
            "type": "object",
            "properties": {
                "tipo": {
                    "description": "Tipo do endereço do pedido",
                    "enum": [
                        "Entrega",
                        "Cobranca"
                    ],
                    "type": "string"
                },
                "nome": {
                    "description": "Nome do endereço",
                    "type": "string"
                },
                "endereco": {
                    "description": "Endereço do pedido",
                    "type": "string"
                },
                "numero": {
                    "description": "Número do endereço do pedido",
                    "type": "string"
                },
                "complemento": {
                    "description": "Complemento do endereço do pedido",
                    "type": "string"
                },
                "referencia": {
                    "description": "Referência do endereço do pedido",
                    "type": "string"
                },
                "cep": {
                    "description": "CEP do endereço do pedido",
                    "type": "string"
                },
                "tipoLogradouro": {
                    "description": "Tipo do logradouro endereço do pedido",
                    "type": "string"
                },
                "logradouro": {
                    "description": "Logradouro do endereço do pedido",
                    "type": "string"
                },
                "bairro": {
                    "description": "Bairro do endereço do pedido",
                    "type": "string"
                },
                "cidade": {
                    "description": "Cidade do endereço do pedido",
                    "type": "string"
                },
                "estado": {
                    "description": "Estado do endereço do pedido",
                    "type": "string"
                },
                "pais": {
                    "description": "País endereço do pedido",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoFrete": {
            "description": "Dados do frete do pedido",
            "type": "object",
            "properties": {
                "freteContratoId": {
                    "format": "int64",
                    "description": "Id do contrato do frete do pedido",
                    "type": "integer"
                },
                "freteContrato": {
                    "description": "Nome do Frete",
                    "type": "string"
                },
                "referenciaConector": {
                    "description": "Referencia do Conector",
                    "type": "string"
                },
                "valorFreteEmpresa": {
                    "format": "double",
                    "description": "Valor do frete do pedido para a empresa",
                    "type": "number"
                },
                "valorFreteCliente": {
                    "format": "double",
                    "description": "Valor do frete do pedido para o cliente",
                    "type": "number"
                },
                "peso": {
                    "format": "double",
                    "description": "Peso do frete do pedido",
                    "type": "number"
                },
                "pesoCobrado": {
                    "format": "double",
                    "description": "Peso cobrado do frete do pedido",
                    "type": "number"
                },
                "volume": {
                    "format": "double",
                    "description": "Volume do frete do pedido",
                    "type": "number"
                },
                "volumeCobrado": {
                    "format": "double",
                    "description": "Volume cobrado do frete do pedido",
                    "type": "number"
                },
                "prazoEnvio": {
                    "format": "int32",
                    "description": "Número do prazo em dias de envio do pedido",
                    "type": "integer"
                },
                "prazoHorasEnvio": {
                    "format": "int32",
                    "description": "Número do prazo em horas de envio do pedido",
                    "type": "integer"
                },
                "prazoEnvioTexto": {
                    "description": "Descrição do prazo de envio do pedido",
                    "type": "string"
                },
                "retiradaLojaId": {
                    "format": "int64",
                    "description": "Id da retirada da loja",
                    "type": "integer"
                },
                "centrosDistribuicao": {
                    "description": "Dados dos centros de distribuições do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoFreteCentroDistribuicao"
                    }
                },
                "servico": {
                    "$ref": "#/definitions/NovoContratoGet.PedidoFreteServico",
                    "description": "Dados do serviço de frete do pedido (Quando utilizado Intelipost/Axado)"
                },
                "retiradaAgendada": {
                    "$ref": "#/definitions/NovoContratoGet.PedidoFreteRetiradaAgendada",
                    "description": "Dados da retirada agendada do pedido"
                },
                "agendamento": {
                    "$ref": "#/definitions/NovoContratoGet.PedidoFreteAgendamento",
                    "description": "Dados da entrega selecionado pelo cliente"
                },
                "informacoesAdicionais": {
                    "description": "Dados das informaçãoes adicionais do frete",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoFreteInformacoesAdicionais"
                    }
                }
            }
        },
        "NovoContratoGet.PedidoProduto": {
            "description": "Produtos do pedido",
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "description": "Id do produto variante do pedido",
                    "type": "integer"
                },
                "sku": {
                    "description": "SKU do produto do pedido",
                    "type": "string"
                },
                "ean": {
                    "description": "EAN do produto do pedido",
                    "type": "string"
                },
                "nome": {
                    "description": "Nome do produto do pedido",
                    "type": "string"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "Quantidade do produto do pedido",
                    "type": "integer"
                },
                "precoCusto": {
                    "format": "double",
                    "description": "Preço de custo do produto do pedido",
                    "type": "number"
                },
                "precoVenda": {
                    "format": "double",
                    "description": "Preço de vendo do produto do pedido",
                    "type": "number"
                },
                "isBrinde": {
                    "description": "Se o produto é brinde",
                    "type": "boolean"
                },
                "valorAliquota": {
                    "format": "double",
                    "description": "Valor da alíquota do produto",
                    "type": "number"
                },
                "isMarketPlace": {
                    "description": "Se é um produto de marketplace",
                    "type": "boolean"
                },
                "precoPor": {
                    "format": "double",
                    "description": "\"PrecoPor\" do produto do pedido",
                    "type": "number"
                },
                "desconto": {
                    "format": "double",
                    "description": "\"Desconto\" do produto do pedido",
                    "type": "number"
                },
                "totais": {
                    "$ref": "#/definitions/NovoContratoGet.PedidoProdutoPrecoTotais",
                    "description": "Preços calculado (preço base * quantidade)"
                },
                "ajustes": {
                    "description": "Dados de ajustes de preço do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoAjuste"
                    }
                },
                "centroDistribuicao": {
                    "description": "Dados de centro de distribuição do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoCentroDistribuicao"
                    }
                },
                "valoresAdicionais": {
                    "description": "Dados de valores adicionais do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoValoresAdicionais"
                    }
                },
                "atributos": {
                    "description": "Dados de atributos do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoAtributo"
                    }
                },
                "embalagens": {
                    "description": "Dados de embalagem do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoEmbalagem"
                    }
                },
                "personalizacoes": {
                    "description": "Dados de personalização do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoPersonalizacao"
                    }
                },
                "frete": {
                    "description": "Dados de frete do produto (Obsoleto: Utilizar o frete do pedido.)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoFrete"
                    }
                },
                "dadosProdutoEvento": {
                    "$ref": "#/definitions/NovoContratoGet.DadosEventoPedidoProdutoAPI",
                    "description": "Dados de evento do produto"
                },
                "formulas": {
                    "description": "Dados de fórmulas de aliquotas do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoFormula"
                    }
                },
                "seller": {
                    "$ref": "#/definitions/NovoContratoGet.PedidoProdutoSeller",
                    "description": "Dados do seller do produto"
                },
                "metadados": {
                    "description": "Dados dos metadados do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoMetadado"
                    }
                },
                "situacaoPedidoProdutoId": {
                    "format": "int32",
                    "description": "Dados da situacao do produto",
                    "type": "integer"
                },
                "imagens": {
                    "description": "Dados da imagem do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoImagem"
                    }
                },
                "categorias": {
                    "description": "Dados da categoria do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoProdutoCategoria"
                    }
                }
            }
        },
        "NovoContratoGet.PedidoAssinatura": {
            "description": "Dados da assinatura do pedido",
            "type": "object",
            "properties": {
                "assinaturaId": {
                    "format": "int64",
                    "description": "Número interno da assinatura",
                    "type": "integer"
                },
                "grupoAssinaturaId": {
                    "format": "int64",
                    "description": "Id do grupo de assinatura do pedido",
                    "type": "integer"
                },
                "tipoPeriodo": {
                    "description": "Tipo de período da assinatura do pedido",
                    "type": "string"
                },
                "tempoPeriodo": {
                    "format": "int32",
                    "description": "Tempo do período da assinatura do pedido",
                    "type": "integer"
                },
                "percentualDesconto": {
                    "format": "int32",
                    "description": "Percentual de desconto da assinatura do pedido",
                    "type": "integer"
                }
            }
        },
        "NovoContratoGet.PedidoPagamento": {
            "description": "Dados de pagamento do pedido",
            "type": "object",
            "properties": {
                "formaPagamentoId": {
                    "format": "int32",
                    "description": "Id da forma de pagamento do pedido",
                    "type": "integer"
                },
                "numeroParcelas": {
                    "format": "int32",
                    "description": "Número de parcelas da forma de pagamento do pedido",
                    "type": "integer"
                },
                "valorParcela": {
                    "format": "double",
                    "description": "Valor das parcelas da forma de pagamento do pedido",
                    "type": "number"
                },
                "valorDesconto": {
                    "format": "double",
                    "description": "Valor de desconto da forma de pagamento do pedido",
                    "type": "number"
                },
                "valorJuros": {
                    "format": "double",
                    "description": "Valor do juros da forma de pagamento do poedido",
                    "type": "number"
                },
                "valorTotal": {
                    "format": "double",
                    "description": "Valor total da forma de pagamento do pedido",
                    "type": "number"
                },
                "boleto": {
                    "$ref": "#/definitions/NovoContratoGet.PedidoPagamentoBoleto",
                    "description": "Dados do boleto"
                },
                "pix": {
                    "$ref": "#/definitions/NovoContratoGet.PedidoPagamentoPix",
                    "description": "Dados do Pix"
                },
                "cartaoCredito": {
                    "description": "Dados do cartão de crédito",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoPagamentoCartaoCredito"
                    }
                },
                "pagamentoStatus": {
                    "description": "Dados do status de pagamento",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoPagamentoStatus"
                    }
                },
                "informacoesAdicionais": {
                    "description": "Dados das informaçãoes adicionais da forma de pagemento",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoPagamentoInformacoesAdicionais"
                    }
                }
            }
        },
        "NovoContratoGet.PedidoObservacao": {
            "description": "Dados de obervações do pedido",
            "type": "object",
            "properties": {
                "observacao": {
                    "description": "Observação do pedido",
                    "type": "string"
                },
                "usuario": {
                    "description": "Usuário da observação do pedido",
                    "type": "string"
                },
                "data": {
                    "format": "date-time",
                    "description": "Data da observação do pedido",
                    "type": "string"
                },
                "publica": {
                    "description": "Informa se a informação é publica (se vai ser visualizada pelo cliente) ou privada (visualizada apenas pelo logista)",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoGet.PedidoMetadado": {
            "description": "Dados de metadado do pedido",
            "type": "object",
            "properties": {
                "chave": {
                    "description": "Chave do metadado do pedido",
                    "type": "string"
                },
                "valor": {
                    "description": "Valor do metadado do pedido",
                    "type": "string"
                }
            }
        },
        "DetalhesContaCorrente": {
            "type": "object",
            "properties": {
                "contaCorrenteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "tipoContaCorrenteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "descricaoTipoConta": {
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "referencias": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "NovoContratoGet.UsuarioGrupoInformacaoCadastral": {
            "description": "Dados de informações cadastral do cliente",
            "type": "object",
            "properties": {
                "chave": {
                    "description": "Nome do campo do cadastro",
                    "type": "string"
                },
                "valor": {
                    "description": "Valor inserido pelo cliente",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoFreteCentroDistribuicao": {
            "description": "Dados do centro de distribuição do pedido",
            "type": "object",
            "properties": {
                "freteContratoId": {
                    "format": "int64",
                    "description": "Id do contrato do frete do pedido",
                    "type": "integer"
                },
                "freteContrato": {
                    "description": "Nome do Frete",
                    "type": "string"
                },
                "valorFreteEmpresa": {
                    "format": "double",
                    "description": "Valor do frete do pedido para a empresa",
                    "type": "number"
                },
                "valorFreteCliente": {
                    "format": "double",
                    "description": "Valor do frete do pedido para o cliente",
                    "type": "number"
                },
                "peso": {
                    "format": "double",
                    "description": "Peso do frete do pedido",
                    "type": "number"
                },
                "pesoCobrado": {
                    "format": "double",
                    "description": "Peso cobrado do frete do pedido",
                    "type": "number"
                },
                "volume": {
                    "format": "double",
                    "description": "Volume do frete do pedido",
                    "type": "number"
                },
                "volumeCobrado": {
                    "format": "double",
                    "description": "Volume cobrado do frete do pedido",
                    "type": "number"
                },
                "prazoEnvio": {
                    "format": "int32",
                    "description": "Número do prazo de envio do pedido",
                    "type": "integer"
                },
                "prazoHorasEnvio": {
                    "format": "int32",
                    "description": "Número do prazo em horas de envio do pedido",
                    "type": "integer"
                },
                "prazoEnvioTexto": {
                    "description": "Descrição do prazo de envio do pedido",
                    "type": "string"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Id do centro de distribuição do pedido",
                    "type": "integer"
                },
                "cotacoesFilhas": {
                    "description": "Lista de cotações filhas",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.PedidoFreteCotacaoFilha"
                    }
                }
            }
        },
        "NovoContratoGet.PedidoFreteServico": {
            "description": "Dados do serviço de frete do pedido",
            "type": "object",
            "properties": {
                "servicoId": {
                    "format": "int64",
                    "description": "Id do serviço do frete do pedido",
                    "type": "integer"
                },
                "nome": {
                    "description": "Nome do serviço do frete do pedido",
                    "type": "string"
                },
                "transportadora": {
                    "description": "Nome da transportadora do pedido",
                    "type": "string"
                },
                "prazo": {
                    "format": "int32",
                    "description": "Prazo de entrega do pedido",
                    "type": "integer"
                },
                "servicoNome": {
                    "description": "Nome do serviço de frete do pedido",
                    "type": "string"
                },
                "preco": {
                    "format": "double",
                    "description": "Valor do serviço de entrega do pedido",
                    "type": "number"
                },
                "servicoTransporte": {
                    "format": "int32",
                    "description": "Nome do serviço de transporte do pedido",
                    "type": "integer"
                },
                "codigo": {
                    "format": "int32",
                    "description": "Código do serviço do frete do pedido",
                    "type": "integer"
                },
                "servicoMeta": {
                    "description": "Informação de serviço meta do frete do pedido",
                    "type": "string"
                },
                "custo": {
                    "format": "double",
                    "description": "Custo do serviço de entrega do pedido",
                    "type": "number"
                },
                "token": {
                    "description": "Toekn fornecido pelo serviço de entrega",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoFreteRetiradaAgendada": {
            "description": "Dados da retirada agendada do pedido",
            "type": "object",
            "properties": {
                "lojaId": {
                    "format": "int64",
                    "description": "Id da loja de retirada do pedido",
                    "type": "integer"
                },
                "retiradaData": {
                    "format": "date-time",
                    "description": "Data da retirado do pedido",
                    "type": "string"
                },
                "retiradaPeriodo": {
                    "description": "Periódo da retirada do pedido",
                    "type": "string"
                },
                "nome": {
                    "description": "Nome de quem retirou o pedido",
                    "type": "string"
                },
                "documento": {
                    "description": "Documento de quem retirou o pedido",
                    "type": "string"
                },
                "codigoRetirada": {
                    "description": "Código de retirada do pedido",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoFreteAgendamento": {
            "type": "object",
            "properties": {
                "de": {
                    "format": "date-time",
                    "description": "Inicio do período selecionado pelo cliente",
                    "type": "string"
                },
                "ate": {
                    "format": "date-time",
                    "description": "Fim do período selecionado pelo cliente",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoFreteInformacoesAdicionais": {
            "description": "Dados das informaçãoes adicionais do frete",
            "type": "object",
            "properties": {
                "chave": {
                    "description": "Nome da informação adicional",
                    "type": "string"
                },
                "valor": {
                    "description": "Descrição da informação adicional",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoPrecoTotais": {
            "type": "object",
            "properties": {
                "precoCusto": {
                    "format": "double",
                    "description": "Preço de custo calculado.",
                    "type": "number"
                },
                "precoVenda": {
                    "format": "double",
                    "description": "Preço de venda calculado.",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "description": "Preço por calculado.",
                    "type": "number"
                },
                "desconto": {
                    "format": "double",
                    "description": "Desconto calculado",
                    "type": "number"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoAjuste": {
            "description": "Dados de ajustes de preço do produto",
            "type": "object",
            "properties": {
                "tipo": {
                    "description": "Tipo de ajuste do valor do produto",
                    "enum": [
                        "Frete",
                        "Pricing",
                        "Atacarejo",
                        "Personalizacao",
                        "Embalagem",
                        "Promocao",
                        "PromocaoFrete",
                        "ContaCorrente",
                        "FormaPagamento",
                        "PromocaoProduto",
                        "TipoFreteProduto",
                        "Formula"
                    ],
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "description": "Valor do ajuste do produto",
                    "type": "number"
                },
                "observacao": {
                    "description": "Observação do ajuste do valor do produto",
                    "type": "string"
                },
                "nome": {
                    "description": "Nome do ajuste",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoCentroDistribuicao": {
            "description": "Dados de centro de distribuição do produto",
            "type": "object",
            "properties": {
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Id do centro de distribuição do produto",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "Quantidade de produto que sairão deste centro de sistribuição",
                    "type": "integer"
                },
                "situacaoProdutoId": {
                    "format": "int64",
                    "description": "Id da situação do produto",
                    "type": "integer"
                },
                "valorFreteEmpresa": {
                    "format": "double",
                    "description": "Valor do frete pago pela loja",
                    "type": "number"
                },
                "valorFreteCliente": {
                    "format": "double",
                    "description": "valor do frete pago pelo cliente",
                    "type": "number"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoValoresAdicionais": {
            "description": "Dados de valores adicionais do produto",
            "type": "object",
            "properties": {
                "tipo": {
                    "description": "Tipo de valor adicinal do produto",
                    "enum": [
                        "Acrescimo",
                        "Decrescimo"
                    ],
                    "type": "string"
                },
                "origem": {
                    "description": "Origem do valor adicinal do produto",
                    "type": "string"
                },
                "texto": {
                    "description": "Descrição do valor adicional do produto",
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "description": "Valor adicional do produto",
                    "type": "number"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoAtributo": {
            "description": "Dados de atributos do produto",
            "type": "object",
            "properties": {
                "produtoVarianteAtributoValor": {
                    "description": "Descrição do atributo do produto",
                    "type": "string"
                },
                "produtoVarianteAtributoNome": {
                    "description": "Nome do atributo do produto",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoEmbalagem": {
            "description": "Dados de embalagem do produto",
            "type": "object",
            "properties": {
                "tipoEmbalagemId": {
                    "format": "int64",
                    "description": "Id do tipo de embalagem",
                    "type": "integer"
                },
                "nomeTipoEmbalagem": {
                    "description": "Nome do tipo de embalagem do produto",
                    "type": "string"
                },
                "mensagem": {
                    "description": "Mensagem na embalagem do produto",
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "description": "Valor da embalagem do produto",
                    "type": "number"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoPersonalizacao": {
            "description": "Dados de personalização do produto",
            "type": "object",
            "properties": {
                "nomePersonalizacao": {
                    "description": "Nome da personaliza~ção do produto",
                    "type": "string"
                },
                "valorPersonalizacao": {
                    "description": "Texto da personalização do produto",
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "description": "Valor da personalização do produto",
                    "type": "number"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoFrete": {
            "description": "Dados de frete do produto (Obsoleto: Utilizar o frete do pedido.)",
            "type": "object",
            "properties": {
                "quantidade": {
                    "format": "int32",
                    "description": "Quantidade de itens do frete do produto",
                    "type": "integer"
                },
                "freteContratoId": {
                    "format": "int64",
                    "description": "Id do contrato do frete do pedido",
                    "type": "integer"
                },
                "freteContrato": {
                    "description": "Nome do Frete",
                    "type": "string"
                },
                "valorFreteEmpresa": {
                    "format": "double",
                    "description": "Valor do frete do pedido para a empresa",
                    "type": "number"
                },
                "valorFreteCliente": {
                    "format": "double",
                    "description": "Valor do frete do pedido para o cliente",
                    "type": "number"
                },
                "peso": {
                    "format": "double",
                    "description": "Peso do frete do pedido",
                    "type": "number"
                },
                "pesoCobrado": {
                    "format": "double",
                    "description": "Peso cobrado do frete do pedido",
                    "type": "number"
                },
                "volume": {
                    "format": "double",
                    "description": "Volume do frete do pedido",
                    "type": "number"
                },
                "volumeCobrado": {
                    "format": "double",
                    "description": "Volume cobrado do frete do pedido",
                    "type": "number"
                },
                "prazoEnvio": {
                    "format": "int32",
                    "description": "Número do prazo em dias de envio do pedido",
                    "type": "integer"
                },
                "prazoHorasEnvio": {
                    "format": "int32",
                    "description": "Número do prazo em horas de envio do pedido",
                    "type": "integer"
                },
                "prazoEnvioTexto": {
                    "description": "Descrição do prazo de envio do pedido",
                    "type": "string"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Id do centro de distribuição",
                    "type": "integer"
                }
            }
        },
        "NovoContratoGet.DadosEventoPedidoProdutoAPI": {
            "description": "Dados de evento do produto",
            "type": "object",
            "properties": {
                "tipoPresenteRecebimento": {
                    "description": "Tipo de recebimento do presente",
                    "enum": [
                        "None",
                        "Pendente",
                        "ReceberProduto",
                        "ReceberCredito"
                    ],
                    "type": "string"
                },
                "eventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "texto": {
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoFormula": {
            "type": "object",
            "properties": {
                "chaveAjuste": {
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "nome": {
                    "type": "string"
                },
                "expressao": {
                    "type": "string"
                },
                "expressaoInterpretada": {
                    "type": "string"
                },
                "endPoint": {
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoSeller": {
            "type": "object",
            "properties": {
                "sellerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "sellerNome": {
                    "type": "string"
                },
                "sellerPedidoId": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoMetadado": {
            "description": "Dados de metadado do produto",
            "type": "object",
            "properties": {
                "chave": {
                    "description": "Chave do metadado do produto",
                    "type": "string"
                },
                "valor": {
                    "description": "Valor do metadado do produto",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoImagem": {
            "description": "Dados da imagem do produto",
            "type": "object",
            "properties": {
                "nomeArquivo": {
                    "description": "Nome da imagem",
                    "type": "string"
                },
                "url": {
                    "description": "Url da imagem",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoProdutoCategoria": {
            "description": "Dados da categoria do produto",
            "type": "object",
            "properties": {
                "categoria": {
                    "description": "Nome da categoria",
                    "type": "string"
                },
                "hierarquia": {
                    "description": "Hierarquia da categoria",
                    "type": "string"
                },
                "categoriaPrincipal": {
                    "description": "Indicativo de Categoria Principal",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoGet.PedidoPagamentoBoleto": {
            "description": "Dados do boleto",
            "type": "object",
            "properties": {
                "urlBoleto": {
                    "description": "Url do boleto de pagamento",
                    "type": "string"
                },
                "codigoDeBarras": {
                    "description": "Número do código de barras do boleto",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoPagamentoPix": {
            "description": "Dados do boleto",
            "type": "object",
            "properties": {
                "qrCode": {
                    "description": "Código do QrCode",
                    "type": "string"
                },
                "qrCodeExpiracao": {
                    "format": "date-time",
                    "description": "Data de expiração do QrCode",
                    "type": "string"
                },
                "qrCodeUrl": {
                    "description": "Url do QrCode",
                    "type": "string"
                },
                "qrCodeUrlPagamento": {
                    "description": "Url de pagamento do QrCode",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoPagamentoCartaoCredito": {
            "description": "Dados do cartão de crédito",
            "type": "object",
            "properties": {
                "numeroCartao": {
                    "description": "Número criptografado do cartão de crédito",
                    "type": "string"
                },
                "nomeTitular": {
                    "description": "Nome do titular criptografado do cartão de crédito",
                    "type": "string"
                },
                "dataValidade": {
                    "description": "Dado de validade do cartão de crédito",
                    "type": "string"
                },
                "codigoSeguranca": {
                    "description": "Código de segurança criptografado do cartão de crédito",
                    "type": "string"
                },
                "documentoCartaoCredito": {
                    "description": "Documento criptografado do cartão de crédito",
                    "type": "string"
                },
                "token": {
                    "description": "Token do cartão crédito",
                    "type": "string"
                },
                "info": {
                    "description": "Informações adicionais",
                    "type": "string"
                },
                "bandeira": {
                    "description": "Bandeira do cartão",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoPagamentoStatus": {
            "description": "Dados do status de pagamento",
            "type": "object",
            "properties": {
                "numeroAutorizacao": {
                    "description": "Número de autorização de pagamento",
                    "type": "string"
                },
                "numeroComprovanteVenda": {
                    "description": "Número do comprovante de autorização de pagamento",
                    "type": "string"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "description": "Data da última atualização do status",
                    "type": "string"
                },
                "dataUltimoStatus": {
                    "format": "date-time",
                    "description": "Data do último status",
                    "type": "string"
                },
                "adquirente": {
                    "description": "Adquirente da autorização do pagamento",
                    "type": "string"
                },
                "tid": {
                    "description": "Auth da autorização do pagamento",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoPagamentoInformacoesAdicionais": {
            "description": "Dados das informaçãoes adicionais da forma de pagemento",
            "type": "object",
            "properties": {
                "chave": {
                    "description": "Nome da informação adicional",
                    "type": "string"
                },
                "valor": {
                    "description": "Descrição da informação adicional",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PedidoFreteCotacaoFilha": {
            "type": "object",
            "properties": {
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "freteContrato": {
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "volume": {
                    "format": "double",
                    "type": "number"
                },
                "tabelaFreteId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPost.PedidoPost": {
            "description": "Contrato de envio de pedido.",
            "required": [
                "situacaoPedidoId",
                "data",
                "valorJuros",
                "valorDesconto",
                "usuarioId",
                "enderecoId",
                "isMobile",
                "produtos",
                "fretes",
                "pagamento"
            ],
            "type": "object",
            "properties": {
                "pedidoId": {
                    "format": "int64",
                    "description": "Id do pedido que está sendo inserido. Caso seja informado deve ser um Id disponível na loja. Caso não seja informado um Id será gerado.",
                    "type": "integer"
                },
                "carrinhoId": {
                    "description": "Id do carrinho que foi utilizado no pedido.",
                    "type": "string"
                },
                "situacaoPedidoId": {
                    "format": "int32",
                    "description": "Define em qual situação está o pedido. A lista completa das possíveis situações se encontra no <a href=\"#resource_SituacaoPedido\">GET /situacoesPedido</a>",
                    "type": "integer"
                },
                "data": {
                    "format": "date-time",
                    "description": "Data em que o pedido foi realizado",
                    "type": "string"
                },
                "valorTotal": {
                    "format": "double",
                    "description": "Valor total do pedido. Se informado deve ser igual a soma de todos os valores inclusos no pedido (preços dos produtos, ajuses, frete, etc)",
                    "type": "number"
                },
                "valorJuros": {
                    "format": "double",
                    "description": "Informação do juros do pedido",
                    "type": "number"
                },
                "valorDesconto": {
                    "format": "double",
                    "description": "Informação de desconto do pedido",
                    "type": "number"
                },
                "usuarioId": {
                    "format": "int64",
                    "description": "Id do usuário que realizou a compra. É possível recuperar o Id de um usuário no <a href=\"#\">GET /usuarios</a>",
                    "type": "integer"
                },
                "enderecoId": {
                    "format": "int64",
                    "description": "Id do endereço do usuário que deve ser utilizado como endereço de entrega. Para buscar os endereços de um usuário utilize o <a href=\"#\">GET /usuarios/{usuarioId}/enderecos</a>",
                    "type": "integer"
                },
                "isMobile": {
                    "description": "Define se o pedido foi feito através de um dispositivo móvel ou não",
                    "type": "boolean"
                },
                "eventoId": {
                    "format": "int64",
                    "description": "Id do evento ao qual o pedido está vinculado (opcional)",
                    "type": "integer"
                },
                "produtos": {
                    "description": "Lista contendo os produtos do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.PedidoProdutoPost"
                    }
                },
                "fretes": {
                    "description": "Informações de frete do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.PedidoFretePost"
                    }
                },
                "pagamento": {
                    "$ref": "#/definitions/NovoContratoPost.PedidoPagamentoPost",
                    "description": "Informações de pagamento do pedido"
                },
                "canalId": {
                    "format": "int32",
                    "description": "ParceiroId vinculado ao pedido",
                    "type": "integer"
                },
                "omniChannel": {
                    "$ref": "#/definitions/NovoContratoPost.PedidoOmniChannelPost",
                    "description": "Dados do pedido no marketplace"
                },
                "transacaoId": {
                    "format": "int64",
                    "description": "Id da transação",
                    "type": "integer"
                },
                "observacao": {
                    "description": "Observação do pedido",
                    "type": "string"
                },
                "valido": {
                    "description": "Se um pedido é valido",
                    "type": "boolean"
                },
                "cupomDesconto": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "usuarioMaster": {
                    "format": "int64",
                    "description": "ID do usuário master que realizou o pedido, se houver.",
                    "type": "integer"
                },
                "metadados": {
                    "description": "Lista contendo todos os metadados do pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.Metadado"
                    }
                },
                "retiradaLojaId": {
                    "format": "int32",
                    "description": "Id da loja física na qual o pedido será retirado.",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPost.PedidoProdutoPost": {
            "description": "Representa um produto dentro de um pedido.",
            "required": [
                "produtoVarianteId",
                "quantidade",
                "precoVenda",
                "isBrinde"
            ],
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "description": "Id do produto variante que está vinculado a esse pedido.",
                    "type": "integer"
                },
                "quantidade": {
                    "$ref": "#/definitions/NovoContratoPost.PedidoProdutoQuantidade",
                    "description": "Define a quantidade do produto, podendo ser dividida por diferentes centros de distribuição."
                },
                "precoVenda": {
                    "format": "double",
                    "description": "Preço de venda do produto, sem adição ou subtração de valores.",
                    "type": "number"
                },
                "isBrinde": {
                    "description": "Define se esse produto é um brinde ou não.",
                    "type": "boolean"
                },
                "ajustes": {
                    "description": "Lista contendo todos os ajustes de preço do produto.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.PedidoProdutoAjuste"
                    }
                },
                "metadados": {
                    "description": "Lista contendo todos os metadados do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.Metadado"
                    }
                }
            }
        },
        "NovoContratoPost.PedidoFretePost": {
            "required": [
                "centroDistribuicaoId",
                "prazoEnvio",
                "valorFreteCliente"
            ],
            "type": "object",
            "properties": {
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Identificador do centro de distribuição de origem.",
                    "type": "integer"
                },
                "freteContratoId": {
                    "format": "int32",
                    "description": "Identificador do contrato de frete.",
                    "type": "integer"
                },
                "peso": {
                    "format": "double",
                    "description": "Peso em gramas (g) do frete calculado.",
                    "type": "number"
                },
                "pesoCobrado": {
                    "format": "double",
                    "description": "Peso em gramas cobrado do cliente.",
                    "type": "number"
                },
                "volume": {
                    "format": "double",
                    "description": "Volume em metro cúbico (m³) calculado.",
                    "type": "number"
                },
                "volumeCobrado": {
                    "format": "double",
                    "description": "Volume em metro cúbico (m³) cobrado do cliente.",
                    "type": "number"
                },
                "prazoEnvio": {
                    "format": "int32",
                    "description": "Prazo do envio do frete em dias úteis.",
                    "type": "integer"
                },
                "prazoHorasEnvio": {
                    "format": "int32",
                    "description": "Prazo do envio do frete em horas.",
                    "type": "integer"
                },
                "valorFreteEmpresa": {
                    "format": "double",
                    "description": "Valor do frete.",
                    "type": "number"
                },
                "valorFreteCliente": {
                    "format": "double",
                    "description": "Valor do frete cobrado do cliente.",
                    "type": "number"
                },
                "dataEntrega": {
                    "format": "date-time",
                    "description": "Data estimada da entrega do produto.",
                    "type": "string"
                },
                "informacoesAdicionais": {
                    "description": "Informações adicionais do frete",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.PedidoFreteInformacaoAdicionalPost"
                    }
                },
                "servico": {
                    "description": "Nome Servico caso seja intelipost",
                    "type": "string"
                },
                "transportadora": {
                    "description": "Transportadora caso seja intelipost",
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.PedidoPagamentoPost": {
            "required": [
                "formaPagamentoId",
                "numeroParcelas",
                "valorParcela"
            ],
            "type": "object",
            "properties": {
                "formaPagamentoId": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "numeroParcelas": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "valorParcela": {
                    "format": "double",
                    "description": "",
                    "type": "number"
                },
                "informacaoAdicional": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.PedidoPagamentoInformacaoAdicionalPost"
                    }
                }
            }
        },
        "NovoContratoPost.PedidoOmniChannelPost": {
            "description": "Representa um produto dentro de um pedido.",
            "type": "object",
            "properties": {
                "pedidoIdPublico": {
                    "description": "Id do pedido que o cliente vê no momento que fecha a compra.",
                    "type": "string"
                },
                "pedidoIdPrivado": {
                    "description": "Id interno do marketplace.",
                    "type": "string"
                },
                "integrador": {
                    "$ref": "#/definitions/NovoContratoPost.PedidoOmniChannelIntegradorPost",
                    "description": "Dados do pedido no integrador."
                }
            }
        },
        "NovoContratoPost.Metadado": {
            "description": "Metadado",
            "required": [
                "chave",
                "valor"
            ],
            "type": "object",
            "properties": {
                "chave": {
                    "description": "Chave do metadado",
                    "type": "string"
                },
                "valor": {
                    "description": "Valor do metadado",
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.PedidoProdutoQuantidade": {
            "description": "",
            "required": [
                "quantidadeTotal"
            ],
            "type": "object",
            "properties": {
                "quantidadeTotal": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "quantidadePorCentroDeDistribuicao": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.CentroDistribuicaoQuantidade"
                    }
                }
            }
        },
        "NovoContratoPost.PedidoProdutoAjuste": {
            "description": "",
            "required": [
                "tipo",
                "valor"
            ],
            "type": "object",
            "properties": {
                "tipo": {
                    "description": "Define o tipo do ajuste de valor de um produto contido em um pedido.",
                    "enum": [
                        "Frete",
                        "Pricing",
                        "Atacarejo",
                        "Personalizacao",
                        "Embalagem",
                        "Promocao",
                        "PromocaoFrete",
                        "ContaCorrente",
                        "FormaPagamento",
                        "PromocaoProduto",
                        "TipoFreteProduto",
                        "Formula"
                    ],
                    "type": "string"
                },
                "valor": {
                    "format": "double",
                    "description": "Define o valor do ajuste a ser aplicado no produto. O valor pode ser positivo ou negativo.",
                    "type": "number"
                },
                "observacao": {
                    "description": "",
                    "type": "string"
                },
                "nome": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.PedidoFreteInformacaoAdicionalPost": {
            "type": "object",
            "properties": {
                "chave": {
                    "type": "string"
                },
                "valor": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.PedidoPagamentoInformacaoAdicionalPost": {
            "type": "object",
            "properties": {
                "chave": {
                    "type": "string"
                },
                "valor": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.PedidoOmniChannelIntegradorPost": {
            "description": "Representa um produto dentro de um pedido.",
            "type": "object",
            "properties": {
                "nome": {
                    "description": "Nome do parceiro integrador.",
                    "type": "string"
                },
                "pedidoId": {
                    "description": "Numero do pedido dentro do integrador.",
                    "type": "string"
                },
                "pedidoUrl": {
                    "description": "Url do pedido dentro painel do integrador.",
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.CentroDistribuicaoQuantidade": {
            "description": "",
            "required": [
                "centroDistribuicaoId",
                "quantidade"
            ],
            "type": "object",
            "properties": {
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "HistoricoSituacaoPedido": {
            "type": "object",
            "properties": {
                "situacoes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PedidoSituacao"
                    }
                }
            }
        },
        "PedidoSituacao": {
            "type": "object",
            "properties": {
                "situacaoPedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "situacaoPedidoProdutoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "PedidoStatusRastreamento": {
            "required": [
                "pedidoId",
                "situacaoPedidoId",
                "centroDistribuicaoId"
            ],
            "type": "object",
            "properties": {
                "pedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "situacaoPedidoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "rastreamento": {
                    "type": "string"
                },
                "dataEvento": {
                    "format": "date-time",
                    "type": "string"
                },
                "numeroNotaFiscal": {
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "urlNFE": {
                    "type": "string"
                },
                "serieNFE": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "urlRastreamento": {
                    "type": "string"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PedidoSituacaoPut": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PedidoStatus": {
            "type": "object",
            "properties": {
                "situacaoPedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "notaFiscal": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataEnviado": {
                    "format": "date-time",
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "rastreamento": {
                    "type": "string"
                },
                "urlRastreamento": {
                    "type": "string"
                },
                "nomeTransportadora": {
                    "type": "string"
                },
                "produtos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PedidoStatusProdutoVariante"
                    }
                }
            }
        },
        "PedidoStatusProdutoVariante": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "situacaoProdutoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int64",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "PedidoStatusRastreamentoPedido": {
            "required": [
                "situacaoPedidoId",
                "centroDistribuicaoId",
                "numeroNotaFiscal"
            ],
            "type": "object",
            "properties": {
                "situacaoPedidoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "rastreamento": {
                    "type": "string"
                },
                "dataEvento": {
                    "format": "date-time",
                    "type": "string"
                },
                "numeroNotaFiscal": {
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "urlNFE": {
                    "type": "string"
                },
                "serieNFE": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "urlRastreamento": {
                    "type": "string"
                }
            }
        },
        "PedidoRastreamento": {
            "type": "object",
            "properties": {
                "pedidoRastreamentoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "notaFiscal": {
                    "type": "string"
                },
                "serieNF": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataEnviado": {
                    "format": "date-time",
                    "type": "string"
                },
                "urlNFE": {
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "rastreamento": {
                    "type": "string"
                },
                "urlRastreamento": {
                    "type": "string"
                },
                "urlRastreamentoContratofrete": {
                    "type": "string"
                },
                "transportadora": {
                    "type": "string"
                },
                "dataEntrega": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "NovoContratoPut.PedidoProdutoRastreamento": {
            "description": "Model que recebe os dados da requisição de atualização da data de entrega do pedido",
            "required": [
                "rastreamento",
                "dataEntrega"
            ],
            "type": "object",
            "properties": {
                "rastreamento": {
                    "description": "Código de verificação do transporte do produto",
                    "type": "string"
                },
                "dataEntrega": {
                    "format": "date-time",
                    "description": "Data que a entrega foi realizada",
                    "type": "string"
                }
            }
        },
        "PedidoRastreamentoPut": {
            "required": [
                "notaFiscal",
                "cfop",
                "dataEnviado",
                "chaveAcessoNFE",
                "transportadora"
            ],
            "type": "object",
            "properties": {
                "notaFiscal": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataEnviado": {
                    "format": "date-time",
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "rastreamento": {
                    "type": "string"
                },
                "urlRastreamento": {
                    "type": "string"
                },
                "transportadora": {
                    "type": "string"
                },
                "dataEntrega": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "PedidoRastreamentoParcialPut": {
            "type": "object",
            "properties": {
                "rastreamento": {
                    "type": "string"
                },
                "urlRastreamento": {
                    "type": "string"
                }
            }
        },
        "PedidoStatusRastreamentoProdutoVariante": {
            "required": [
                "situacaoPedidoId",
                "centroDistribuicaoId",
                "numeroNotaFiscal"
            ],
            "type": "object",
            "properties": {
                "situacaoPedidoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "rastreamento": {
                    "type": "string"
                },
                "dataEvento": {
                    "format": "date-time",
                    "type": "string"
                },
                "numeroNotaFiscal": {
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "urlNFE": {
                    "type": "string"
                },
                "serieNFE": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "urlRastreamento": {
                    "type": "string"
                }
            }
        },
        "PedidoRastreamentoProdutoGet": {
            "type": "object",
            "properties": {
                "pedidoRastreamentoProdutoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "pedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "pedidoProdutoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataInclusao": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataAlteracao": {
                    "format": "date-time",
                    "type": "string"
                },
                "notaFiscal": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataEnviado": {
                    "format": "date-time",
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "rastreamento": {
                    "type": "string"
                },
                "urlRastreamento": {
                    "type": "string"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "urlNFE": {
                    "type": "string"
                },
                "serieNFE": {
                    "type": "string"
                },
                "tipoPostagem": {
                    "type": "string"
                },
                "centroDistribuicao": {
                    "type": "string"
                },
                "transportadora": {
                    "type": "string"
                },
                "dataEntrega": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "PedidoRastreamentoProdutoPut": {
            "required": [
                "notaFiscal",
                "cfop",
                "dataEnviado",
                "chaveAcessoNFE",
                "transportadora"
            ],
            "type": "object",
            "properties": {
                "notaFiscal": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataEnviado": {
                    "format": "date-time",
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "rastreamento": {
                    "type": "string"
                },
                "urlRastreamento": {
                    "type": "string"
                },
                "transportadora": {
                    "type": "string"
                },
                "dataEntrega": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "PedidoRastreamentoProdutoParcialPut": {
            "type": "object",
            "properties": {
                "rastreamento": {
                    "type": "string"
                },
                "urlRastreamento": {
                    "type": "string"
                }
            }
        },
        "PedidoRastreamentoProduto": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "rastreamentos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PedidoRastreamentoProdutoDetalhe"
                    }
                }
            }
        },
        "PedidoRastreamentoProdutoDetalhe": {
            "type": "object",
            "properties": {
                "pedidoRastreamentoProdutoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "notaFiscal": {
                    "type": "string"
                },
                "cfop": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataEnviado": {
                    "format": "date-time",
                    "type": "string"
                },
                "chaveAcessoNFE": {
                    "type": "string"
                },
                "rastreamento": {
                    "type": "string"
                },
                "urlRastreamento": {
                    "type": "string"
                },
                "transportadora": {
                    "type": "string"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataEntrega": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "NovoContratoPut.PedidoProdutoSituacao": {
            "description": "Dados de uma situação do produto de um pedido",
            "type": "object",
            "properties": {
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Id do centro de distribuição do produto",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "Quantidade de produtos do centro de distribuição",
                    "type": "integer"
                },
                "situacaoPedidoProdutoId": {
                    "format": "int32",
                    "description": "Novo status da situação do produto (são os mesmo status do pedido)",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPut.ChangeOrder": {
            "description": "Dados de trocar de produtos de um pedido",
            "type": "object",
            "properties": {
                "produtoCancelado": {
                    "$ref": "#/definitions/NovoContratoPut.PedidoProdutoCanceladoChangeOrder",
                    "description": "Dados do produto à ser cancelado no pedido"
                },
                "produtosNovos": {
                    "description": "Dados dos novos produtos à serem inseridos no pedido",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPut.PedidoProdutoNovoChangeOrder"
                    }
                }
            }
        },
        "NovoContratoPut.PedidoProdutoCanceladoChangeOrder": {
            "description": "Dados de uma situação do produto de um pedido",
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int32",
                    "description": "Id do variante do produto",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Id do centro de distribuição do produto",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "Quantidade de produtos do centro de distribuição",
                    "type": "integer"
                },
                "situacaoPedidoProdutoId": {
                    "format": "int32",
                    "description": "Novo status da situação do produto (são os mesmo status do pedido)",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPut.PedidoProdutoNovoChangeOrder": {
            "description": "Dados do novo produto à ser inserido no pedido",
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int32",
                    "description": "Id do variante do produto",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "Quantidade de unidades",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Id do centro de distribuição do produto",
                    "type": "integer"
                },
                "metadados": {
                    "description": "Metadados do produto",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "isBrinde": {
                    "description": "Identificador de brinde. True = é brinde",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoGet.PedidoCartaoCredito": {
            "description": "Dados do pedido",
            "type": "object",
            "properties": {
                "nomeTitular": {
                    "description": "Nome do titular impresso no cartão de crédito",
                    "type": "string"
                },
                "numeroCartao": {
                    "description": "Número impresso no cartão de crédito",
                    "type": "string"
                },
                "codigoSeguranca": {
                    "description": "Código de segurança impresso no cartão",
                    "type": "string"
                },
                "dataValidade": {
                    "description": "Data de validade impresso no cartão",
                    "type": "string"
                },
                "documentoCartaoCredito": {
                    "description": "Documento de verificação do cartão de crédito",
                    "type": "string"
                },
                "token": {
                    "description": "Token de transação",
                    "type": "string"
                },
                "info": {
                    "description": "Informações adicionais",
                    "type": "string"
                }
            }
        },
        "PedidoNaoIntegrado": {
            "type": "object",
            "properties": {
                "pedidoId": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "ChangeSellerCompleto": {
            "type": "object",
            "properties": {
                "cotacao": {
                    "format": "uuid",
                    "type": "string"
                },
                "responsavel": {
                    "type": "string"
                }
            }
        },
        "ChangeSellerDTO": {
            "type": "object",
            "properties": {
                "sucesso": {
                    "type": "boolean"
                },
                "mensagem": {
                    "type": "string"
                },
                "pedidos": {
                    "type": "array",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            }
        },
        "Estorno": {
            "type": "object",
            "properties": {
                "valor": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "ChangeOrder": {
            "type": "object",
            "properties": {
                "usuarioId": {
                    "format": "int64",
                    "type": "integer"
                },
                "creditoContaCorrente": {
                    "type": "boolean"
                },
                "produtosNovos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PedidoProdutoNovoChangeOrder"
                    }
                },
                "produtosCancelados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PedidoProdutoCanceladoChangeOrder"
                    }
                }
            }
        },
        "PedidoProdutoNovoChangeOrder": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "precoPor": {
                    "format": "double",
                    "type": "number"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PedidoProdutoCanceladoChangeOrder": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "NovoContratoGet.Portfolio": {
            "type": "object",
            "properties": {
                "portfolioId": {
                    "format": "int64",
                    "description": "Identificador do portfolio",
                    "type": "integer"
                },
                "nome": {
                    "description": "Nome do portfolio",
                    "type": "string"
                },
                "ativo": {
                    "description": "Status do portfolio (ativo ou inativo)",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoPost.PortfolioPost": {
            "required": [
                "nome"
            ],
            "type": "object",
            "properties": {
                "nome": {
                    "description": "Nome do portfolio",
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.PortfolioProduto": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "description": "Id do produto",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPut.PortfolioProduto": {
            "required": [
                "produtoId"
            ],
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "description": "Id do produto",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPut.PortfolioStatus": {
            "required": [
                "ativo"
            ],
            "type": "object",
            "properties": {
                "ativo": {
                    "description": "Status do portfolio (ativo ou inativo)",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoGet.Produto": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "description": "Id do variante do produto",
                    "type": "integer"
                },
                "produtoId": {
                    "format": "int64",
                    "description": "Id do produto do variante",
                    "type": "integer"
                },
                "idPaiExterno": {
                    "description": "Representa o ProdutoId agrupador por variante",
                    "type": "string"
                },
                "idVinculoExterno": {
                    "description": "Representa o ParentId agrupador por parent",
                    "type": "string"
                },
                "sku": {
                    "description": "Sku do produto",
                    "type": "string"
                },
                "nome": {
                    "description": "Nome do produto variante",
                    "type": "string"
                },
                "nomeProdutoPai": {
                    "description": "Nome do produto (pai do variante)",
                    "type": "string"
                },
                "urlProduto": {
                    "description": "Url do produto",
                    "type": "string"
                },
                "exibirMatrizAtributos": {
                    "description": "Tipo de exibição da matriz de atributos",
                    "enum": [
                        "Sim",
                        "Nao",
                        "Neutro"
                    ],
                    "type": "string"
                },
                "contraProposta": {
                    "description": "Se o produto aceita contra proposta",
                    "type": "boolean"
                },
                "fabricante": {
                    "description": "Nome do fabricante",
                    "type": "string"
                },
                "autor": {
                    "description": "Nome do autor",
                    "type": "string"
                },
                "editora": {
                    "description": "Nome da editora",
                    "type": "string"
                },
                "colecao": {
                    "description": "Nome da coleção",
                    "type": "string"
                },
                "genero": {
                    "description": "Nome do gênero",
                    "type": "string"
                },
                "precoCusto": {
                    "format": "double",
                    "description": "Preço de custo do produto variante",
                    "type": "number"
                },
                "precoDe": {
                    "format": "double",
                    "description": "\"Preço De\" do produto variante",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "description": "\"Preço Por\" de venda do produto variante",
                    "type": "number"
                },
                "fatorMultiplicadorPreco": {
                    "format": "double",
                    "description": "Fator multiplicador que gera o preço de exibição do produto. Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no \"PrecoPor\". (1 por padrão)",
                    "type": "number"
                },
                "prazoEntrega": {
                    "format": "int32",
                    "description": "Prazo de entrega do produto variante",
                    "type": "integer"
                },
                "valido": {
                    "description": "Define se um produto variante é valido ou não",
                    "type": "boolean"
                },
                "exibirSite": {
                    "description": "Define se um produto deve ser exibido no site",
                    "type": "boolean"
                },
                "freteGratis": {
                    "description": "Define a qual regra de calculo de frete o produto vai pertencer",
                    "enum": [
                        "Sempre",
                        "Nunca",
                        "Neutro",
                        "Desconsiderar_Regras"
                    ],
                    "type": "string"
                },
                "trocaGratis": {
                    "description": "Define se o produto variante tem troca grátis",
                    "type": "boolean"
                },
                "peso": {
                    "format": "double",
                    "description": "Peso do produto variante",
                    "type": "number"
                },
                "altura": {
                    "format": "double",
                    "description": "Altura do produto variante",
                    "type": "number"
                },
                "comprimento": {
                    "format": "double",
                    "description": "Comprimento do produto variante",
                    "type": "number"
                },
                "largura": {
                    "format": "double",
                    "description": "Largura do produto variante",
                    "type": "number"
                },
                "garantia": {
                    "format": "int32",
                    "description": "Define se o produto variante tem garantia",
                    "type": "integer"
                },
                "isTelevendas": {
                    "description": "Define se o produto contém televendas",
                    "type": "boolean"
                },
                "ean": {
                    "description": "EAN do produto variante",
                    "type": "string"
                },
                "localizacaoEstoque": {
                    "description": "Localização no estoque do produto variante",
                    "type": "string"
                },
                "listaAtacado": {
                    "description": "Dados de atacado do produto variante",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.Atacado"
                    }
                },
                "estoque": {
                    "description": "Lista de estoque/centro de distribuição do produto. Obrigatório se valido for true",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.Estoque"
                    }
                },
                "atributos": {
                    "description": "Atributos do produto variante",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.ProdutoAtributoSelecionar"
                    }
                },
                "quantidadeMaximaCompraUnidade": {
                    "format": "int32",
                    "description": "Quantidade máxima de compra do produto variante",
                    "type": "integer"
                },
                "quantidadeMinimaCompraUnidade": {
                    "format": "int32",
                    "description": "Quantidade mínima de compra do produto variante",
                    "type": "integer"
                },
                "condicao": {
                    "description": "Condição do produto variante",
                    "enum": [
                        "Novo",
                        "Usado",
                        "Renovado",
                        "Danificado"
                    ],
                    "type": "string"
                },
                "informacoes": {
                    "description": "Informações do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.ProdutoInformacaoCompleta"
                    }
                },
                "tabelasPreco": {
                    "description": "Tabelas de preço do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.ProdutoVariantePrecoTabelaPreco"
                    }
                },
                "dataCriacao": {
                    "format": "date-time",
                    "description": "Data de criação do produto variante",
                    "type": "string"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "description": "Data de atualização do produto variante",
                    "type": "string"
                },
                "urlVideo": {
                    "description": "Url do vídeo do Produto",
                    "type": "string"
                },
                "spot": {
                    "description": "Se o produto aparece no Spot",
                    "type": "boolean"
                },
                "paginaProduto": {
                    "description": "Se o produto aparece na Url",
                    "type": "boolean"
                },
                "marketplace": {
                    "description": "Se o produto aparece no Marketplace",
                    "type": "boolean"
                },
                "somenteParceiros": {
                    "description": "Se o produto aparece somente para Parceiros",
                    "type": "boolean"
                },
                "reseller": {
                    "$ref": "#/definitions/Reseller",
                    "description": "Reseller do Produto"
                },
                "buyBox": {
                    "description": "Se o produto deve ser agrupado por EAN",
                    "type": "boolean"
                },
                "consumo": {
                    "$ref": "#/definitions/NovoContratoPost.ConsumoProduto",
                    "description": "Dados de consumo de produto e se deve enviar os dias de consumo por e-mail"
                },
                "prazoValidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "parentId": {
                    "format": "int64",
                    "type": "integer"
                },
                "urlImagem": {
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.Atacado": {
            "type": "object",
            "properties": {
                "precoPor": {
                    "format": "double",
                    "description": "Preco Por do item por atacado",
                    "type": "number"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "Quanidade para compra de atacado",
                    "type": "integer"
                }
            }
        },
        "NovoContratoGet.Estoque": {
            "type": "object",
            "properties": {
                "estoqueFisico": {
                    "format": "int32",
                    "description": "Estoque fisíco do produto",
                    "type": "integer"
                },
                "estoqueReservado": {
                    "format": "int32",
                    "description": "Estoque reservado do produto",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Id do centro de distribuição do estoque do produto",
                    "type": "integer"
                },
                "alertaEstoque": {
                    "format": "int32",
                    "description": "Quantidade do produto que irá disparar alertas de estoque",
                    "type": "integer"
                }
            }
        },
        "NovoContratoGet.ProdutoAtributoSelecionar": {
            "type": "object",
            "properties": {
                "tipoAtributo": {
                    "description": "Tipo do atributo",
                    "enum": [
                        "Selecao",
                        "Filtro",
                        "Comparacao",
                        "Configuracao",
                        "ExclusivoGoogle"
                    ],
                    "type": "string"
                },
                "isFiltro": {
                    "description": "Define se o atributo é filtro",
                    "type": "boolean"
                },
                "nome": {
                    "description": "Define o nome do atributo",
                    "type": "string"
                },
                "valor": {
                    "description": "Define o valor do atributo",
                    "type": "string"
                },
                "exibir": {
                    "description": "Define se o atributo deverá ser exibido",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoGet.ProdutoInformacaoCompleta": {
            "type": "object",
            "properties": {
                "informacaoId": {
                    "format": "int64",
                    "description": "Id da informação do produto",
                    "type": "integer"
                },
                "titulo": {
                    "description": "Titulo da informação",
                    "type": "string"
                },
                "texto": {
                    "description": "Conteúdo da informação",
                    "type": "string"
                },
                "tipoInformacao": {
                    "description": "Tipo da informação",
                    "enum": [
                        "Informacoes",
                        "Beneficios",
                        "Especificacoes",
                        "DadosTecnicos",
                        "Composicao",
                        "ModoDeUsar",
                        "Cuidados",
                        "ItensInclusos",
                        "Dicas",
                        "Video",
                        "Descricao",
                        "ValorReferente",
                        "PopUpReferente",
                        "Prescricao",
                        "TabelaDeMedidas",
                        "Spot",
                        "Sinopse",
                        "Carrinho"
                    ],
                    "type": "string"
                },
                "exibirSite": {
                    "description": "Tipo da informação",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoGet.ProdutoVariantePrecoTabelaPreco": {
            "type": "object",
            "properties": {
                "tabelaPrecoId": {
                    "format": "int64",
                    "description": "Identificador da tabela de preço",
                    "type": "integer"
                },
                "nome": {
                    "description": "Nome da tabela de preço",
                    "type": "string"
                },
                "precoDe": {
                    "format": "double",
                    "description": "\"PrecoDe\" da tabela de preço",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "description": "PrecoPor\" da tabela de preço",
                    "type": "number"
                }
            }
        },
        "Reseller": {
            "type": "object",
            "properties": {
                "resellerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "razaoSocial": {
                    "type": "string"
                },
                "centroDistribuicaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                },
                "ativacaoAutomaticaProdutos": {
                    "type": "boolean"
                },
                "autonomia": {
                    "type": "boolean"
                },
                "buyBox": {
                    "type": "boolean"
                },
                "nomeMarketPlace": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.ConsumoProduto": {
            "type": "object",
            "properties": {
                "quantidadeDias": {
                    "format": "int32",
                    "type": "integer"
                },
                "enviarEmail": {
                    "type": "boolean"
                }
            }
        },
        "NovoContratoPost.ProdutoPost": {
            "description": "",
            "required": [
                "sku",
                "nome",
                "fabricante",
                "precoPor",
                "valido",
                "exibirSite",
                "freteGratis",
                "peso",
                "altura",
                "comprimento",
                "largura"
            ],
            "type": "object",
            "properties": {
                "idPaiExterno": {
                    "description": "Representa o ProdutoId agrupador por variante",
                    "type": "string"
                },
                "idVinculoExterno": {
                    "description": "Representa o ParentId agrupador por parent",
                    "type": "string"
                },
                "sku": {
                    "description": "(Max Length: 50)\r\n<para>Sku do produto</para>",
                    "type": "string"
                },
                "nome": {
                    "description": "(Max Length: 300)\r\n<para>Nome do produto variante</para>",
                    "type": "string"
                },
                "nomeProdutoPai": {
                    "description": "Nome do produto (pai do variante)",
                    "type": "string"
                },
                "exibirMatrizAtributos": {
                    "description": "Tipo de exibição da matriz de atributos",
                    "enum": [
                        "Sim",
                        "Nao",
                        "Neutro"
                    ],
                    "type": "string"
                },
                "contraProposta": {
                    "description": "Se o produto aceita contra proposta",
                    "type": "boolean"
                },
                "fabricante": {
                    "description": "(Max Length: 100)\r\n<para>Nome do fabricante</para>",
                    "type": "string"
                },
                "autor": {
                    "description": "(Max Length: 500)\r\n<para>Nome do autor</para>",
                    "type": "string"
                },
                "editora": {
                    "description": "(Max Length: 100)\r\n<para>Nome da editora</para>",
                    "type": "string"
                },
                "colecao": {
                    "description": "(Max Length: 100)\r\n<para>Nome da coleção</para>",
                    "type": "string"
                },
                "genero": {
                    "description": "(Max Length: 100)\r\n<para>Nome do gênero</para>",
                    "type": "string"
                },
                "precoCusto": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Preço de custo do produto variante</para>",
                    "type": "number"
                },
                "precoDe": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>\"Preço De\" do produto variante</para>",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>\"Preço Por\" de venda do produto variante</para>",
                    "type": "number"
                },
                "fatorMultiplicadorPreco": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Fator multiplicador que gera o preço de exibição do produto.</para><para>Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no \"PrecoPor\". (1 por padrão)</para>",
                    "type": "number"
                },
                "prazoEntrega": {
                    "format": "int32",
                    "description": "Prazo de entrega do produto variante",
                    "type": "integer"
                },
                "valido": {
                    "description": "Define se um produto variante é valido ou não",
                    "type": "boolean"
                },
                "exibirSite": {
                    "description": "Define se um produto deve ser exibido no site",
                    "type": "boolean"
                },
                "freteGratis": {
                    "description": "Define a qual regra de calculo de frete o produto vai pertencer",
                    "enum": [
                        "Sempre",
                        "Nunca",
                        "Neutro",
                        "Desconsiderar_Regras"
                    ],
                    "type": "string"
                },
                "trocaGratis": {
                    "description": "Define se o produto variante tem troca grátis",
                    "type": "boolean"
                },
                "peso": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Peso do produto variante</para>",
                    "type": "number"
                },
                "altura": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Altura do produto variante</para>",
                    "type": "number"
                },
                "comprimento": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Comprimento do produto variante</para>",
                    "type": "number"
                },
                "largura": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Largura do produto variante</para>",
                    "type": "number"
                },
                "garantia": {
                    "format": "int32",
                    "description": "Define se o produto variante tem garantia",
                    "type": "integer"
                },
                "isTelevendas": {
                    "description": "Define se o produto contém televendas",
                    "type": "boolean"
                },
                "ean": {
                    "description": "(Max Length: 25)\r\n<para>EAN do produto variante</para>",
                    "maxLength": 25,
                    "minLength": 0,
                    "type": "string"
                },
                "localizacaoEstoque": {
                    "description": "(Max Length: 255)\r\n<para>Localização no estoque do produto variante</para>",
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string"
                },
                "listaAtacado": {
                    "description": "Dados de atacado do produto variante",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.Atacado"
                    }
                },
                "estoque": {
                    "description": "Lista de estoque/centro de distribuição do produto. Obrigatório se valido for true",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.Estoque"
                    }
                },
                "listaAtributos": {
                    "description": "Lista de atributos do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.ProdutoAtributo"
                    }
                },
                "quantidadeMaximaCompraUnidade": {
                    "format": "int32",
                    "description": "Quantidade máxima de compra do produto variante",
                    "type": "integer"
                },
                "quantidadeMinimaCompraUnidade": {
                    "format": "int32",
                    "description": "Quantidade mínima de compra do produto variante",
                    "type": "integer"
                },
                "condicao": {
                    "description": "Condição do produto variante",
                    "enum": [
                        "Novo",
                        "Usado",
                        "Renovado",
                        "Danificado"
                    ],
                    "type": "string"
                },
                "urlVideo": {
                    "description": "Url do vídeo do Produto",
                    "type": "string"
                },
                "spot": {
                    "description": "Se o produto aparece no Spot",
                    "type": "boolean"
                },
                "paginaProduto": {
                    "description": "Se o produto aparece na Url",
                    "type": "boolean"
                },
                "marketplace": {
                    "description": "Se o produto aparece no Marketplace",
                    "type": "boolean"
                },
                "somenteParceiros": {
                    "description": "Se o produto aparece somente nos Parceiros",
                    "default": false,
                    "type": "boolean"
                },
                "buyBox": {
                    "description": "Se o produto deve ser agrupado pelo EAN",
                    "default": false,
                    "type": "boolean"
                },
                "prazoValidade": {
                    "format": "int32",
                    "description": "Prazo de validade ou consumo do produto",
                    "type": "integer"
                },
                "consumo": {
                    "$ref": "#/definitions/NovoContratoPost.ConsumoProduto",
                    "description": "Dados de consumo de produto e se deve enviar os dias de consumo por e-mail"
                }
            }
        },
        "NovoContratoPost.Atacado": {
            "type": "object",
            "properties": {
                "precoPor": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\") - Preco Por do item por atacado",
                    "type": "number"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "Quanidade para compra de atacado",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPost.Estoque": {
            "type": "object",
            "properties": {
                "estoqueFisico": {
                    "format": "int32",
                    "description": "Estoque fisíco do produto",
                    "type": "integer"
                },
                "estoqueReservado": {
                    "format": "int32",
                    "description": "Estoque reservado do produto",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "description": "Id do centro de distribuição do estoque do produto",
                    "type": "integer"
                },
                "alertaEstoque": {
                    "format": "int32",
                    "description": "Quantidade para ativar o alerta de estoque",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPost.ProdutoAtributo": {
            "required": [
                "nome",
                "valor",
                "exibir"
            ],
            "type": "object",
            "properties": {
                "nome": {
                    "description": "(Max Length: 100) - Define o nome do atributo",
                    "type": "string"
                },
                "valor": {
                    "description": "(Max Length: 8, \"0000.0000,00\") -  Define o valor do atributo",
                    "type": "string"
                },
                "exibir": {
                    "description": "Define se o atributo deverá ser exibido",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoPut.ProdutoPut": {
            "description": "",
            "required": [
                "sku",
                "nome",
                "fabricante",
                "precoPor",
                "freteGratis",
                "peso",
                "altura",
                "comprimento",
                "largura"
            ],
            "type": "object",
            "properties": {
                "idPaiExterno": {
                    "description": "Representa o ProdutoId agrupador por variante (Campo Obsoleto. Não é mais considerado na atualização do produto)",
                    "type": "string"
                },
                "idVinculoExterno": {
                    "description": "Representa o ParentId agrupador por parent",
                    "type": "string"
                },
                "sku": {
                    "description": "(Max Length: 50)\r\n<para>Sku do produto</para>",
                    "type": "string"
                },
                "nome": {
                    "description": "(Max Length: 300)\r\n<para>Nome do produto variante</para>",
                    "type": "string"
                },
                "nomeProdutoPai": {
                    "description": "Nome do produto (pai do variante)",
                    "type": "string"
                },
                "exibirMatrizAtributos": {
                    "description": "Tipo de exibição da matriz de atributos",
                    "enum": [
                        "Sim",
                        "Nao",
                        "Neutro"
                    ],
                    "type": "string"
                },
                "contraProposta": {
                    "description": "Se o produto aceita contra proposta",
                    "type": "boolean"
                },
                "fabricante": {
                    "description": "(Max Length: 100)\r\n<para>Nome do fabricante</para>",
                    "type": "string"
                },
                "autor": {
                    "description": "(Max Length: 500)\r\n<para>Nome do autor</para>",
                    "type": "string"
                },
                "editora": {
                    "description": "(Max Length: 100)\r\n<para>Nome da editora</para>",
                    "type": "string"
                },
                "colecao": {
                    "description": "(Max Length: 100)\r\n<para>Nome da coleção</para>",
                    "type": "string"
                },
                "genero": {
                    "description": "(Max Length: 100)\r\n<para>Nome do gênero</para>",
                    "type": "string"
                },
                "precoCusto": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Preço de custo do produto variante</para>",
                    "type": "number"
                },
                "precoDe": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>\"Preço De\" do produto variante</para>",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>\"Preço Por\" de venda do produto variante</para>",
                    "type": "number"
                },
                "fatorMultiplicadorPreco": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Fator multiplicador que gera o preço de exibição do produto.</para><para>Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no \"PrecoPor\". (1 por padrão)</para>",
                    "type": "number"
                },
                "prazoEntrega": {
                    "format": "int32",
                    "description": "Prazo de entrega do produto variante",
                    "type": "integer"
                },
                "valido": {
                    "description": "Define se um produto variante é valido ou não",
                    "type": "boolean"
                },
                "exibirSite": {
                    "description": "Define se um produto deve ser exibido no site",
                    "type": "boolean"
                },
                "freteGratis": {
                    "description": "Define a qual regra de calculo de frete o produto vai pertencer",
                    "enum": [
                        "Sempre",
                        "Nunca",
                        "Neutro",
                        "Desconsiderar_Regras"
                    ],
                    "type": "string"
                },
                "trocaGratis": {
                    "description": "Define se o produto variante tem troca grátis",
                    "type": "boolean"
                },
                "peso": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Peso do produto variante</para>",
                    "type": "number"
                },
                "altura": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Altura do produto variante</para>",
                    "type": "number"
                },
                "comprimento": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Comprimento do produto variante</para>",
                    "type": "number"
                },
                "largura": {
                    "format": "double",
                    "description": "(Max Length: 8, \"0000.0000,00\")\r\n<para>Largura do produto variante</para>",
                    "type": "number"
                },
                "garantia": {
                    "format": "int32",
                    "description": "Define se o produto variante tem garantia",
                    "type": "integer"
                },
                "isTelevendas": {
                    "description": "Define se o produto contém televendas",
                    "type": "boolean"
                },
                "ean": {
                    "description": "(Max Length: 25)\r\n<para>EAN do produto variante</para>",
                    "maxLength": 25,
                    "minLength": 0,
                    "type": "string"
                },
                "localizacaoEstoque": {
                    "description": "(Max Length: 255)\r\n<para>Localização no estoque do produto variante</para>",
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string"
                },
                "listaAtacado": {
                    "description": "Dados de atacado do produto variante",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.Atacado"
                    }
                },
                "estoque": {
                    "description": "Lista de estoque/centro de distribuição do produto. Obrigatório se valido for true",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.Estoque"
                    }
                },
                "listaAtributos": {
                    "description": "Lista de atributos do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.ProdutoAtributo"
                    }
                },
                "quantidadeMaximaCompraUnidade": {
                    "format": "int32",
                    "description": "Quantidade máxima de compra do produto variante",
                    "type": "integer"
                },
                "quantidadeMinimaCompraUnidade": {
                    "format": "int32",
                    "description": "Quantidade mínima de compra do produto variante",
                    "type": "integer"
                },
                "condicao": {
                    "description": "Condição do produto variante",
                    "enum": [
                        "Novo",
                        "Usado",
                        "Renovado",
                        "Danificado"
                    ],
                    "type": "string"
                },
                "urlVideo": {
                    "description": "Url do vídeo do Produto",
                    "type": "string"
                },
                "spot": {
                    "description": "Se o produto aparece no Spot",
                    "type": "boolean"
                },
                "paginaProduto": {
                    "description": "Se o produto aparece na Url",
                    "type": "boolean"
                },
                "marketplace": {
                    "description": "Se o produto aparece no Marketplace",
                    "type": "boolean"
                },
                "somenteParceiros": {
                    "description": "Se o produto aparece somente nos Parceiros",
                    "default": false,
                    "type": "boolean"
                },
                "buyBox": {
                    "description": "Se o produto deve ser agrupado pelo EAN",
                    "default": false,
                    "type": "boolean"
                },
                "prazoValidade": {
                    "format": "int32",
                    "description": "Prazo de validade ou consumo do produto",
                    "type": "integer"
                },
                "consumo": {
                    "$ref": "#/definitions/NovoContratoPost.ConsumoProduto",
                    "description": "Dados de consumo de produto e se deve enviar os dias de consumo por e-mail"
                }
            }
        },
        "ProdutosRelacionados": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "parentId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.ProdutoAlterado": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "description": "Id do produto do variante",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "description": "Id do variante do produto",
                    "type": "integer"
                },
                "sku": {
                    "description": "Sku do produto",
                    "type": "string"
                },
                "precoDe": {
                    "format": "double",
                    "description": "Preço \"De\" base do variante",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "description": "Preço \"Por\" base do variante",
                    "type": "number"
                },
                "disponivel": {
                    "description": "Define se um produto variante é valido ou não",
                    "type": "boolean"
                },
                "valido": {
                    "description": "Define se um produto variante é valido ou não",
                    "type": "boolean"
                },
                "exibirSite": {
                    "description": "Define se um produto deve ser exibido no site",
                    "type": "boolean"
                },
                "estoque": {
                    "description": "Lista de estoque/centro de distribuição do produto. Obrigatório se valido for true",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.Estoque"
                    }
                },
                "tabelasPreco": {
                    "description": "Tabelas de preço do produto",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoGet.ProdutoVariantePrecoTabelaPreco"
                    }
                }
            }
        },
        "ProdutoDataCadastro": {
            "type": "object",
            "properties": {
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "ProdutoEstoque": {
            "type": "object",
            "properties": {
                "identificador": {
                    "type": "string"
                },
                "prazoEntrega": {
                    "format": "int32",
                    "type": "integer"
                },
                "listaEstoque": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Estoque"
                    }
                }
            }
        },
        "Estoque": {
            "type": "object",
            "properties": {
                "estoqueFisico": {
                    "format": "int32",
                    "type": "integer"
                },
                "estoqueReservado": {
                    "format": "int32",
                    "type": "integer"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "alertaEstoque": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ResultadoAtualizacaoEstoque": {
            "type": "object",
            "properties": {
                "produtosNaoAtualizados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProdutoResultadoAtualizacaoEstoque"
                    }
                },
                "produtosAtualizados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProdutoResultadoAtualizacaoEstoque"
                    }
                }
            }
        },
        "ProdutoResultadoAtualizacaoEstoque": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                },
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "resultado": {
                    "type": "boolean"
                },
                "detalhes": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPut.ProdutoPreco": {
            "type": "object",
            "properties": {
                "identificador": {
                    "description": "Identificador do produto (ProdutoVarianteId ou SKU)",
                    "type": "string"
                },
                "precoCusto": {
                    "format": "double",
                    "description": "Preço de custo do produto variante",
                    "type": "number"
                },
                "precoDe": {
                    "format": "double",
                    "description": "\"PrecoDe\" do produto variante",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "description": "\"PrecoPor\" do produto variante",
                    "type": "number"
                },
                "fatorMultiplicadorPreco": {
                    "format": "double",
                    "description": "Fator multiplicador que gera o preço de exibição do produto. Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no \"PrecoPor\". (1 por padrão)",
                    "type": "number"
                }
            }
        },
        "ResultadoAtualizacaoPreco": {
            "type": "object",
            "properties": {
                "produtosNaoAtualizados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProdutoResultadoAtualizacaoPreco"
                    }
                },
                "produtosAtualizados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProdutoResultadoAtualizacaoPreco"
                    }
                }
            }
        },
        "ProdutoResultadoAtualizacaoPreco": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                },
                "resultado": {
                    "type": "boolean"
                },
                "detalhes": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPut.ProdutoPrecoLote": {
            "required": [
                "sku",
                "precoDe",
                "precoPor"
            ],
            "type": "object",
            "properties": {
                "sku": {
                    "description": "Identificador do produto (SKU)",
                    "type": "string"
                },
                "precoCusto": {
                    "format": "double",
                    "description": "Preço de custo do produto variante. Se passado 0 irá setar os valores para zero, se for NULO, não irá atualizar o preço de custo.",
                    "type": "number"
                },
                "precoDe": {
                    "format": "double",
                    "description": "\"PrecoDe\" do produto variante",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "description": "\"PrecoPor\" do produto variante",
                    "type": "number"
                },
                "fatorMultiplicadorPreco": {
                    "format": "double",
                    "description": "Fator multiplicador que gera o preço de exibição do produto. Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no \"PrecoPor\". (1 por padrão)",
                    "type": "number"
                }
            }
        },
        "ProdutoInformacaoCompleta": {
            "type": "object",
            "properties": {
                "informacaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "titulo": {
                    "type": "string"
                },
                "texto": {
                    "type": "string"
                },
                "exibirSite": {
                    "type": "boolean"
                },
                "tipoInformacao": {
                    "enum": [
                        "Informacoes",
                        "Beneficios",
                        "Especificacoes",
                        "DadosTecnicos",
                        "Composicao",
                        "ModoDeUsar",
                        "Cuidados",
                        "ItensInclusos",
                        "Dicas",
                        "Video",
                        "Descricao",
                        "ValorReferente",
                        "PopUpReferente",
                        "Prescricao",
                        "TabelaDeMedidas",
                        "Spot",
                        "Sinopse",
                        "Carrinho"
                    ],
                    "type": "string"
                }
            }
        },
        "ProdutoInformacaoProduto": {
            "type": "object",
            "properties": {
                "titulo": {
                    "type": "string"
                },
                "texto": {
                    "type": "string"
                },
                "exibirSite": {
                    "type": "boolean"
                },
                "tipoInformacao": {
                    "enum": [
                        "Informacoes",
                        "Beneficios",
                        "Especificacoes",
                        "DadosTecnicos",
                        "Composicao",
                        "ModoDeUsar",
                        "Cuidados",
                        "ItensInclusos",
                        "Dicas",
                        "Video",
                        "Descricao",
                        "ValorReferente",
                        "PopUpReferente",
                        "Prescricao",
                        "TabelaDeMedidas",
                        "Spot",
                        "Sinopse",
                        "Carrinho"
                    ],
                    "type": "string"
                }
            }
        },
        "CategoriaCaminho": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "categoriaPaiId": {
                    "format": "int32",
                    "type": "integer"
                },
                "categoriaERPId": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "isReseller": {
                    "type": "boolean"
                },
                "exibirMatrizAtributos": {
                    "enum": [
                        "Sim",
                        "Nao",
                        "Neutro"
                    ],
                    "type": "string"
                },
                "quantidadeMaximaCompraUnidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "valorMinimoCompra": {
                    "format": "double",
                    "type": "number"
                },
                "exibeMenu": {
                    "type": "boolean"
                },
                "urlHotSite": {
                    "type": "string"
                },
                "caminhoHierarquia": {
                    "type": "string"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "categoriaPrincipal": {
                    "type": "boolean"
                }
            }
        },
        "ProdutoCategoria": {
            "type": "object",
            "properties": {
                "categoriaPrincipalId": {
                    "format": "int32",
                    "type": "integer"
                },
                "listaCategoriaId": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "ProdutoAlterarCategoriaPrincipal": {
            "type": "object",
            "properties": {
                "categoriaId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ProdutoCategoriaOrdem": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "categoriaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ResultadoAtualizacaoProdutoCategoriaOrdem": {
            "type": "object",
            "properties": {
                "sucesso": {
                    "type": "boolean"
                },
                "produtoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "categoriaId": {
                    "format": "int64",
                    "type": "integer"
                },
                "mensagem": {
                    "type": "string"
                }
            }
        },
        "ProdutoImagem": {
            "type": "object",
            "properties": {
                "idImagem": {
                    "format": "int64",
                    "type": "integer"
                },
                "nomeArquivo": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "estampa": {
                    "type": "boolean"
                },
                "exibirMiniatura": {
                    "type": "boolean"
                }
            }
        },
        "ProdutoImagemPost": {
            "type": "object",
            "properties": {
                "base64": {
                    "type": "string"
                },
                "formato": {
                    "type": "string"
                },
                "exibirMiniatura": {
                    "type": "boolean"
                },
                "estampa": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ProdutoImagemEstampaPut": {
            "type": "object",
            "properties": {
                "idImagem": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "ProdutoVariantePreco": {
            "type": "object",
            "properties": {
                "precoDe": {
                    "format": "double",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "type": "number"
                },
                "fatorMultiplicadorPreco": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "ProdutoVarianteEstoque": {
            "type": "object",
            "properties": {
                "estoqueFisico": {
                    "format": "int64",
                    "type": "integer"
                },
                "estoqueReservado": {
                    "format": "int64",
                    "type": "integer"
                },
                "listProdutoVarianteCentroDistribuicaoEstoque": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProdutoVarianteCentroDistribuicaoEstoque"
                    }
                }
            }
        },
        "ProdutoVarianteCentroDistribuicaoEstoque": {
            "type": "object",
            "properties": {
                "centroDistribuicaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "estoqueFisico": {
                    "format": "int64",
                    "type": "integer"
                },
                "estoqueReservado": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "AtacadoGet": {
            "type": "object",
            "properties": {
                "produtoVarianteAtacadoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "precoAtacado": {
                    "format": "double",
                    "type": "number"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "AtacadoPost": {
            "type": "object",
            "properties": {
                "precoAtacado": {
                    "format": "double",
                    "type": "number"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Situacao": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "ProdutoVariantePrecos": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                },
                "precoDe": {
                    "format": "double",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "type": "number"
                },
                "fatorMultiplicadorPreco": {
                    "format": "double",
                    "type": "number"
                },
                "precosTabelaPreco": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProdutoVariantePrecoTabelaPreco"
                    }
                }
            }
        },
        "ProdutoVariantePrecoTabelaPreco": {
            "type": "object",
            "properties": {
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tabelaPrecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "precoDe": {
                    "format": "double",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "ProdutoSeo": {
            "type": "object",
            "properties": {
                "tagCanonical": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "metatags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProdutoSeoMetatag"
                    }
                }
            }
        },
        "ProdutoSeoMetatag": {
            "type": "object",
            "properties": {
                "metatagId": {
                    "format": "int64",
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "httpEquiv": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.ProdutoSeoPost": {
            "description": "",
            "type": "object",
            "properties": {
                "tagCanonical": {
                    "description": "Informe a URL a ser inserida na TAG Canonical. Caso nenhum dado seja inserido, a TAG Canonical não será inserida na Página do Produto.",
                    "type": "string"
                },
                "title": {
                    "description": "Informe o title da página do produto.",
                    "type": "string"
                },
                "metaTags": {
                    "description": "Informe os dados da Meta Tag.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.ProdutoSeoMetaTag"
                    }
                }
            }
        },
        "NovoContratoPost.ProdutoSeoMetaTag": {
            "description": "",
            "type": "object",
            "properties": {
                "content": {
                    "description": "Dados da Meta Tag.",
                    "type": "string"
                },
                "httpEquiv": {
                    "description": "Dados da Meta Tag.",
                    "type": "string"
                },
                "name": {
                    "description": "Dados da Meta Tag.",
                    "type": "string"
                },
                "scheme": {
                    "description": "Dados da Meta Tag.",
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.MetatagsPost": {
            "description": "",
            "type": "object",
            "properties": {
                "metas": {
                    "description": "Lista de Meta Tags.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.ProdutoSeoMetaTag"
                    }
                }
            }
        },
        "NovoContratoPost.MetatagsDelete": {
            "description": "",
            "type": "object",
            "properties": {
                "metatags": {
                    "description": "Lista de identificadores de Meta Tags.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.Metatag"
                    }
                }
            }
        },
        "NovoContratoPost.Metatag": {
            "description": "",
            "type": "object",
            "properties": {
                "metatagId": {
                    "format": "int64",
                    "description": "Identificador do MetaTag",
                    "type": "integer"
                }
            }
        },
        "ObterPromocoesDTO": {
            "type": "object",
            "properties": {
                "promocoes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromocaoDTO"
                    }
                },
                "total": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "PromocaoDTO": {
            "type": "object",
            "properties": {
                "promocaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "dataInicio": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataTermino": {
                    "format": "date-time",
                    "type": "string"
                },
                "cupons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permiteMultiplosCupons": {
                    "type": "boolean"
                },
                "permiteAcumular": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                },
                "limiteCupomPorCliente": {
                    "format": "int64",
                    "type": "integer"
                },
                "limiteCupomTotal": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidadeTotalCuponsUtilizados": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "VincularCuponsDTO": {
            "type": "object",
            "properties": {
                "cupons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permiteReutilizarCupom": {
                    "type": "boolean"
                },
                "limiteCupomPorCliente": {
                    "format": "int32",
                    "type": "integer"
                },
                "limiteCupomTotal": {
                    "format": "int32",
                    "type": "integer"
                },
                "tokenApiPublica": {
                    "type": "string"
                }
            }
        },
        "PromocaoBaseDTO": {
            "type": "object",
            "properties": {
                "dados": {
                    "$ref": "#/definitions/PromocaoBaseDadosDTO"
                },
                "mensagem": {
                    "type": "string"
                }
            }
        },
        "PromocaoBaseDadosDTO": {
            "type": "object",
            "properties": {
                "estrutura": {
                    "$ref": "#/definitions/PromocaoBaseEstruturaDTO"
                },
                "condicoes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromocaoBaseCondicaoDTO"
                    }
                },
                "acoes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromocaoBaseAcaoDTO"
                    }
                },
                "divulgacoes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromocaoBaseDivulgacaoDTO"
                    }
                },
                "selos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromocaoBaseSeloDTO"
                    }
                },
                "parceiros": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromocaoBaseParceiroDTO"
                    }
                }
            }
        },
        "PromocaoBaseEstruturaDTO": {
            "required": [
                "nome",
                "dataInicio",
                "dataTermino",
                "permiteAcumular",
                "ativo"
            ],
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "dataInicio": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataTermino": {
                    "format": "date-time",
                    "type": "string"
                },
                "permiteAcumular": {
                    "type": "boolean"
                },
                "permiteReutilizarCupom": {
                    "type": "boolean"
                },
                "limiteCupomPorCliente": {
                    "format": "int32",
                    "type": "integer"
                },
                "limiteCupomTotal": {
                    "format": "int32",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "cupons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PromocaoBaseCondicaoDTO": {
            "required": [
                "promocaoCondicaoId",
                "promocaoLogicaId"
            ],
            "type": "object",
            "properties": {
                "promocaoCondicaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "promocaoLogicaId": {
                    "format": "int32",
                    "type": "integer"
                },
                "argumentos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromocaoBaseCondicaoArgumentoDTO"
                    }
                }
            }
        },
        "PromocaoBaseAcaoDTO": {
            "required": [
                "promocaoAcaoId"
            ],
            "type": "object",
            "properties": {
                "promocaoAcaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "argumentos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromocaoBaseAcaoArgumentoDTO"
                    }
                }
            }
        },
        "PromocaoBaseDivulgacaoDTO": {
            "required": [
                "conteudo",
                "titulo"
            ],
            "type": "object",
            "properties": {
                "tipoDivulgacao": {
                    "format": "int32",
                    "type": "integer"
                },
                "conteudo": {
                    "type": "string"
                },
                "titulo": {
                    "type": "string"
                }
            }
        },
        "PromocaoBaseSeloDTO": {
            "type": "object",
            "properties": {
                "seloId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PromocaoBaseParceiroDTO": {
            "required": [
                "parceiroId"
            ],
            "type": "object",
            "properties": {
                "parceiroId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PromocaoBaseCondicaoArgumentoDTO": {
            "required": [
                "nrOrdem",
                "valor"
            ],
            "type": "object",
            "properties": {
                "nrOrdem": {
                    "format": "int32",
                    "type": "integer"
                },
                "valor": {
                    "type": "string"
                }
            }
        },
        "PromocaoBaseAcaoArgumentoDTO": {
            "required": [
                "nrOrdem",
                "valor"
            ],
            "type": "object",
            "properties": {
                "nrOrdem": {
                    "format": "int32",
                    "type": "integer"
                },
                "valor": {
                    "type": "string"
                }
            }
        },
        "Regiao": {
            "type": "object",
            "properties": {
                "regiaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "arquivado": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "usuario": {
                    "type": "string"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "tipoRegiao": {
                    "enum": [
                        "Vitrine",
                        "Preco",
                        "PrecoEVitrine"
                    ],
                    "type": "string"
                },
                "nomePriorizacao": {
                    "type": "string"
                },
                "cDsPriorizacao": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CDPriorizacao"
                    }
                },
                "regioesFaixasCep": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoFaixaCep"
                    }
                },
                "regioesGoogle": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoGoogle"
                    }
                },
                "tabelaPreco": {
                    "$ref": "#/definitions/TabelaPrecoRegionalizacao"
                }
            }
        },
        "CDPriorizacao": {
            "type": "object",
            "properties": {
                "centroDistribuicaoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                }
            }
        },
        "RegiaoFaixaCep": {
            "type": "object",
            "properties": {
                "regiaoFaixaCepId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nomeArea": {
                    "type": "string"
                },
                "tipoRegiaoFaixaCep": {
                    "enum": [
                        "Manual",
                        "PorEndereco",
                        "PorPriorizacaoCD"
                    ],
                    "type": "string"
                },
                "cepInicial": {
                    "type": "string"
                },
                "cepFinal": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "RegiaoGoogle": {
            "type": "object",
            "properties": {
                "regiaoGoogleId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nomeArea": {
                    "type": "string"
                },
                "regiaoGoogleValor": {
                    "format": "int64",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "TabelaPrecoRegionalizacao": {
            "type": "object",
            "properties": {
                "tabelaPrecoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "dataInicial": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFinal": {
                    "format": "date-time",
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "site": {
                    "type": "boolean"
                },
                "produtosImportados": {
                    "type": "boolean"
                },
                "prioridade": {
                    "format": "int32",
                    "type": "integer"
                },
                "processado": {
                    "type": "boolean"
                }
            }
        },
        "RegionalizacaoPutDTO": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "arquivado": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "tabelaPrecoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "tipoRegiao": {
                    "enum": [
                        "Vitrine",
                        "Preco",
                        "PrecoEVitrine"
                    ],
                    "type": "string"
                },
                "nomePriorizacao": {
                    "type": "string"
                },
                "regioesFaixasCep": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoFaixaCepPutDTO"
                    }
                },
                "regioesGoogle": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoGooglePutDTO"
                    }
                }
            }
        },
        "RegiaoFaixaCepPutDTO": {
            "type": "object",
            "properties": {
                "regiaoFaixaCepId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nomeArea": {
                    "type": "string"
                },
                "tipoRegiaoFaixaCep": {
                    "enum": [
                        "Manual",
                        "PorEndereco",
                        "PorPriorizacaoCD"
                    ],
                    "type": "string"
                },
                "cepInicial": {
                    "format": "int32",
                    "type": "integer"
                },
                "cepFinal": {
                    "format": "int32",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                }
            }
        },
        "RegiaoGooglePutDTO": {
            "type": "object",
            "properties": {
                "regiaoGoogleId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nomeArea": {
                    "type": "string"
                },
                "regiaoGoogleValor": {
                    "format": "int64",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                }
            }
        },
        "RegiaoPaginacao`1": {
            "type": "object",
            "properties": {
                "totalAtivo": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalInativo": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalArquivado": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalItensCadastrados": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalItens": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalItensExibidos": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalPaginas": {
                    "format": "int32",
                    "type": "integer"
                },
                "paginaAtual": {
                    "format": "int32",
                    "type": "integer"
                },
                "itens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoItem"
                    }
                }
            }
        },
        "RegiaoItem": {
            "type": "object",
            "properties": {
                "regiaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tipoRegiao": {
                    "enum": [
                        "Vitrine",
                        "Preco",
                        "PrecoEVitrine"
                    ],
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "arquivado": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "usuario": {
                    "type": "string"
                },
                "tabelaPrecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tabelaPreco": {
                    "type": "string"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCriacaoFormatada": {
                    "type": "string"
                },
                "nomePriorizacao": {
                    "type": "string"
                },
                "regiaoFaixaCepInicial": {
                    "type": "string"
                },
                "regiaoFaixaCepFinal": {
                    "type": "string"
                },
                "regiaoGoogle": {
                    "type": "string"
                },
                "totalFaixasCeps": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalRegioesGoogle": {
                    "format": "int32",
                    "type": "integer"
                },
                "regioesFaixasCep": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoFaixaCepItem"
                    }
                },
                "regioesGoogle": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoGoogleItem"
                    }
                }
            }
        },
        "RegiaoFaixaCepItem": {
            "type": "object",
            "properties": {
                "regiaoFaixaCepId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nomeArea": {
                    "type": "string"
                },
                "tipoRegiaoFaixaCep": {
                    "enum": [
                        "Manual",
                        "PorEndereco",
                        "PorPriorizacaoCD"
                    ],
                    "type": "string"
                },
                "cepInicial": {
                    "type": "string"
                },
                "cepFinal": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "RegiaoGoogleItem": {
            "type": "object",
            "properties": {
                "regiaoGoogleId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nomeArea": {
                    "type": "string"
                },
                "regiaoGoogleValor": {
                    "format": "int64",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "RegionalizacaoPostDTO": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "arquivado": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "usuario": {
                    "type": "string"
                },
                "tabelaPrecoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "tipoRegiao": {
                    "enum": [
                        "Vitrine",
                        "Preco",
                        "PrecoEVitrine"
                    ],
                    "type": "string"
                },
                "nomePriorizacao": {
                    "type": "string"
                },
                "regioesFaixasCep": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoFaixaCepPostDTO"
                    }
                },
                "regioesGoogle": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegiaoGooglePostDTO"
                    }
                }
            }
        },
        "RegiaoFaixaCepPostDTO": {
            "type": "object",
            "properties": {
                "nomeArea": {
                    "type": "string"
                },
                "tipoRegiaoFaixaCep": {
                    "enum": [
                        "Manual",
                        "PorEndereco",
                        "PorPriorizacaoCD"
                    ],
                    "type": "string"
                },
                "cepInicial": {
                    "format": "int32",
                    "type": "integer"
                },
                "cepFinal": {
                    "format": "int32",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                }
            }
        },
        "RegiaoGooglePostDTO": {
            "type": "object",
            "properties": {
                "nomeArea": {
                    "type": "string"
                },
                "regiaoGoogleValor": {
                    "format": "int64",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                }
            }
        },
        "RegionalizacaoPostResult": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "RegiaoArquivar": {
            "type": "object",
            "properties": {
                "arquivado": {
                    "type": "boolean"
                }
            }
        },
        "RegiaoArquivarResultado": {
            "type": "object",
            "properties": {
                "sucesso": {
                    "type": "boolean"
                }
            }
        },
        "NovoContratoGet.Reseller": {
            "type": "object",
            "properties": {
                "resellerId": {
                    "format": "int64",
                    "description": "Id do reseller",
                    "type": "integer"
                },
                "razaoSocial": {
                    "description": "Razão Social/Nome do Reseller",
                    "type": "string"
                },
                "centroDistribuicaoId": {
                    "format": "int64",
                    "description": "Id do centro de distribuição do reseller",
                    "type": "integer"
                },
                "ativo": {
                    "description": "Reseller Ativo/Inativo",
                    "type": "boolean"
                },
                "ativacaoAutomaticaProdutos": {
                    "description": "Se o reseller tem ativação automática dos produtos",
                    "type": "boolean"
                },
                "autonomia": {
                    "description": "Se o reseller tem autononia",
                    "type": "boolean"
                },
                "buyBox": {
                    "description": "Se o reseller tem buybox",
                    "type": "boolean"
                },
                "nomeMarketPlace": {
                    "description": "Retorna o Nome do marketplace",
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.ResellerPost": {
            "required": [
                "razaoSocial",
                "cnpj",
                "inscricaoEstadual",
                "isento",
                "email",
                "telefone",
                "tipoAutonomia",
                "ativo",
                "split",
                "buyBox",
                "ativacaoAutomaticaProdutos",
                "cep"
            ],
            "type": "object",
            "properties": {
                "razaoSocial": {
                    "description": "Razão Social/Nome do Reseller",
                    "type": "string"
                },
                "cnpj": {
                    "description": "CNPJ do Seller",
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "description": "Inscrição Estadual do Seller",
                    "type": "string"
                },
                "isento": {
                    "description": "Seller isento de inscrição estadual",
                    "type": "boolean"
                },
                "email": {
                    "description": "Email de contato do Seller",
                    "type": "string"
                },
                "telefone": {
                    "description": "Telefone de contato do seller com ddd (xx) xxxx-xxxx",
                    "type": "string"
                },
                "tipoAutonomia": {
                    "description": "Tipo de autonomia do vendedor",
                    "enum": [
                        "ComAutonomia",
                        "SemAutonomia"
                    ],
                    "type": "string"
                },
                "ativo": {
                    "description": "Seller Ativo",
                    "type": "boolean"
                },
                "split": {
                    "description": "Se irá ter Split de frete",
                    "default": false,
                    "type": "boolean"
                },
                "buyBox": {
                    "description": "Se o produto deverá ser apresentado em BuyBox (apenas para Seller's e Marketplace's TrayCorp)",
                    "default": false,
                    "type": "boolean"
                },
                "ativacaoAutomaticaProdutos": {
                    "description": "Se os produtos deverão sem ativados automaticamente no marketplace",
                    "default": false,
                    "type": "boolean"
                },
                "cep": {
                    "description": "Cep do Seller (utilizado para o calculo de frete)",
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.ResellerPostResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "Token de acesso do seller",
                    "type": "string"
                },
                "resellerId": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "NovoContratoPut.ResellerPut": {
            "required": [
                "razaoSocial",
                "cnpj",
                "inscricaoEstadual",
                "isento",
                "email",
                "telefone",
                "tipoAutonomia",
                "ativo",
                "split",
                "buyBox",
                "ativacaoAutomaticaProdutos",
                "cep"
            ],
            "type": "object",
            "properties": {
                "razaoSocial": {
                    "description": "Razão Social/Nome do Reseller",
                    "type": "string"
                },
                "cnpj": {
                    "description": "CNPJ do Seller",
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "description": "Inscrição Estadual do Seller",
                    "type": "string"
                },
                "isento": {
                    "description": "Seller isento de inscrição estadual",
                    "type": "boolean"
                },
                "email": {
                    "description": "Email de contato do Seller",
                    "type": "string"
                },
                "telefone": {
                    "description": "Telefone de contato do seller com ddd (xx) xxxx-xxxx",
                    "type": "string"
                },
                "tipoAutonomia": {
                    "description": "Tipo de autonomia do vendedor",
                    "enum": [
                        "ComAutonomia",
                        "SemAutonomia"
                    ],
                    "type": "string"
                },
                "ativo": {
                    "description": "Seller Ativo",
                    "type": "boolean"
                },
                "split": {
                    "description": "Se irá ter Split de frete",
                    "default": false,
                    "type": "boolean"
                },
                "buyBox": {
                    "description": "Se o produto deverá ser apresentado em BuyBox (apenas para Seller's e Marketplace's TrayCorp)",
                    "default": false,
                    "type": "boolean"
                },
                "ativacaoAutomaticaProdutos": {
                    "description": "Se os produtos deverão sem ativados automaticamente no marketplace",
                    "default": false,
                    "type": "boolean"
                },
                "cep": {
                    "description": "Cep do Seller (utilizado para o calculo de frete)",
                    "type": "string"
                }
            }
        },
        "ResellerStatus": {
            "type": "object",
            "properties": {
                "ativo": {
                    "type": "boolean"
                }
            }
        },
        "SituacaoPedido": {
            "type": "object",
            "properties": {
                "situacaoPedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "observacao": {
                    "type": "string"
                }
            }
        },
        "TabelaPreco": {
            "type": "object",
            "properties": {
                "tabelaPrecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "dataInicial": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFinal": {
                    "format": "date-time",
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "isSite": {
                    "type": "boolean"
                }
            }
        },
        "TabelaPrecoPost": {
            "required": [
                "nome",
                "dataInicial",
                "dataFinal",
                "ativo"
            ],
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "dataInicial": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFinal": {
                    "format": "date-time",
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                }
            }
        },
        "TabelaPrecoProdutoVariante": {
            "type": "object",
            "properties": {
                "tabelaPrecoProdutoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "tabelaPrecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "sku": {
                    "type": "string"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "precoDe": {
                    "format": "double",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "TabelaPrecoProdutoVariantePost": {
            "required": [
                "sku",
                "precoDe",
                "precoPor"
            ],
            "type": "object",
            "properties": {
                "sku": {
                    "type": "string"
                },
                "precoDe": {
                    "format": "double",
                    "type": "number"
                },
                "precoPor": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "TabelaPrecoProdutoVariantePostRetorno": {
            "type": "object",
            "properties": {
                "sucesso": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TabelaPrecoProdutoVarianteResultado"
                    }
                },
                "erro": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TabelaPrecoProdutoVarianteResultado"
                    }
                }
            }
        },
        "TabelaPrecoProdutoVarianteResultado": {
            "type": "object",
            "properties": {
                "sku": {
                    "type": "string"
                },
                "resultado": {
                    "type": "boolean"
                },
                "detalhes": {
                    "type": "string"
                }
            }
        },
        "TipoEventoSugestaoProduto": {
            "type": "object",
            "properties": {
                "tipoEventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoVariantePrincipalId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ResultadoInsercaoSugestaoProdutoTipoEvento": {
            "type": "object",
            "properties": {
                "sugestaoProdutosInseridos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SugestaoProdutoResultadoInsercao"
                    }
                },
                "produtosNaoInseridos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SugestaoProdutoResultadoInsercao"
                    }
                }
            }
        },
        "SugestaoProdutoResultadoInsercao": {
            "type": "object",
            "properties": {
                "tipoEventoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "type": "integer"
                },
                "detalhes": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.TipoEventoSugestaoProduto": {
            "description": "",
            "required": [
                "tipoEventoId",
                "produtoVarianteId"
            ],
            "type": "object",
            "properties": {
                "tipoEventoId": {
                    "format": "int64",
                    "description": "",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "description": "",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Usuario": {
            "required": [
                "tipoPessoa",
                "origemContato",
                "nome",
                "email",
                "telefoneResidencial"
            ],
            "type": "object",
            "properties": {
                "usuarioId": {
                    "format": "int64",
                    "type": "integer"
                },
                "bloqueado": {
                    "type": "boolean"
                },
                "grupoInformacaoCadastral": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UsuarioGrupoInformacaoCadastral"
                    }
                },
                "tipoPessoa": {
                    "enum": [
                        "Fisica",
                        "Juridica"
                    ],
                    "type": "string"
                },
                "origemContato": {
                    "enum": [
                        "Google",
                        "Bing",
                        "Jornal",
                        "PatrocinioEsportivo",
                        "RecomendacaoAlguem",
                        "Revista",
                        "SiteInternet",
                        "Televisao",
                        "Outro",
                        "UsuarioImportadoViaAdmin",
                        "PayPalExpress"
                    ],
                    "type": "string"
                },
                "tipoSexo": {
                    "enum": [
                        "Undefined",
                        "Masculino",
                        "Feminino"
                    ],
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "rg": {
                    "type": "string"
                },
                "telefoneResidencial": {
                    "type": "string"
                },
                "telefoneCelular": {
                    "type": "string"
                },
                "telefoneComercial": {
                    "type": "string"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "type": "string"
                },
                "razaoSocial": {
                    "type": "string"
                },
                "cnpj": {
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "type": "string"
                },
                "responsavel": {
                    "type": "string"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "revendedor": {
                    "type": "boolean"
                },
                "listaInformacaoCadastral": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UsuarioGrupoInformacaoCadastral"
                    }
                },
                "avatar": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "aprovado": {
                    "type": "boolean"
                }
            }
        },
        "UsuarioGrupoInformacaoCadastral": {
            "type": "object",
            "properties": {
                "chave": {
                    "type": "string"
                },
                "valor": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.UsuarioPost": {
            "description": "",
            "required": [
                "tipoPessoa",
                "origemContato",
                "nome",
                "email",
                "telefoneResidencial"
            ],
            "type": "object",
            "properties": {
                "tipoPessoa": {
                    "description": "",
                    "enum": [
                        "Fisica",
                        "Juridica"
                    ],
                    "type": "string"
                },
                "origemContato": {
                    "description": "",
                    "enum": [
                        "Google",
                        "Bing",
                        "Jornal",
                        "PatrocinioEsportivo",
                        "RecomendacaoAlguem",
                        "Revista",
                        "SiteInternet",
                        "Televisao",
                        "Outro",
                        "UsuarioImportadoViaAdmin",
                        "PayPalExpress"
                    ],
                    "type": "string"
                },
                "tipoSexo": {
                    "description": "",
                    "enum": [
                        "Undefined",
                        "Masculino",
                        "Feminino"
                    ],
                    "type": "string"
                },
                "nome": {
                    "description": "(Max Length: 100)\r\n<para>Nome do usuário</para>",
                    "type": "string"
                },
                "cpf": {
                    "description": "(Max Length: 50)\r\n<para>CPF do usuário caso seja pessoa física</para>",
                    "type": "string"
                },
                "email": {
                    "description": "(Max Length: 100)\r\n<para>Email do usuário</para>",
                    "type": "string"
                },
                "rg": {
                    "description": "(Max Length: 50)\r\n<para>RG do usuário caso seja pessoa física</para>",
                    "type": "string"
                },
                "telefoneResidencial": {
                    "description": "(Max Length: 50)\r\n<para>Telefone residencial do usuário. Deve ser informado o DDD junto ao número.</para>",
                    "type": "string"
                },
                "telefoneCelular": {
                    "description": "(Max Length: 50)\r\n<para>Telefone celular do usuário. Deve ser informado o DDD junto ao número.</para>",
                    "type": "string"
                },
                "telefoneComercial": {
                    "description": "(Max Length: 50)\r\n<para>Telefone comercial do usuário. Deve ser informado o DDD junto ao número.</para>",
                    "type": "string"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "razaoSocial": {
                    "description": "(Max Length: 100)\r\n<para>Razão social do usuário, caso seja uma pessoa jurídica.</para>",
                    "type": "string"
                },
                "cnpj": {
                    "description": "(Max Length: 50)\r\n<para>CNPJ do usuário, caso seja uma pessoa jurídica.</para>",
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "description": "(Max Length: 50)\r\n<para>Inscrição estadual do usuário, caso seja uma pessoa jurídica.</para>",
                    "type": "string"
                },
                "responsavel": {
                    "description": "(Max Length: 100)\r\n<para></para>",
                    "type": "string"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "revendedor": {
                    "description": "",
                    "type": "boolean"
                },
                "listaInformacaoCadastral": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.UsuarioGrupoInformacaoCadastral"
                    }
                },
                "avatar": {
                    "description": "(Max Length: 50)\r\n<para></para>",
                    "type": "string"
                },
                "ip": {
                    "description": "(Max Length: 20)\r\n<para></para>",
                    "type": "string"
                },
                "aprovado": {
                    "description": "Seta ou retorna o valor de Aprovado.",
                    "type": "boolean"
                }
            }
        },
        "NovoContratoPost.UsuarioGrupoInformacaoCadastral": {
            "description": "",
            "type": "object",
            "properties": {
                "chave": {
                    "description": "",
                    "type": "string"
                },
                "valor": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "UsuarioPost": {
            "required": [
                "tipoPessoa",
                "origemContato",
                "nome",
                "email",
                "telefoneResidencial"
            ],
            "type": "object",
            "properties": {
                "tipoPessoa": {
                    "enum": [
                        "Fisica",
                        "Juridica"
                    ],
                    "type": "string"
                },
                "origemContato": {
                    "enum": [
                        "Google",
                        "Bing",
                        "Jornal",
                        "PatrocinioEsportivo",
                        "RecomendacaoAlguem",
                        "Revista",
                        "SiteInternet",
                        "Televisao",
                        "Outro",
                        "UsuarioImportadoViaAdmin",
                        "PayPalExpress"
                    ],
                    "type": "string"
                },
                "tipoSexo": {
                    "enum": [
                        "Undefined",
                        "Masculino",
                        "Feminino"
                    ],
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "rg": {
                    "type": "string"
                },
                "telefoneResidencial": {
                    "type": "string"
                },
                "telefoneCelular": {
                    "type": "string"
                },
                "telefoneComercial": {
                    "type": "string"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "type": "string"
                },
                "razaoSocial": {
                    "type": "string"
                },
                "cnpj": {
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "type": "string"
                },
                "responsavel": {
                    "type": "string"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataAtualizacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "revendedor": {
                    "type": "boolean"
                },
                "listaInformacaoCadastral": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UsuarioGrupoInformacaoCadastral"
                    }
                },
                "avatar": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "aprovado": {
                    "type": "boolean"
                }
            }
        },
        "UsuarioGrupoInformacaoCadastralEmLote": {
            "type": "object",
            "properties": {
                "usuarioIdentificador": {
                    "type": "string"
                },
                "informacoesCadastrais": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GrupoInformacaoCadastralEmLote"
                    }
                }
            }
        },
        "GrupoInformacaoCadastralEmLote": {
            "type": "object",
            "properties": {
                "grupoInformacaoCadastral": {
                    "enum": [
                        "PessoaFisica",
                        "PessoaJuridica",
                        "NewsLetter",
                        "CadastroPersonalizado"
                    ],
                    "type": "string"
                },
                "chave": {
                    "type": "string"
                },
                "valor": {
                    "type": "string"
                }
            }
        },
        "ResultadoAtualizacaoUsuarioInformacaoCadastral": {
            "type": "object",
            "properties": {
                "usuariosNaoAtualizados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResultadoAtualizacao"
                    }
                },
                "usuariosAtualizados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResultadoAtualizacao"
                    }
                }
            }
        },
        "ResultadoAtualizacao": {
            "type": "object",
            "properties": {
                "indice": {
                    "format": "int32",
                    "type": "integer"
                },
                "identificador": {
                    "type": "string"
                },
                "chave": {
                    "type": "string"
                },
                "valor": {
                    "type": "string"
                },
                "grupoInformacaoCadastralId": {
                    "format": "int32",
                    "type": "integer"
                },
                "resultado": {
                    "type": "boolean"
                },
                "detalhes": {
                    "type": "string"
                }
            }
        },
        "Endereco": {
            "required": [
                "nomeEndereco",
                "rua",
                "numero",
                "bairro",
                "cidade",
                "estado",
                "cep"
            ],
            "type": "object",
            "properties": {
                "enderecoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nomeEndereco": {
                    "type": "string"
                },
                "rua": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "referencia": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "estado": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "utilizadoUltimoPedido": {
                    "type": "boolean"
                },
                "pais": {
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.EnderecoPost": {
            "description": "",
            "required": [
                "nomeEndereco",
                "rua",
                "numero",
                "bairro",
                "cidade",
                "estado",
                "cep"
            ],
            "type": "object",
            "properties": {
                "nomeEndereco": {
                    "description": "(Max Length: 100)\r\n<para>Nome de identificação do endereço a ser cadastrado.</para>",
                    "type": "string"
                },
                "rua": {
                    "description": "(Max Length: 500)\r\n<para> Nome da rua.</para>",
                    "type": "string"
                },
                "numero": {
                    "description": "(Max Length: 50)\r\n<para>Número do local.</para>",
                    "type": "string"
                },
                "complemento": {
                    "description": "(Max Length: 250)\r\n<para>Complemento.</para>",
                    "type": "string"
                },
                "referencia": {
                    "description": "(Max Length: 500)\r\n<para>Referência para a localização do endereço.</para>",
                    "type": "string"
                },
                "bairro": {
                    "description": "(Max Length: 100)\r\n<para>Bairro do endereço.</para>",
                    "type": "string"
                },
                "cidade": {
                    "description": "(Max Length: 100)\r\n<para>Cidade em que se localiza o endereço.</para>",
                    "type": "string"
                },
                "estado": {
                    "description": "(Max Length: 100)\r\n<para>O estado.</para>",
                    "type": "string"
                },
                "cep": {
                    "description": "(Max Length: 50)\r\n<para>Código do cep.</para>",
                    "type": "string"
                },
                "pais": {
                    "description": "(Max Length: 500)\r\n<para>País do endereço.</para>",
                    "type": "string"
                }
            }
        },
        "EnderecoStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "Post": {
            "type": "object",
            "properties": {
                "parceiroId": {
                    "format": "int64",
                    "type": "integer"
                },
                "vinculoVitalicio": {
                    "type": "boolean"
                },
                "dataInicial": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFinal": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Put": {
            "type": "object",
            "properties": {
                "vinculoVitalicio": {
                    "type": "boolean"
                },
                "dataInicial": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFinal": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "UsuarioLimiteCredito": {
            "type": "object",
            "properties": {
                "usuarioId": {
                    "format": "int64",
                    "type": "integer"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "saldo": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "UsuarioNewsletter": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sexo": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "grupoInformacao": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UsuarioNewsletterGrupoInformacao"
                    }
                }
            }
        },
        "UsuarioNewsletterGrupoInformacao": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "valor": {
                    "type": "string"
                }
            }
        },
        "PedidoHATEOAS": {
            "type": "object",
            "properties": {
                "pedidoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.UsuarioComunicacao": {
            "description": "",
            "type": "object",
            "properties": {
                "recebimentoNewsletter": {
                    "description": "Retorna se o usuário ativou o o recebimento de newsletter",
                    "type": "boolean"
                }
            }
        },
        "UsuarioComunicacao": {
            "type": "object",
            "properties": {
                "recebimentoNewsletter": {
                    "type": "boolean"
                },
                "nome": {
                    "type": "string"
                },
                "tipoSexo": {
                    "enum": [
                        "Undefined",
                        "Masculino",
                        "Feminino"
                    ],
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.UsuarioListaDesejos": {
            "type": "object",
            "properties": {
                "produtoId": {
                    "format": "int64",
                    "description": "Id do produto",
                    "type": "integer"
                },
                "produtoVarianteId": {
                    "format": "int64",
                    "description": "Id do produto variante",
                    "type": "integer"
                },
                "quantidade": {
                    "format": "int32",
                    "description": "Quantidade do produto",
                    "type": "integer"
                },
                "dataAdicao": {
                    "format": "date-time",
                    "description": "Data da adição do produto na lista de desejo",
                    "type": "string"
                }
            }
        },
        "UsuarioImagemPost": {
            "type": "object",
            "properties": {
                "base64": {
                    "type": "string"
                },
                "formato": {
                    "type": "string"
                }
            }
        },
        "NovoContratoGet.UsuarioAvatar": {
            "description": "",
            "type": "object",
            "properties": {
                "urlAvatar": {
                    "description": "Retorna a url de avatar do usuário",
                    "type": "string"
                }
            }
        },
        "NovoContratoPost.UsuarioCamposGrupoInformacaoCadastral": {
            "description": "",
            "required": [
                "nome",
                "tipo",
                "obrigatorio",
                "ordem"
            ],
            "type": "object",
            "properties": {
                "nome": {
                    "description": "<para>Nome do campo</para>",
                    "type": "string"
                },
                "tipo": {
                    "description": "",
                    "enum": [
                        "TextoLivre",
                        "ValoresPredefinidos",
                        "RadioButton"
                    ],
                    "type": "string"
                },
                "obrigatorio": {
                    "description": "",
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "valorPreDefinido": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NovoContratoPost.UsuarioValoresDefinidosCampoGrupoInformacao"
                    }
                }
            }
        },
        "NovoContratoPost.UsuarioValoresDefinidosCampoGrupoInformacao": {
            "type": "object",
            "properties": {
                "valor": {
                    "type": "string"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "UsuarioCamposGrupoInformacaoCadastral": {
            "type": "object",
            "properties": {
                "grupoInformacaoCadastralId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "tipo": {
                    "enum": [
                        "TextoLivre",
                        "ValoresPredefinidos",
                        "RadioButton"
                    ],
                    "type": "string"
                },
                "obrigatorio": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "valorPreDefinido": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UsuarioValoresDefinidosCampoGrupoInformacao"
                    }
                }
            }
        },
        "UsuarioValoresDefinidosCampoGrupoInformacao": {
            "type": "object",
            "properties": {
                "valoresDefinidosCampoGrupoInformacaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "valor": {
                    "type": "string"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "UsuarioCamposGrupoInformacaoCadastralPut": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "obrigatorio": {
                    "type": "boolean"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "UsuarioValoresDefinidosCampoGrupoInformacaoPut": {
            "type": "object",
            "properties": {
                "valor": {
                    "type": "string"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "UsuarioAprovar": {
            "required": [
                "identificador",
                "aprovado"
            ],
            "type": "object",
            "properties": {
                "identificador": {
                    "type": "string"
                },
                "aprovado": {
                    "type": "boolean"
                }
            }
        },
        "ResultadoAprovacaoUsuarios": {
            "type": "object",
            "properties": {
                "usuariosAtualizados": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usuariosNaoAtualizados": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "BloquearUsuario": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "bloqueado": {
                    "type": "boolean"
                }
            }
        },
        "ResultadoBloquearUsuario": {
            "type": "object",
            "properties": {
                "usuariosAtualizados": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usuariosNaoAtualizados": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "InscricaoGet": {
            "type": "object",
            "properties": {
                "inscricaoId": {
                    "format": "int64",
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "appUrl": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "emailResponsavel": {
                    "type": "string"
                },
                "topico": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usuario": {
                    "type": "string"
                },
                "header": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HeaderGet"
                    }
                }
            }
        },
        "HeaderGet": {
            "type": "object",
            "properties": {
                "headerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "chave": {
                    "type": "string"
                },
                "valor": {
                    "type": "string"
                }
            }
        },
        "TopicoGet": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "description": "API Key Authentication",
            "name": "Authorization",
            "in": "header"
        }
    }
}